#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Software Install Script
	#
	#////////////////////////////////////
	# Created by Dan Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/dietpi-software
	# - Installs "ready to run" software and optimized configs unique to each Pi Model/Version
	# - Generates and uses /DietPi/dietpi/.installed (software list) # 0=not installed, 1=selected for install, 2=installed
	#////////////////////////////////////

	#/////////////////////////////////////////////////////////////////////////////////////
	#Exit Paths
	#/////////////////////////////////////////////////////////////////////////////////////
	#Exit path for non-root logins.
	if (( $UID != 0 )); then
		clear
		echo -e "\n ERROR: You do not have root privileges.\n Please login as root, or, use:\n sudo dietpi-software\n"
		
		exit
	fi

	#/////////////////////////////////////////////////////////////////////////////////////
	#Obtain Install Stage Index (File always exists - is set with finalized)
	#/////////////////////////////////////////////////////////////////////////////////////
	# -3 = first boot / -2 = partition / -1 = filesystem / 0 = run dietpi-software at login / 1 = completed
	DIETPI_INSTALL_STAGE=$(cat /DietPi/dietpi/.install_stage)

	#/////////////////////////////////////////////////////////////////////////////////////
	#Obtain Pi Model Index & Obtain Pi Model Description
	#/////////////////////////////////////////////////////////////////////////////////////
	HW_MODEL=$(sed -n 1p /DietPi/dietpi/.hw_model) # 0=1(256) 1=1(512) 2=2(1024)
	HW_MODEL_DESCRIPTION=$(sed -n 2p /DietPi/dietpi/.hw_model)
	DISTRO=$(sed -n 3p /DietPi/dietpi/.hw_model)

	#cpu/core count
	CPU_CORES_TOTAL=$(nproc)

	#/////////////////////////////////////////////////////////////////////////////////////
	#Check Internet Connection
	#/////////////////////////////////////////////////////////////////////////////////////
	INTERNET_CONNECTED=0
	INTERNET_URL_TEST='http://google.com'
	if (( $DISTRO == 1 )); then
		INTERNET_URL_TEST='http://mirrordirector.raspbian.org'
	elif (( $DISTRO == 2 )); then
		INTERNET_URL_TEST='http://ports.ubuntu.com/ubuntu-ports'
	fi

	Check_Internet_Connection(){

		INTERNET_CONNECTED=0
		while (( $INTERNET_CONNECTED == 0 )); do

			/DietPi/dietpi/func/check_connection 10 2 "$INTERNET_URL_TEST"	
			if (( $? == 0 )); then
				INTERNET_CONNECTED=1
			else
				Menu_No_Internet
			fi

		done
		
	}
	
	#/////////////////////////////////////////////////////////////////////////////////////
	#Filepath
	#/////////////////////////////////////////////////////////////////////////////////////
	FILEPATH_INSTALLED_FILE="/DietPi/dietpi/.installed"

	#Used to set data directories (eg: usbdrive /mnt/usb_1)
	TARGET_DIRECTORY="$HOME"

	#Uninstall temp file
	UNINSTALL_FILE='/tmp/dietpi_uninstall_list'

	#Default user content folders used in DietPi.
	FOLDER_MUSIC='Music'
	FOLDER_PICTURES='Pictures'
	FOLDER_VIDEO='Video'
	FOLDER_DOWNLOADS='downloads'

	Create_UserContent_Folders(){

		mkdir -p "$TARGET_DIRECTORY"/"$FOLDER_MUSIC" &> /dev/null
		mkdir -p "$TARGET_DIRECTORY"/"$FOLDER_PICTURES" &> /dev/null
		mkdir -p "$TARGET_DIRECTORY"/"$FOLDER_VIDEO" &> /dev/null
		mkdir -p "$TARGET_DIRECTORY"/"$FOLDER_DOWNLOADS" &> /dev/null

	}
	
	Download_Test_Media(){

		#Grab My test music
		wget https://dl.dropboxusercontent.com/u/33437507/dietpi_wget/fourdee_tech.ogg -O "$TARGET_DIRECTORY/$FOLDER_MUSIC"/fourdee_tech.ogg
		
		#Grab Absolute Radio Streams
		wget http://network.absoluteradio.co.uk/core/audio/ogg/live.pls?service=vrbb -O "$TARGET_DIRECTORY/$FOLDER_MUSIC"/Absolute-Radio.pls
		wget http://network.absoluteradio.co.uk/core/audio/ogg/live.pls?service=a8bb -O "$TARGET_DIRECTORY/$FOLDER_MUSIC"/Absolute-Radio-80s.pls
		wget http://network.absoluteradio.co.uk/core/audio/ogg/live.pls?service=a9bb -O "$TARGET_DIRECTORY/$FOLDER_MUSIC"/Absolute-Radio-90s.pls
		wget http://network.absoluteradio.co.uk/core/audio/ogg/live.pls?service=a0bb -O "$TARGET_DIRECTORY/$FOLDER_MUSIC"/Absolute-Radio-00s.pls

	}
	
	#/////////////////////////////////////////////////////////////////////////////////////
	# Installation System
	#/////////////////////////////////////////////////////////////////////////////////////
	#Run Instalation Flag (1 = run installs)
	GOSTARTINSTALL=0
	INSTALL_URL_ADDRESS=""
	INSTALL_DESCRIPTION='DietPi'

	#DietPi Software
	INSTALL_DIETPI_CHOICESMADE=false

	#Installed state # 0 = not installed / 1 = to be installed / 2 = installed
	USBDRIVE=0
	GRASSHOPPER=0
	DESKTOP_LXDE=0

	WEBSERVER_LAMP=0
	WEBSERVER_LEMP=0
	WEBSERVER_LASP=0
	WEBSERVER_LESP=0

	WEBSERVER_APACHE=0
	WEBSERVER_NGINX=0
	WEBSERVER_MYSQL=0
	WEBSERVER_SQLITE=0
	WEBSERVER_PHP=0
	WEBSERVER_MYADMINPHP=0

	FILESERVER_PROFTP=0
	FILESERVER_SAMBA=0
	FILESERVER_VSFTPD=0

	OWNCLOUD=0
	TRANSMISSION=0
	PHPBB=0
	HIFI=0
	KODI=0
	RETROPIE=0
	MINIDLNA=0
	NOIPDYNDNS=0
	VPNSERVER=0
	OPENTYRIAN=0
	DIETPICAM=0
	DELUGE=0
	RASPCONTROL=0
	LINUXDASH=0
	PIHOLE=0
	SUBSONIC=0
	WEAVED=0
	WEBIOPI=0

	#Linux Software
	INSTALL_LINUX_CHOICESMADE=false
	VIMFULL=0
	SSHCLIENT=0
	SMBCLIENT=0
	RPIGPIO=0
	GITCLIENT=0
	BUILDESSENTIAL=0
	ALSABASE=0
	XSERVERXORG=0
	CURLFTPFS=0
	SUDO_AUTH=0
	SSHSERVER_DROPBEAR=2
	SSHSERVER_OPENSSH=0
	LOGGING_LOGROTATE=0
	LOGGING_RAMLOG=2
	LOGGING_RSYSLOG=0

	#SSH Server Choices system
	INSTALL_SSHSERVER_CHOICESMADE=false
	# 0=none -1=dropbear -2=openssh
	INDEX_SSHSERVER_CURRENT=-1
	INDEX_SSHSERVER_TARGET=-1

	#Fileserver Choices system
	INSTALL_FILESERVER_CHOICESMADE=false
	# 0=none -1=proftp -2=samba -3=NOT ACTIVE (vsftpd)
	INDEX_FILESERVER_CURRENT=0
	INDEX_FILESERVER_TARGET=0

	#Logging Choices system
	INSTALL_LOGGING_CHOICESMADE=false
	# 0=none -1=ramlog 24h clear -2=ramlog 1hour backup, clear -3=logrotate
	INDEX_LOGGING_CURRENT=-1
	INDEX_LOGGING_TARGET=-1

	Write_InstallFileList(){
		
		#Clear previous file
		rm "$FILEPATH_INSTALLED_FILE" &> /dev/null

		echo -e "#DietPi External Drive" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "USBDRIVE $USBDRIVE" >> "$FILEPATH_INSTALLED_FILE"
		
		echo -e "#DietPi Software" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "GRASSHOPPER $GRASSHOPPER" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "DESKTOP_LXDE $DESKTOP_LXDE" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "WEBSERVER_LAMP $WEBSERVER_LAMP" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "WEBSERVER_LEMP $WEBSERVER_LEMP" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "WEBSERVER_LASP $WEBSERVER_LASP" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "WEBSERVER_LESP $WEBSERVER_LESP" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "WEBSERVER_NGINX $WEBSERVER_NGINX" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "WEBSERVER_APACHE $WEBSERVER_APACHE" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "WEBSERVER_MYSQL $WEBSERVER_MYSQL" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "WEBSERVER_SQLITE $WEBSERVER_SQLITE" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "WEBSERVER_PHP $WEBSERVER_PHP" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "WEBSERVER_MYADMINPHP $WEBSERVER_MYADMINPHP" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "OWNCLOUD $OWNCLOUD" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "TRANSMISSION $TRANSMISSION" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "PHPBB $PHPBB" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "HIFI $HIFI" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "KODI $KODI" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "RETROPIE $RETROPIE" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "MINIDLNA $MINIDLNA" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "NOIPDYNDNS $NOIPDYNDNS" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "VPNSERVER $VPNSERVER" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "OPENTYRIAN $OPENTYRIAN" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "DIETPICAM $DIETPICAM" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "DELUGE $DELUGE" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "FILESERVER_SAMBA $FILESERVER_SAMBA" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "FILESERVER_PROFTP $FILESERVER_PROFTP" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "FILESERVER_VSFTPD $FILESERVER_VSFTPD" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "RASPCONTROL $RASPCONTROL" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "LINUXDASH $LINUXDASH" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "PIHOLE $PIHOLE" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "SUBSONIC $SUBSONIC" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "WEAVED $WEAVED" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "WEBIOPI $WEBIOPI" >> "$FILEPATH_INSTALLED_FILE"

		echo -e "#Additional Linux Software" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "VIMFULL $VIMFULL" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "SSHCLIENT $SSHCLIENT" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "SMBCLIENT $SMBCLIENT" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "RPIGPIO $RPIGPIO" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "GITCLIENT $GITCLIENT" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "BUILDESSENTIAL $BUILDESSENTIAL" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "ALSABASE $ALSABASE" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "XSERVERXORG $XSERVERXORG" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "CURLFTPFS $CURLFTPFS" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "SUDO_AUTH $SUDO_AUTH" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "SSHSERVER_DROPBEAR $SSHSERVER_DROPBEAR" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "SSHSERVER_OPENSSH $SSHSERVER_OPENSSH" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "LOGGING_LOGROTATE $LOGGING_LOGROTATE" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "LOGGING_RAMLOG $LOGGING_RAMLOG" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "LOGGING_RSYSLOG $LOGGING_RSYSLOG" >> "$FILEPATH_INSTALLED_FILE"

		echo -e "#DietPi Choice System: SSH Server" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "INDEX_SSHSERVER_CURRENT $INDEX_SSHSERVER_CURRENT" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "INDEX_SSHSERVER_TARGET $INDEX_SSHSERVER_TARGET" >> "$FILEPATH_INSTALLED_FILE"
		
		echo -e "#DietPi Choice System: File Server" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "INDEX_FILESERVER_CURRENT $INDEX_FILESERVER_CURRENT" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "INDEX_FILESERVER_TARGET $INDEX_FILESERVER_TARGET" >> "$FILEPATH_INSTALLED_FILE"

		echo -e "#DietPi Choice System: Logging" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "INDEX_LOGGING_CURRENT $INDEX_LOGGING_CURRENT" >> "$FILEPATH_INSTALLED_FILE"
		echo -e "INDEX_LOGGING_TARGET $INDEX_LOGGING_TARGET" >> "$FILEPATH_INSTALLED_FILE"
		
	}

	Read_InstallFileList(){

		#DietPi	
		USBDRIVE=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'USBDRIVE ' | awk '{print $2}')

		GRASSHOPPER=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'GRASSHOPPER ' | awk '{print $2}')
		DESKTOP_LXDE=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'DESKTOP_LXDE ' | awk '{print $2}')
		WEBSERVER_LAMP=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'WEBSERVER_LAMP ' | awk '{print $2}')
		WEBSERVER_LEMP=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'WEBSERVER_LEMP ' | awk '{print $2}')
		WEBSERVER_LASP=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'WEBSERVER_LASP ' | awk '{print $2}')
		WEBSERVER_LESP=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'WEBSERVER_LESP ' | awk '{print $2}')
		WEBSERVER_NGINX=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'WEBSERVER_NGINX ' | awk '{print $2}')
		WEBSERVER_APACHE=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'WEBSERVER_APACHE ' | awk '{print $2}')
		WEBSERVER_MYSQL=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'WEBSERVER_MYSQL ' | awk '{print $2}')
		WEBSERVER_SQLITE=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'WEBSERVER_SQLITE ' | awk '{print $2}')
		WEBSERVER_PHP=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'WEBSERVER_PHP ' | awk '{print $2}')
		WEBSERVER_MYADMINPHP=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'WEBSERVER_MYADMINPHP ' | awk '{print $2}')
		FILESERVER_PROFTP=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'FILESERVER_PROFTP ' | awk '{print $2}')
		FILESERVER_SAMBA=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'FILESERVER_SAMBA ' | awk '{print $2}')
		FILESERVER_VSFTPD=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'FILESERVER_VSFTPD ' | awk '{print $2}')
		OWNCLOUD=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'OWNCLOUD ' | awk '{print $2}')
		TRANSMISSION=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'TRANSMISSION ' | awk '{print $2}')
		PHPBB=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'PHPBB ' | awk '{print $2}')
		KODI=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'KODI ' | awk '{print $2}')
		RETROPIE=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'RETROPIE ' | awk '{print $2}')
		MINIDLNA=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'MINIDLNA ' | awk '{print $2}')
		NOIPDYNDNS=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'NOIPDYNDNS ' | awk '{print $2}')
		HIFI=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'HIFI ' | awk '{print $2}')
		VPNSERVER=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'VPNSERVER ' | awk '{print $2}')
		OPENTYRIAN=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'OPENTYRIAN ' | awk '{print $2}')
		DIETPICAM=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'DIETPICAM ' | awk '{print $2}')
		DELUGE=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'DELUGE ' | awk '{print $2}')
		RASPCONTROL=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'RASPCONTROL ' | awk '{print $2}')
		LINUXDASH=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'LINUXDASH ' | awk '{print $2}')
		PIHOLE=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'PIHOLE ' | awk '{print $2}')
		SUBSONIC=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'SUBSONIC ' | awk '{print $2}')
		WEAVED=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'WEAVED ' | awk '{print $2}')
		WEBIOPI=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'WEBIOPI ' | awk '{print $2}')

		#Linux
		VIMFULL=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'VIMFULL ' | awk '{print $2}')
		SSHCLIENT=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'SSHCLIENT ' | awk '{print $2}')
		SMBCLIENT=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'SMBCLIENT ' | awk '{print $2}')
		RPIGPIO=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'RPIGPIO ' | awk '{print $2}')
		GITCLIENT=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'GITCLIENT ' | awk '{print $2}')
		BUILDESSENTIAL=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'BUILDESSENTIAL ' | awk '{print $2}')
		ALSABASE=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'ALSABASE ' | awk '{print $2}')
		XSERVERXORG=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'XSERVERXORG ' | awk '{print $2}')
		CURLFTPFS=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'CURLFTPFS ' | awk '{print $2}')
		SUDO_AUTH=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'SUDO_AUTH ' | awk '{print $2}')
		SSHSERVER_DROPBEAR=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'SSHSERVER_DROPBEAR ' | awk '{print $2}')
		SSHSERVER_OPENSSH=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'SSHSERVER_OPENSSH ' | awk '{print $2}')
		LOGGING_LOGROTATE=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'LOGGING_LOGROTATE ' | awk '{print $2}')
		LOGGING_RAMLOG=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'LOGGING_RAMLOG ' | awk '{print $2}')
		LOGGING_RSYSLOG=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'LOGGING_RSYSLOG ' | awk '{print $2}')

		#SSH Server Choices
		INDEX_SSHSERVER_CURRENT=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'INDEX_SSHSERVER_CURRENT ' | awk '{print $2}')
		INDEX_SSHSERVER_TARGET=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'INDEX_SSHSERVER_TARGET ' | awk '{print $2}')

		#Fileserver Software Choices
		INDEX_FILESERVER_CURRENT=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'INDEX_FILESERVER_CURRENT ' | awk '{print $2}')
		INDEX_FILESERVER_TARGET=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'INDEX_FILESERVER_TARGET ' | awk '{print $2}')
		
		#Logging Choices
		INDEX_LOGGING_CURRENT=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'INDEX_LOGGING_CURRENT ' | awk '{print $2}')
		INDEX_LOGGING_TARGET=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'INDEX_LOGGING_TARGET ' | awk '{print $2}')

		#Take note of the extra space used at the end of each grep quote 'MYSOFTWARE '
		#This ensures packages with similar names (eg: WEBSERVER_PHP and WEBSERVER_MYADMINPHP) dont both get picked up.
		
		#Additions must be added to patch file, if /DietPi/dietpi/.installed exists on host system!
		#eg
		#	if [ -f /DietPi/dietpi/.installed ]; then
		#		#echo -e "SUDO_AUTH 0" >> /DietPi/dietpi/.installed
		#	fi

	}

	Install_Dietpi_Software(){

		#--------------------------------------------------------------
		# Stop Services
		/DietPi/dietpi/dietpi-services stop
		#--------------------------------------------------------------
		#Text install info vars (for Webserver stacks)
		local info_1="LAMP"
		local info_2="Apache2"
		local info_3="MySql"
		local info_4="PHP"
		#--------------------------------------------------------------
		# Sort and apply all "combo" installs
		

		#Installs that require WEBSERVER_LESP

		#Installs that require WEBSERVER_LEMP

		#Installs that require WEBSERVER_LASP
		if (( $GRASSHOPPER == 1 )); then
			WEBSERVER_LASP=1
		elif (( $DIETPICAM == 1 )); then
			WEBSERVER_LASP=1
		elif (( $RASPCONTROL == 1 )); then
			WEBSERVER_LASP=1
		elif (( $LINUXDASH == 1 )); then
			WEBSERVER_LASP=1
		elif (( $PIHOLE == 1 )); then
			WEBSERVER_LASP=1
		fi

		#Installs that require WEBSERVER_LAMP
		if (( $OWNCLOUD == 1 )); then
			WEBSERVER_LAMP=1
		elif (( $PHPBB == 1 )); then
			WEBSERVER_LAMP=1
		fi
		
		#--------------------------------------------------------------
		#Define extra DietPi install flags for WEBSERVER_LAMP
		if (( $WEBSERVER_LAMP == 1 )); then
			WEBSERVER_APACHE=1
			WEBSERVER_MYSQL=1
			WEBSERVER_PHP=1
			info_1="LAMP"
			info_2="Apache2"
			info_3="MySql"
			info_4="PHP"
		fi

		#Define extra DietPi install flags for WEBSERVER_LEMP
		if (( $WEBSERVER_LEMP == 1 )); then
			WEBSERVER_NGINX=1
			WEBSERVER_MYSQL=1
			WEBSERVER_PHP=1
			info_1="LEMP"
			info_2="Nginx"
			info_3="MySql"
			info_4="PHP"
		fi

		#Define extra DietPi install flags for WEBSERVER_LASP
		if (( $WEBSERVER_LASP == 1 )); then
			WEBSERVER_APACHE=1
			WEBSERVER_SQLITE=1
			WEBSERVER_PHP=1
			info_1="LASP"
			info_2="Apache2"
			info_3="SQLite"
			info_4="PHP"
		fi

		#Define extra DietPi install flags for WEBSERVER_LESP
		if (( $WEBSERVER_LESP == 1 )); then
			WEBSERVER_NGINX=1
			WEBSERVER_SQLITE=1
			WEBSERVER_PHP=1
			info_1="LESP"
			info_2="Nginx"
			info_3="SQLite"
			info_4="PHP"
		fi
		
		#--------------------------------------------------------------
		#Install Software

		#Desktop LXDE
		if (( $DESKTOP_LXDE == 1 )); then
			
			INSTALL_DESCRIPTION='Desktop (LXDE)'
			Banner_Installing
			
			apt-get install lxde upower policykit-1 iceweasel p7zip-full --no-install-recommends -y
			#upower policykit-1. Needed for LXDE logout menu item to show shutdown/restart ......
			
			#Ubuntu installs firefox
			
		fi

		#BitTorrent Transmission
		if (( $TRANSMISSION == 1 )); then
			INSTALL_DESCRIPTION='BitTorrent (Transmission)'
			Banner_Installing
			apt-get install transmission-daemon -y
		fi

		#ProFTPd
		if (( $FILESERVER_PROFTP == 1 )); then
			INSTALL_DESCRIPTION='FTP Server (Proftp)'
			Banner_Installing

			echo -e "proftpd-basic shared/proftpd/inetd_or_standalone select standalone" | debconf-set-selections
			apt-get install proftpd-basic -y
		fi

		#Samba Server
		if (( $FILESERVER_SAMBA == 1 )); then
			INSTALL_DESCRIPTION='Samba File Server'
			Banner_Installing
			apt-get install samba samba-common-bin --no-install-recommends -y
			
		fi
		
		#vsFTPD
		if (( $FILESERVER_VSFTPD == 1 )); then
			INSTALL_DESCRIPTION='FTP Server (vsFTPD)'
			Banner_Installing

			apt-get install vsftpd --no-install-recommends -y

		fi

		#WEBSERVER_APACHE
		if (( $WEBSERVER_APACHE == 1 )); then
		
			INSTALL_DESCRIPTION="$info_1: ($info_2) / $info_3 / $info_4"
			Banner_Installing
			apt-get install apache2 -y
		fi
		
		#WEBSERVER_NGINX
		if (( $WEBSERVER_NGINX == 1 )); then
		
			INSTALL_DESCRIPTION="$info_1: ($info_2) / $info_3 / $info_4"
			Banner_Installing
			apt-get install nginx xml-core --no-install-recommends -y
		fi
		
			
		#WEBSERVER_MYSQL
		if (( $WEBSERVER_MYSQL == 1 )); then
			INSTALL_DESCRIPTION="$info_1: $info_2 / ($info_3) / $info_4"
			Banner_Installing
			
			echo -e "mysql-server mysql-server/root_password password raspberry" | debconf-set-selections
			echo -e "mysql-server mysql-server/root_password_again password raspberry" | debconf-set-selections
			
			apt-get install mysql-server -y
		fi
		
		#WEBSERVER_SQLITE
		if (( $WEBSERVER_SQLITE == 1 )); then
			INSTALL_DESCRIPTION="$info_1: $info_2 / ($info_3) / $info_4"
			Banner_Installing
			apt-get install sqlite3 -y
		fi
			
		#WEBSERVER_PHP
		if (( $WEBSERVER_PHP == 1 )); then
			INSTALL_DESCRIPTION="$info_1: $info_2 / $info_3 / ($info_4)"
			Banner_Installing

			#Apache2 / Nginx
			if (( $WEBSERVER_APACHE == 1 )); then
				apt-get install php5 libapache2-mod-php5 -y
			elif (( $WEBSERVER_NGINX == 1 )); then
				apt-get install php5-fpm -y
			fi
			
			#MySQL / SQLite
			if (( $WEBSERVER_MYSQL == 1 )); then
				apt-get install php5-mysql -y
			elif (( $WEBSERVER_SQLITE == 1 )); then
				apt-get install php5-sqlite -y
			fi

			#Debian - php-apc
			if (( $DISTRO == 1 )); then
				apt-get install php-apc -y
			fi			
			#Ubuntu - uses opcache

		fi

		#WEBSERVER_MYADMINPHP
		if (( $WEBSERVER_MYADMINPHP == 1 )); then
			INSTALL_DESCRIPTION='phpMyAdmin'
			Banner_Installing
			
			#Mysql must be running during install to allow debconf setup.
			service mysql start &> /dev/null

			echo -e "phpmyadmin		 phpmyadmin/dbconfig-install	 boolean true" | debconf-set-selections
			echo -e "phpmyadmin      phpmyadmin/database-type        select  mysql" | debconf-set-selections
			echo -e "phpmyadmin      phpmyadmin/app-password-confirm password raspberry" | debconf-set-selections
			echo -e "phpmyadmin      phpmyadmin/mysql/admin-pass     password raspberry" | debconf-set-selections
			echo -e "phpmyadmin      phpmyadmin/password-confirm     password raspberry" | debconf-set-selections
			echo -e "phpmyadmin      phpmyadmin/setup-password       password raspberry" | debconf-set-selections
			echo -e "phpmyadmin      phpmyadmin/mysql/app-pass       password raspberry" | debconf-set-selections
			echo -e "phpmyadmin      phpmyadmin/reconfigure-webserver        multiselect     apache2" | debconf-set-selections

			apt-get install phpmyadmin -y

		fi
			
		#Forums PHPBB
		if (( $PHPBB == 1 )); then
			INSTALL_DESCRIPTION='PHPbb3 Forums'
			Banner_Installing
			
			#Mysql must be running during install to allow debconf setup.
			service mysql start &> /dev/null

			apt-get install phpbb3 -y
		fi

		#OwnCloud
		if (( $OWNCLOUD == 1 )); then
			INSTALL_DESCRIPTION='OwnCloud'
			Banner_Installing
		
			#Mysql must be running during install to allow debconf setup.
			service mysql start &> /dev/null

			#Debian
			if (( $DISTRO == 1 )); then
				apt-get install owncloud -y
			
			#Ubuntu 14.04 - add repo
			elif (( $DISTRO == 2 )); then
			
				#check source is online
				INSTALL_URL_ADDRESS='http://download.opensuse.org/repositories/isv:/ownCloud:/community/xUbuntu_14.04/'
				/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
				
				#Install
				if (( $? == 0 )); then
					if [ ! -f /etc/apt/sources.list.d/owncloud.list ]; then 
						sh -c "echo 'deb http://download.opensuse.org/repositories/isv:/ownCloud:/community/xUbuntu_14.04/ /' >> /etc/apt/sources.list.d/owncloud.list"

						#run apt-get update
						/DietPi/dietpi/dietpi-apt-get_update 2
						
					fi
					apt-get install owncloud --force-yes -y
					
				else
					Info_NoConnection_NoInstall

					#Abort Install, prevent configs being applied
					OWNCLOUD=0
				fi		
			fi			
		fi
	 
		#Hifi
		if (( $HIFI == 1 )); then  
			INSTALL_DESCRIPTION='Hifi / Web Interface Music Player (Mpd Ympd)'
			Banner_Installing
		
			#check source is online
			INSTALL_URL_ADDRESS='http://www.ympd.org/downloads/ympd-1.2.3-armhf.tar.bz2'
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"

			#Install
			if (( $? == 0 )); then
				
				#Install MPD
				apt-get install mpd libmpdclient2 -y
				
				#Setup ympd			
				wget "$INSTALL_URL_ADDRESS"
				tar -xvf ympd-*
				rm ympd-*
				mv ympd /usr/bin/ympd
				
			else
				Info_NoConnection_NoInstall

				#Abort Install, prevent configs being applied
				HIFI=0
			fi
		fi
		
		#Kodi
		if (( $KODI == 1 )); then
			INSTALL_DESCRIPTION='Kodi'
			Banner_Installing

			#oDroid C1
			if (( $HW_MODEL == 10 )); then
				apt-get install libcurl4-gnutls-dev --no-install-recommends -y
				apt-get install kodi -y
				
			#RPI (Michael Gorven Repository) 
			elif (( $HW_MODEL <= 2 )); then
				INSTALL_DESCRIPTION='Kodi (Adding Michael Gorven Repo)'
				Banner_Installing

				#check source is online
				INSTALL_URL_ADDRESS='http://archive.mene.za.net/raspbian'
				/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
				
				#Install
				if (( $? == 0 )); then
					#Check if apt address and key needs adding
					if (( $(cat /etc/apt/sources.list.d/mene.list | grep -ci -m1 'http://archive.mene.za.net/raspbian') == 0 )); then
						echo -e 'deb http://archive.mene.za.net/raspbian wheezy contrib' >> /etc/apt/sources.list.d/mene.list
						apt-key adv --keyserver keyserver.ubuntu.com --recv-key 5243CDED
					fi

					#run apt-get update
					/DietPi/dietpi/dietpi-apt-get_update 2
					
					INSTALL_DESCRIPTION='Kodi (Michael Gorven Repo)'
					Banner_Installing
					
					apt-get install kodi -y
					
				else
					Info_NoConnection_NoInstall

					#Abort Install, prevent configs being applied
					KODI=0
				fi
			fi
		fi
		
		#Retro Pie
		if (( $RETROPIE == 1 )); then
			INSTALL_DESCRIPTION='RetroPie'
			Banner_Installing

			#check source is online
			INSTALL_URL_ADDRESS='https://github.com/petrockblog/RetroPie-Setup'
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
			
			#Install
			if (( $? == 0 )); then

				#Install dialog
				apt-get install dialog -y
				
				#Clone RetroPie Git
				git clone --depth=0 "$INSTALL_URL_ADDRESS"
				chmod +x "$HOME"/RetroPie-Setup/retropie_setup.sh

				#Info for RetroPie script
				WHIP_TITLE='RetroPie - Information'
				whiptail --title "$WHIP_TITLE" --msgbox "DietPi will now run the RetroPie setup script. Please follow the DietPi + RetroPie Setup Guide: \n http://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=8 \n \n(WARNING) If you tell RetroPie to auto load at boot, any DietPi boot choices will not work \n(WARNING) DO NOT select Reboot from the RetroPie menu, press escape when you are done. Selecting reboot will prevent other DietPi installation choices from working" 20 70

				#Run RetroPie setup script
				~/RetroPie-Setup/retropie_setup.sh

			#Offline
			else
				Info_NoConnection_NoInstall

				#Abort Install, prevent configs being applied
				RETROPIE=0
			fi
		fi
		
		#MINIDLNA
		if (( $MINIDLNA == 1 )); then
			INSTALL_DESCRIPTION='DLNA/UPnP Media Server (MiniDLNA)'
			Banner_Installing
			apt-get install minidlna -y
		fi
		
		#NoIp
		if (( $NOIPDYNDNS == 1 )); then
			INSTALL_DESCRIPTION='Website URL Address (No-Ip)'
			Banner_Installing
			
			INSTALL_URL_ADDRESS='http://fuzon.co.uk/downloads/dietpi-noip.zip'
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
			
			#Install
			if (( $? == 0 )); then

				#NoIp Binary install
				wget "$INSTALL_URL_ADDRESS"
				unzip dietpi-noip.zip
				rm dietpi-noip.zip
				mv noip_binary /usr/local/bin/noip2
				chmod +x /usr/local/bin/noip2

				#noip2 service file
				cp /DietPi/dietpi/conf/noip_init /etc/init.d/noip2
				chmod +x /etc/init.d/noip2
				update-rc.d noip2 defaults 94 6

			else
				Info_NoConnection_NoInstall

				#Abort Install, prevent configs being applied
				NOIPDYNDNS=0
			fi
		fi
		
		#VPN Server
		if (( $VPNSERVER == 1 )); then
		
			INSTALL_DESCRIPTION='VPN Server (SoftEther) - Download'
			Banner_Installing

			#check source is online
			INSTALL_URL_ADDRESS='http://www.softether-download.com/files/softether/v4.15-9546-beta-2015.04.05-tree/Linux/SoftEther_VPN_Server/32bit_-_ARM_EABI/softether-vpnserver-v4.15-9546-beta-2015.04.05-linux-arm_eabi-32bit.tar.gz'
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"

			#Install
			if (( $? == 0 )); then

				#Download Source / extract / delete tar
				wget "$INSTALL_URL_ADDRESS"
				tar zxvf softether-vpnserver-*
				rm softether-vpnserver-*
				
				#Compile / move
				INSTALL_DESCRIPTION='VPN Server (SoftEther) - Compiling'
				Banner_Installing
				echo -e "1\n1\n1" | make -C vpnserver
				mv vpnserver* /usr/local

				#Run at startup
				cp /DietPi/dietpi/conf/vpnserver_init /etc/init.d/vpnserver 
				chmod +x /etc/init.d/vpnserver
				update-rc.d vpnserver defaults

			else
				Info_NoConnection_NoInstall

				#Abort Install, prevent configs being applied
				VPNSERVER=0
			fi
		fi
		
		#OpenTyrian
		if (( $OPENTYRIAN == 1 )); then
			INSTALL_DESCRIPTION='Gaming (OpenTyrian Game)'
			Banner_Installing
			
			INSTALL_URL_ADDRESS='http://fuzon.co.uk/downloads/dietpi-opentyrian.zip'
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
			
			#Install
			if (( $? == 0 )); then
				apt-get install ibsdl1.2debian libsdl-net1.2 --no-install-recommends -y

				#Download binaries and source
				wget "$INSTALL_URL_ADDRESS"
				unzip -o dietpi-opentyrian.zip -d /
				rm dietpi-opentyrian.zip
				chmod +x /usr/local/games/opentyrian/opentyrian
				
				#Copy the DietPi run file for OpenTyrian
				cp /DietPi/dietpi/conf/opentyrian_run /usr/local/games/opentyrian/run
				chmod +x /usr/local/games/opentyrian/run

			else
				Info_NoConnection_NoInstall

				#Abort Install, prevent configs being applied
				OPENTYRIAN=0
			fi
		fi

		if (( $DIETPICAM == 1 )); then
			INSTALL_DESCRIPTION='RPi Camera / Web Interface Surveillance (DietPi-Cam)'
			Banner_Installing

			#check source is online
			INSTALL_URL_ADDRESS='https://github.com/Fourdee/RPi_Cam_Web_Interface/archive/master.zip'
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"

			#Install
			if (( $? == 0 )); then

				#Install pre-reqs
				apt-get install gpac motion -y

				#Get source/binaries and extract
				wget https://github.com/Fourdee/RPi_Cam_Web_Interface/archive/master.zip -O File.zip
				#wget https://github.com/silvanmelchior/RPi_Cam_Web_Interface/archive/master.zip -O File.zip
				unzip File.zip
				rm File.zip

				#work form inside RPi_Cam folder
				cd RPi_Cam*

				#Setup /var/www/dietpicam
				mkdir -p /var/www/dietpicam/media
				cp -R www/* /var/www/dietpicam/
				chmod +x /var/www/dietpicam/raspizip.sh
				mknod /var/www/dietpicam/FIFO p
				mknod /var/www/dietpicam/FIFO1 p

				#Temp cam.jpg file symlink
				ln -sf /run/shm/mjpeg/cam.jpg /var/www/dietpicam/cam.jpg

				#Setup Raspimjpeg binary
				cp bin/raspimjpeg /opt/vc/bin/raspimjpeg
				chmod +x /opt/vc/bin/raspimjpeg
				ln -s /opt/vc/bin/raspimjpeg /usr/bin/raspimjpeg

				#Cleanup / remove extracted source
				cd "$HOME"/
				rm -R "$HOME"/RPi_Cam*
				
			else
				Info_NoConnection_NoInstall

				#Abort Install, prevent configs being applied
				DIETPICAM=0
			fi

		fi

		#DELUGE
		if (( $DELUGE == 1 )); then
			INSTALL_DESCRIPTION='Deluge (BitTorrent Server, Web Interface)'
			Banner_Installing
			apt-get install deluged deluge-web deluge-webui -y
		fi
		
		#GRASSHOPPER
		if (( $GRASSHOPPER == 1 )); then
			INSTALL_DESCRIPTION='Grasshopper'
			Banner_Installing

			apt-get install python -y

			#Download Grasshopper
			local grasshopper_directory=$(cat /DietPi/dietpi.txt | grep 'grasshopper_directory=' | sed 's/grasshopper_directory=//g')
			INSTALL_URL_ADDRESS=$(cat /DietPi/dietpi.txt | grep 'grasshopper_url=' | sed 's/grasshopper_url=//g')
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
			if (( $? == 0 )); then
				wget "$INSTALL_URL_ADDRESS" -O grasshopper.zip
				unzip grasshopper.zip -d "$grasshopper_directory"
				rm grasshopper.zip
				
				#Install
				chmod +x "$grasshopper_directory"/install/install.sh
				"$grasshopper_directory"/install/install.sh
			else
				Info_NoConnection_NoInstall
				GRASSHOPPER=0
			fi

		fi
		
		#RASPCONTROL		
		if (( $RASPCONTROL == 1 )); then
			INSTALL_DESCRIPTION='Raspcontrol (Web interface system stats)'
			Banner_Installing

			INSTALL_URL_ADDRESS='https://github.com/harmon25/raspcontrol/archive/master.zip'
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
			if (( $? == 0 )); then
				wget "$INSTALL_URL_ADDRESS" -O package.zip

				unzip package.zip
				rm package.zip
				mkdir -p /var/www/raspcontrol
				mv raspcontrol-master/* /var/www/raspcontrol
				rm -R raspcontrol-master
				
			else
				Info_NoConnection_NoInstall
				RASPCONTROL=0
			fi

		fi
	
		#LINUXDASH
		if (( $LINUXDASH == 1 )); then
			INSTALL_DESCRIPTION='Linux Dash (Web interface system stats)'
			Banner_Installing

			INSTALL_URL_ADDRESS='https://github.com/afaqurk/linux-dash/archive/master.zip'
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
			if (( $? == 0 )); then
				wget "$INSTALL_URL_ADDRESS" -O package.zip

				unzip package.zip
				rm package.zip
				mkdir -p /var/www/linuxdash
				mv linux-dash-master/* /var/www/linuxdash
				rm -R linux-dash-master
				
			else
				Info_NoConnection_NoInstall
				LINUXDASH=0
			fi

		fi
		
		#PIHOLE
		if (( $PIHOLE == 1 )); then
			INSTALL_DESCRIPTION='Pi-hole (Block adverts on your network)'
			Banner_Installing

			INSTALL_URL_ADDRESS='https://github.com/jacobsalmela/AdminLTE/archive/master.zip'
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
			if (( $? == 0 )); then
				
				#Install DNS server
				apt-get install dnsmasq -y
				update-rc.d dnsmasq enable
				service dnsmasq stop
				
				#Generate PiHole Dirs
				mkdir -p /etc/pihole
				mkdir -p /var/www/pihole

				#grab the Pi-hole license
				wget https://raw.githubusercontent.com/jacobsalmela/pi-hole/master/LICENSE -O /etc/pihole/LICENSE

				#Run and update adblocking databases (gravity)
				cp /DietPi/dietpi/conf/pihole_gravity /usr/local/bin/gravity.sh
				chmod 755 /usr/local/bin/gravity.sh
				/usr/local/bin/gravity.sh
				

				#Setup Web interface panel
				wget "$INSTALL_URL_ADDRESS" -O package.zip
				unzip package.zip
				mv AdminLTE-master/* /var/www/pihole/
				rm -R AdminLTE-master
				rm package.zip
				
			else
				Info_NoConnection_NoInstall
				PIHOLE=0
			fi

		fi
		
		#SUBSONIC
		if (( $SUBSONIC == 1 )); then
			INSTALL_DESCRIPTION='SubSonic (Web interface media streamer)'
			Banner_Installing

			INSTALL_URL_ADDRESS='http://downloads.sourceforge.net/project/subsonic/subsonic/5.2.1/subsonic-5.2.1.deb'
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
			if (( $? == 0 )); then
				
				#Install Java pre-reqs
				apt-get install openjdk-7-jre-headless -y

				#Install SubSonic
				wget "$INSTALL_URL_ADDRESS" -O package.deb
				dpkg -i package.deb
				rm package.deb
				
			else
				Info_NoConnection_NoInstall
				SUBSONIC=0
			fi

		fi
		
		#WEAVED
		if (( $WEAVED == 1 )); then
			INSTALL_DESCRIPTION='Weaved (Access your device over the internet)'
			Banner_Installing

			INSTALL_URL_ADDRESS='https://github.com/weaved/installer/raw/master/binaries/weaved-nixinstaller_1.2.13.bin'
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
			if (( $? == 0 )); then
				
				#Install WEAVED
				wget "$INSTALL_URL_ADDRESS" -O weaved_setup.bin
				chmod +x weaved_setup.bin
				
				##Dont run this, let the user run it for "1st time setup"
				#./weaved_setup.bin
				
			else
				Info_NoConnection_NoInstall
				WEAVED=0
			fi

		fi

		#WEBIOPI
		if (( $WEBIOPI == 1 )); then
			INSTALL_DESCRIPTION='WebIOPi (Control RPi GPIO from a web interface)'
			Banner_Installing

			INSTALL_URL_ADDRESS='http://sourceforge.net/projects/webiopi/files/WebIOPi-0.7.1.tar.gz/download'
			/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
			if (( $? == 0 )); then
				
				#Python dev, pre-reqs
				apt-get install python-dev python-setuptools --no-install-recommends -y

				#Install WEBIOPI
				wget "$INSTALL_URL_ADDRESS" -O package.tar
				tar xvzf package.tar
				rm package.tar
				
				cd WebIOPi*

				#Automate Weaved prompt
				sed -i '/read response/c\response="n"' setup.sh
				
				#Run setup script
				./setup.sh skip-apt
				clear

				cd ..

				#Cleanup
				rm -R WebIOPi*

			else
				Info_NoConnection_NoInstall
				WEBIOPI=0
			fi

		fi

	}

	Install_Linux_Software(){

		# Stop Services
		/DietPi/dietpi/dietpi-services stop

		if (( $VIMFULL == 1 )); then
			INSTALL_DESCRIPTION='Vim'
			Banner_Installing
			apt-get install vim -y
			
			VIMFULL=2
		fi
	 
		if (( $SSHCLIENT == 1 )); then
			INSTALL_DESCRIPTION='OpenSSH Client'
			Banner_Installing
			apt-get install openssh-client -y
			
			SSHCLIENT=2
		fi
		
		if (( $SMBCLIENT == 1 )); then
			INSTALL_DESCRIPTION='Samba Client'
			Banner_Installing
			
			#Remove Information file
			rm /mnt/samba/readme.txt &> /dev/null

			apt-get install smbclient cifs-utils -y --no-install-recommends
			
			SMBCLIENT=2
		fi

		#DietPi software that requires RPI GPIO
		if (( $WEBIOPI == 1 )); then
			RPIGPIO=1
		fi
		
		if (( $RPIGPIO == 1 )); then
			INSTALL_DESCRIPTION='RPi.GPIO'
			Banner_Installing
			apt-get install python-rpi.gpio python3-rpi.gpio -y
			
			RPIGPIO=2
		fi
		
		#DietPi software that requires Build-Essential
		if (( $VPNSERVER == 1 )); then
			BUILDESSENTIAL=1
		fi
		
		if (( $BUILDESSENTIAL == 1 )); then
			INSTALL_DESCRIPTION='Build Essential'
			Banner_Installing
			 apt-get install build-essential --no-install-recommends -y
			
			BUILDESSENTIAL=2
		fi

		#DietPi software that requires GIT
		if (( $RETROPIE == 1 )); then
			GITCLIENT=1
		fi
		
		if (( $GITCLIENT == 1 )); then
			INSTALL_DESCRIPTION='Git'
			Banner_Installing
			apt-get install git --no-install-recommends -y
			
			GITCLIENT=2
		fi
		
		#DietPi software that requires Alsa-base
		if (( $DESKTOP_LXDE == 1 )); then
			ALSABASE=1
		elif (( $HIFI == 1 )); then
			ALSABASE=1
		elif (( $KODI == 1 )); then
			ALSABASE=1
		elif (( $RETROPIE == 1 )); then
			ALSABASE=1
		elif (( $MINIDLNA == 1 )); then
			ALSABASE=1
		elif (( $OPENTYRIAN == 1 )); then
			ALSABASE=1
		elif (( $SUBSONIC == 1 )); then
			ALSABASE=1
		fi
		
		if (( $ALSABASE == 1 )); then
			INSTALL_DESCRIPTION='ALSA (Linux Sound System)'
			Banner_Installing
			apt-get install alsa-base -y
			
			#Odroid C1 asound.conf (Thanks to Wakko)
			if (( $HW_MODEL == 10 )); then
				cp /DietPi/dietpi/conf/asound_c1.conf /etc/asound.conf
			fi
			
			ALSABASE=2
		fi
		
		#DietPi software that requires Xserver - Xorg
		if (( $DESKTOP_LXDE == 1 )); then
			XSERVERXORG=1
		elif (( $KODI == 1 )); then
			XSERVERXORG=1
		elif (( $RETROPIE == 1 )); then
			XSERVERXORG=1
		elif (( $OPENTYRIAN == 1 )); then
			XSERVERXORG=1
		fi	
		
		if (( $XSERVERXORG == 1 )); then

			XSERVERXORG=2

			INSTALL_DESCRIPTION='Xserver (Xinit / Xauth)'
			Banner_Installing
			apt-get install xinit xauth xserver-xorg xfonts-base x11-xserver-utils x11-common x11-utils --no-install-recommends -y
			#RPI
			if (( $HW_MODEL <= 2 )); then
				INSTALL_DESCRIPTION='Xserver (FBTurbo)'
				Banner_Installing
				apt-get install xserver-xorg-video-fbturbo xserver-xorg-video-fbdev  --no-install-recommends -y
			#Odroid C1
			elif (( $HW_MODEL == 10 )); then
				INSTALL_DESCRIPTION='Xserver (AMLogic VPU / MALI)'
				Banner_Installing
				apt-get install xterm aml-libs mali-x11 xserver-xorg-video-mali --no-install-recommends -y

				#cp /DietPi/dietpi/conf/xorg_c1-hk /etc/X11/xorg.conf

				#Get dietpi compiled FBturbo driver for Odroidc1.
				INSTALL_DESCRIPTION='Xserver (FBturbo UMP)'
				INSTALL_URL_ADDRESS='http://fuzon.co.uk/downloads/odroidc1/libump_3.0-0sunxi1_armhf.deb'
				/DietPi/dietpi/func/check_connection 5 2 "$INSTALL_URL_ADDRESS"
				#Install
				if (( $? == 0 )); then
					#libUMP
					wget "$INSTALL_URL_ADDRESS" -O Package.deb
					dpkg -i Package.deb
					rm Package.deb
					
					#FBturbo
					INSTALL_URL_ADDRESS='http://fuzon.co.uk/downloads/odroidc1/dietpi-fbturbo-odroidc1_armhf.deb'
					wget "$INSTALL_URL_ADDRESS" -O Package.deb
					dpkg -i Package.deb
					rm Package.deb

					#xorg conf
					cp /DietPi/dietpi/conf/xorg_c1-fbturbo /etc/X11/xorg.conf
				
				else
					Info_NoConnection_NoInstall
					XSERVERXORG=0
				fi
			fi
		fi
		
		if (( $CURLFTPFS == 1 )); then
			INSTALL_DESCRIPTION='CurlFtpFs (FTP client as filesystem mount)'
			Banner_Installing
			
			#Remove information file
			rm /mnt/ftp_client/readme.txt &> /dev/null

			apt-get install curlftpfs -y

			CURLFTPFS=2
		fi
		
		#Install Choice based SSH Server
		if (( $SSHSERVER_DROPBEAR == 1 )); then

			INSTALL_DESCRIPTION='Dropbear SSH Server'
			Banner_Installing
			apt-get install dropbear -y
			
			#set to start on next boot
			sed -i '/NO_START=1/c\NO_START=0' /etc/default/dropbear

			SSHSERVER_DROPBEAR=2
			
		fi

		if (( $SSHSERVER_OPENSSH == 1 )); then

			INSTALL_DESCRIPTION='OpenSSH Server'
			Banner_Installing
			apt-get install openssh-server --no-install-recommends -y
			
			#Ubuntu, must enable root login
			if (( $DISTRO == 2 )); then
				sed -i '/PermitRootLogin /c\PermitRootLogin yes' /etc/ssh/sshd_config
			fi

			SSHSERVER_OPENSSH=2

			#SSH server package also installs client.
			SSHCLIENT=2

		fi
		
		#Install Choices Logging
		if (( $LOGGING_RAMLOG == 1 )); then

			INSTALL_DESCRIPTION='DietPi-Ramlog'
			Banner_Installing
			
			#Install (add tmpfs mount to fstab)
			sed -i '/\/var\/log/c\tmpfs                   \/var\/log                tmpfs   size=10m,noatime,nodev,nosuid,mode=1777  0 0' /etc/fstab
			LOGGING_RAMLOG=2

		fi	
			
		if (( $LOGGING_LOGROTATE == 1 )); then

			INSTALL_DESCRIPTION='Logrotate'
			Banner_Installing
			apt-get install logrotate -y

			LOGGING_LOGROTATE=2
		fi

		if (( $LOGGING_RSYSLOG == 1 )); then

			INSTALL_DESCRIPTION='Rsyslog'
			Banner_Installing
			apt-get install rsyslog --no-install-recommends -y

			LOGGING_RSYSLOG=2

		fi

		#Programs that require sudo
		if (( $RASPCONTROL == 1 )); then
			SUDO_AUTH=1
		elif (( $PIHOLE == 1 )); then
			SUDO_AUTH=1
		elif (( $WEAVED == 1 )); then
			SUDO_AUTH=1
		elif (( $WEBIOPI == 1 )); then
			SUDO_AUTH=1
		fi

		if (( $SUDO_AUTH == 1 )); then

			INSTALL_DESCRIPTION='Sudo'
			Banner_Installing
			apt-get install sudo -y

			SUDO_AUTH=2

		fi

	}

	Uninstall_NonSelected_Choices(){

		#Uninstall software using our temp uninstall file script
		if [ -f "$UNINSTALL_FILE" ]; then
		
			#Write .Install File
			Write_InstallFileList

			#Run the temp uninstall script
			while read -r line 
			do 
				/DietPi/dietpi/dietpi-uninstall "$line"
				
			done < $UNINSTALL_FILE
			rm $UNINSTALL_FILE

			#Reload installed file (dietpi-uninstall sets flags back to 0)
			Read_InstallFileList

		fi

	}

	Apply_SSHServer_Choices(){

		#Work out which SSH Server needs installing from Indexs (if any)
		#Work out which SSH server needs removing (if any), and, create a temp script file
		if (( $INDEX_SSHSERVER_TARGET != $INDEX_SSHSERVER_CURRENT )); then

			#No SSH server
			if (( $INDEX_SSHSERVER_TARGET == 0 )); then
				echo -e "SSHSERVER_DROPBEAR" >> "$UNINSTALL_FILE"
				echo -e "SSHSERVER_OPENSSH" >> "$UNINSTALL_FILE"

			#Dropbear
			elif (( $INDEX_SSHSERVER_TARGET == -1 )); then
			
				SSHSERVER_DROPBEAR=1
				echo -e "SSHSERVER_OPENSSH" >> "$UNINSTALL_FILE"

			#Openssh
			elif (( $INDEX_SSHSERVER_TARGET == -2 )); then

				SSHSERVER_OPENSSH=1
				echo -e "SSHSERVER_DROPBEAR" >> "$UNINSTALL_FILE"

			fi

			#Inform user (From testing, stopping SSH server services does not disconnect user, however, just incase it does in the future)
			/DietPi/dietpi/dietpi-banner 0
			echo -e "\n Stopping SSH Servers, please wait.....\n\n - If you are connected via SSH, you may be disconnected.\n - Your system will reboot once your DietPi-Software installation is completed.\n - Go make a coffee :) \n"
			
			#stop all SSH server services
			service ssh stop &> /dev/null
			service dropbear stop &> /dev/null

			#Update Current SSHSERVER index
			INDEX_SSHSERVER_CURRENT=$INDEX_SSHSERVER_TARGET

		fi

	}

	Apply_FileServer_Choices(){

		#Work out which File Server needs installing from Indexs (if any)
		#Work out which File server needs removing (if any), and, create a temp script file
		if (( $INDEX_FILESERVER_TARGET != $INDEX_FILESERVER_CURRENT )); then

			#No File server
			if (( $INDEX_FILESERVER_TARGET == 0 )); then
				echo -e "FILESERVER_SAMBA" >> "$UNINSTALL_FILE"
				echo -e "FILESERVER_PROFTP" >> "$UNINSTALL_FILE"
				#echo -e "FILESERVER_VSFTPD" >> "$UNINSTALL_FILE"

			#ProFTP
			elif (( $INDEX_FILESERVER_TARGET == -1 )); then
			
				FILESERVER_PROFTP=1
				echo -e "FILESERVER_SAMBA" >> "$UNINSTALL_FILE"

			#Samba
			elif (( $INDEX_FILESERVER_TARGET == -2 )); then

				FILESERVER_SAMBA=1
				echo -e "FILESERVER_PROFTP" >> "$UNINSTALL_FILE"

			fi
			
			#Update Current SSHSERVER index
			INDEX_FILESERVER_CURRENT=$INDEX_FILESERVER_TARGET

		fi

	}

	Apply_Logging_Choices(){

		#Work out which Logging system needs installing from Indexs (if any)
		#Work out which Logging system needs removing (if any), and, create a temp script file
		if (( $INDEX_LOGGING_TARGET != $INDEX_LOGGING_CURRENT )); then

			#None
			if (( $INDEX_LOGGING_TARGET == 0 )); then
				echo -e "LOGGING_LOGROTATE" >> "$UNINSTALL_FILE"
				echo -e "LOGGING_RAMLOG" >> "$UNINSTALL_FILE"
				echo -e "LOGGING_RSYSLOG" >> "$UNINSTALL_FILE"

			#Ramlog - clear every 24H
			elif (( $INDEX_LOGGING_TARGET == -1 )); then
			
				LOGGING_RAMLOG=1
				echo -e "LOGGING_LOGROTATE" >> "$UNINSTALL_FILE"
				echo -e "LOGGING_RSYSLOG" >> "$UNINSTALL_FILE"

			#Ramlog - backup every 1H to $HOME/logfile_storage, then clear.
			elif (( $INDEX_LOGGING_TARGET == -2 )); then

				LOGGING_RAMLOG=1
				echo -e "LOGGING_LOGROTATE" >> "$UNINSTALL_FILE"
				echo -e "LOGGING_RSYSLOG" >> "$UNINSTALL_FILE"

			#Logrotate + rsyslog - logs to disk
			elif (( $INDEX_LOGGING_TARGET == -3 )); then

				LOGGING_LOGROTATE=1
				LOGGING_RSYSLOG=1
				echo -e "LOGGING_RAMLOG" >> "$UNINSTALL_FILE"

			fi
			
			#Update Current Logging index
			INDEX_LOGGING_CURRENT=$INDEX_LOGGING_TARGET

		fi

	}

	Install_Apply_Configs(){

		# Stop Services
		/DietPi/dietpi/dietpi-services stop

		# Copy/Set optimised Software settings. 
		# Set install states to 2 (installed).
	 
		#Destop
		if (( $DESKTOP_LXDE == 1 )); then
		
			#Remove Lxrandr Menu item (monitor configuration tool as we set res in config.txt)
			rm /usr/share/applications/lxrandr.desktop
			
			#Copy PCmanFM configs
			mkdir -p "$HOME"/.config/pcmanfm/LXDE
			cp /DietPi/dietpi/conf/desktop/pcmanfm.conf "$HOME"/.config/pcmanfm/LXDE/pcmanfm.conf
			cp /DietPi/dietpi/conf/desktop/pcmanfm-desktopitems.conf "$HOME"/.config/pcmanfm/LXDE/desktop-items-0.conf
			
			#Disable Trash
			sed -i '/use_trash=/c\use_trash=0' /etc/xdg/libfm/libfm.conf

			#Copy DietPi pcmanfm favourite links
			cp /DietPi/dietpi/conf/desktop/.gtk-bookmarks "$HOME"/.gtk-bookmarks

			#Copy DietPi Panel config
			mkdir -p "$HOME"/.config/lxpanel/LXDE/panels
			cp /DietPi/dietpi/conf/desktop/panel "$HOME"/.config/lxpanel/LXDE/panels/panel
			if (( $HW_MODEL == 10 )); then
				sed -i 's/iceweasel.desktop/firefox.desktop/g' "$HOME"/.config/lxpanel/LXDE/panels/panel
			fi

			#Openbox config
			mkdir -p "$HOME"/.config/openbox
			cp /DietPi/dietpi/conf/desktop/lxde-rc.xml "$HOME"/.config/openbox/lxde-rc.xml
			
			#Create Desktop SymLinks
			mkdir -p "$HOME"/Desktop
			ln -sf /usr/share/applications/pcmanfm.desktop "$HOME"/Desktop/pcmanfm.desktop
			ln -sf /usr/share/applications/htop.desktop "$HOME"/Desktop/htop.desktop

			#DietPi Desktop symlinks
			ln -sf /DietPi/dietpi/conf/desktop/dietpi-software.desktop "$HOME"/Desktop/dietpi-software.desktop
			ln -sf /DietPi/dietpi/conf/desktop/dietpi-update.desktop "$HOME"/Desktop/dietpi-update.desktop
			ln -sf /DietPi/dietpi/conf/desktop/dietpi-config.desktop "$HOME"/Desktop/dietpi-config.desktop
			
			#DietPi Menu symlinks
			ln -sf /DietPi/dietpi/conf/desktop/dietpi-software.desktop /usr/share/applications/dietpi-software.desktop
			ln -sf /DietPi/dietpi/conf/desktop/dietpi-update.desktop /usr/share/applications/dietpi-update.desktop
			ln -sf /DietPi/dietpi/conf/desktop/dietpi-config.desktop /usr/share/applications/dietpi-config.desktop

			DESKTOP_LXDE=2
		fi

		#WEBSERVER_LAMP
		if (( $WEBSERVER_LAMP == 1 )); then
		
			WEBSERVER_LAMP=2
		fi		
		
		#WEBSERVER_LEMP
		if (( $WEBSERVER_LEMP == 1 )); then
		
			WEBSERVER_LEMP=2
		fi		

		#WEBSERVER_LASP
		if (( $WEBSERVER_LASP == 1 )); then
		
			WEBSERVER_LASP=2
		fi		
		
		#WEBSERVER_LESP
		if (( $WEBSERVER_LESP == 1 )); then
		
			WEBSERVER_LESP=2
		fi		

		#WEBSERVER_APACHE
		if (( $WEBSERVER_APACHE == 1 )); then
		
			#Ubuntu
			if (( $DISTRO == 2 )); then
				#Odroid C1 Apache2 confs
				if (( $HW_MODEL == 10 )); then
					cp /DietPi/dietpi/conf/apache2_c1.conf /etc/apache2/apache2.conf
					cp /DietPi/dietpi/conf/apache2_c1_000-default /etc/apache2/sites-available/000-default.conf
					cp /DietPi/dietpi/conf/apache2_c1_mpmevent /etc/apache2/mods-available/mpm_event.conf
					cp /DietPi/dietpi/conf/apache2_c1_mpmprefork /etc/apache2/mods-available/mpm_prefork.conf
					cp /DietPi/dietpi/conf/apache2_c1_mpmworker /etc/apache2/mods-available/mpm_worker.conf
					
					#Use /var/www as default webfolder
					mv /var/www/html/index.html /var/www/index.html
					rm -R /var/www/html
				fi

			#Debian
			elif (( $DISTRO == 1 )); then	
				#Rpi apache2 confs
				cp /DietPi/dietpi/conf/apache2_rpi.conf /etc/apache2/apache2.conf

				if (( $HW_MODEL == 2 )); then
					sed -i "/StartServers /c\StartServers 4" /etc/apache2/apache2.conf
					sed -i "/MinSpareServers /c\MinSpareServers 1" /etc/apache2/apache2.conf
					sed -i "/MaxSpareServers /c\MaxSpareServers 4" /etc/apache2/apache2.conf
					sed -i "/MinSpareThreads /c\MinSpareThreads 1" /etc/apache2/apache2.conf
					sed -i "/MaxSpareThreads /c\MaxSpareThreads 8" /etc/apache2/apache2.conf
					sed -i "/MaxClients /c\MaxClients 50" /etc/apache2/apache2.conf
					sed -i "/MaxRequestsPerChild /c\MaxRequestsPerChild 0" /etc/apache2/apache2.conf
					sed -i "/ThreadLimit /c\ThreadLimit 16" /etc/apache2/apache2.conf
					sed -i "/ThreadsPerChild /c\ThreadsPerChild 8" /etc/apache2/apache2.conf
					sed -i "/MaxKeepAliveRequests /c\MaxKeepAliveRequests 10" /etc/apache2/apache2.conf
				
				fi
			fi
			
			#Sites-Available settings. Disable access log, set error log level
			sed -i "/CustomLog /c\        #CustomLog "'${APACHE_LOG_DIR}'"/access.log combined" /etc/apache2/sites-available/*
			sed -i "/LogLevel /c\        LogLevel error" /etc/apache2/sites-available/*

			# Workaround: Apache2 always starts first on debian (S01), before dietpi-ramlog (S01) can generate /var/log folders.
			# update-rc.d apache2 defaults 80 00 | has no effect.
			# So we will rely on dietpi-services to launch it which runs during boot
			update-rc.d apache2 disable &> /dev/null

			WEBSERVER_APACHE=2
		fi
			
		#WEBSERVER_NGINX
		if (( $WEBSERVER_NGINX == 1 )); then

			#create www directory
			mkdir -p /var/www
			chown -R www-data:www-data /var/www
			#Nginx confs
			cp /DietPi/dietpi/conf/nginx.conf /etc/nginx/nginx.conf
			cp /DietPi/dietpi/conf/nginx.site-available-default /etc/nginx/sites-available/default
			#Nginx index page
			if (( $DISTRO == 1 )); then
				cp /usr/share/nginx/www/index.html /var/www/index.html
			elif (( $DISTRO == 2 )); then
				cp /usr/share/nginx/html/index.html /var/www/index.html
			fi
			
			#CPU core count
			sed -i "/worker_processes/c\worker_processes $CPU_CORES_TOTAL;" /etc/nginx/nginx.conf

			WEBSERVER_NGINX=2
		fi
		
		#NB: Webserver_name now = 2

		#WEBSERVER_MYSQL
		if (( $WEBSERVER_MYSQL == 1 )); then

			WEBSERVER_MYSQL=2
		fi

		#WEBSERVER_SQLITE
		if (( $WEBSERVER_SQLITE == 1 )); then

			WEBSERVER_SQLITE=2
		fi

		#WEBSERVER_PHP
		if (( $WEBSERVER_PHP == 1 )); then
		
			#DEBIAN Wheezy uses PHP-APC
			#UBUNTU 14.04 uses OPcache

			#Nginx uses PHP-FPM
			if (( $WEBSERVER_NGINX == 2 )); then
				#Php-FPM confs
				cp /DietPi/dietpi/conf/php-fpm.conf /etc/php5/fpm/php-fpm.conf
				cp /DietPi/dietpi/conf/php-fpm_pool.conf /etc/php5/fpm/pool.d/www.conf
				sed -i '/cgi.fix_pathinfo=/c\cgi.fix_pathinfo=0' /etc/php5/fpm/php.ini
				
				#PHP5-fpm optimizations based on total cores
				sed -i "/pm.max_children = /c\pm.max_children = $CPU_CORES_TOTAL" /etc/php5/fpm/pool.d/www.conf
				sed -i "/pm.start_servers = /c\pm.start_servers = $CPU_CORES_TOTAL" /etc/php5/fpm/pool.d/www.conf
				sed -i "/pm.min_spare_servers = /c\pm.min_spare_servers = $CPU_CORES_TOTAL" /etc/php5/fpm/pool.d/www.conf
				sed -i "/pm.max_spare_servers = /c\pm.max_spare_servers = $CPU_CORES_TOTAL" /etc/php5/fpm/pool.d/www.conf

			fi

			#Debian - Apply APC settings
			if (( $DISTRO == 1 )); then

				#php-apc locations/settings
				local target_apc_ini='/etc/php5/apache2/conf.d/20-apc.ini'
				local target_apc_cachesize='64M'
				#3days TTL
				local target_apc_ttl='259200'
				
				#apc ini locations
				if (( $WEBSERVER_APACHE == 2 )); then
					target_apc_ini='/etc/php5/apache2/conf.d/20-apc.ini'
				elif (( $WEBSERVER_NGINX == 2 )); then
					target_apc_ini='/etc/php5/fpm/conf.d/20-apc.ini'
				fi

				#Define APC cache sizes
				if (( $HW_MODEL == 2 )); then
					target_apc_cachesize='64M'
				elif (( $HW_MODEL == 1 )); then
					target_apc_cachesize='32M'
				elif (( $HW_MODEL == 0 )); then
					target_apc_cachesize='12M'
				fi
				
				#Save to new apc config file
				echo -e "extension=apc.so" > "$target_apc_ini"
				echo -e "apc.enabled=1" >> "$target_apc_ini"
				echo -e "apc.shm_size=$target_apc_cachesize" >> "$target_apc_ini"
				echo -e "apc.ttl=$target_apc_ttl" >> "$target_apc_ini"
				cp /usr/share/doc/php-apc/apc.php /var/www/apc.php

			#Ubuntu OPcache
			elif (( $DISTRO == 2 )); then
				#Enable FPM opcache for Nginx installations
				if (( $WEBSERVER_NGINX == 2 )); then
					sed -i '/opcache.enable=/c\opcache.enable=1' /etc/php5/fpm/php.ini
					sed -i '/opcache.memory_consumption=/c\opcache.memory_consumption=64' /etc/php5/fpm/php.ini
				fi
				wget https://raw.githubusercontent.com/amnuts/opcache-gui/master/index.php -O /var/www/apc.php

			fi
			
			#Set PHP.INI's to UTF-8
			sed -i '/default_charset/c\default_charset = "UTF-8"' /etc/php5/apache2/php.ini &> /dev/null
			sed -i '/default_charset/c\default_charset = "UTF-8"' /etc/php5/cli/php.ini &> /dev/null
			sed -i '/default_charset/c\default_charset = "UTF-8"' /etc/php5/fpm/php.ini &> /dev/null

			#PHP info web file
			cat << _EOF_ > /var/www/phpinfo.php
<?php
phpinfo();
?>
_EOF_

			WEBSERVER_PHP=2
		fi

		#WEBSERVER_MYADMINPHP
		if (( $WEBSERVER_MYADMINPHP == 1 )); then
		
			if (( $WEBSERVER_NGINX == 2 )); then
				ln -s /usr/share/phpmyadmin /var/www
			fi

			WEBSERVER_MYADMINPHP=2
		fi
		
		#OwnCloud
		if (( $OWNCLOUD == 1 )); then
			
			#Setup /var/lib/owncloud/data
			local owncloud_data_symlink="/var/lib/owncloud/data"
			mkdir -p "$owncloud_data_symlink" &> /dev/null
			#remove the /data path, but keep base directories
			rm -R "$owncloud_data_symlink" &> /dev/null

			#Setup Data directory
			local owncloud_data_dir=$TARGET_DIRECTORY
			# we cant use /root with www-data, even with permissions setup, it cant access it.
			if [ "$owncloud_data_dir" = "/root" ]; then
				owncloud_data_dir=""
			fi
			mkdir -p "$owncloud_data_dir"/owncloud

			#Create symlink
			ln -fs "$owncloud_data_dir"/owncloud "$owncloud_data_symlink"

			#Set permissions to both directory and symlink.
			chown -R www-data:www-data "$owncloud_data_dir"/owncloud
			chown -R www-data:www-data "$owncloud_data_symlink"

			chmod -R 770 "$owncloud_data_dir"/owncloud
			chmod -R 770 "$owncloud_data_symlink"

			OWNCLOUD=2
		fi

		# Transmission
		if (( $TRANSMISSION == 1 )); then
		
			sed -i '/USER=/c\USER=root' /etc/init.d/transmission-daemon
			cp /DietPi/dietpi/conf/transmission_settings /etc/transmission-daemon/settings.json

			Create_UserContent_Folders
			sed -i '/"download-dir":/c\"download-dir": "'$TARGET_DIRECTORY/$FOLDER_DOWNLOADS'",' /etc/transmission-daemon/settings.json
			
			#total mem / 7
			local cache_size=$(( $(free -m -o | grep 'Mem:' | awk '{print $2}') / 7 ))
			local peer_limit=16
			local max_peers=16
			local peer_limit_torrent=10
			local upload_slots=3
			
			#Odroid C1
			if (( $HW_MODEL == 10 )); then
				peer_limit=16
				max_peers=16
				peer_limit_torrent=10
				upload_slots=3

			#Rpi
			elif (( $HW_MODEL == 2 )); then
				peer_limit=12
				max_peers=12
				peer_limit_torrent=7
				upload_slots=2

			elif (( $HW_MODEL == 1 )); then
				peer_limit=10
				max_peers=10
				peer_limit_torrent=6
				upload_slots=2

			elif (( $HW_MODEL == 0 )); then
				peer_limit=7
				max_peers=7
				peer_limit_torrent=5
				upload_slots=2

			fi

			#Apply optimized settings
			sed -i '/cache-size-mb/c\    "cache-size-mb": '$cache_size',' /etc/transmission-daemon/settings.json
			sed -i '/peer-limit-global/c\    "peer-limit-global": '$peer_limit',' /etc/transmission-daemon/settings.json
			sed -i '/max-peers-global/c\    "max-peers-global": '$max_peers',' /etc/transmission-daemon/settings.json
			sed -i '/peer-limit-per-torrent/c\    "peer-limit-per-torrent": '$peer_limit_torrent',' /etc/transmission-daemon/settings.json
			sed -i '/upload-slots-per-torrent/c\    "upload-slots-per-torrent": '$upload_slots',' /etc/transmission-daemon/settings.json
			
			TRANSMISSION=2
		fi

		#PHPBB
		if (( $PHPBB == 1 )); then
		
		   PHPBB=2
		fi
		
		# Proftpd
		if (( $FILESERVER_PROFTP == 1 )); then
			sed -i "/root/c\#root" /etc/ftpusers
			cp /DietPi/dietpi/conf/proftpd.conf /etc/proftpd/proftpd.conf
			sed -i "/DefaultRoot /c\DefaultRoot $TARGET_DIRECTORY" /etc/proftpd/proftpd.conf
			
			FILESERVER_PROFTP=2
		fi

		#Samba Server
		if (( $FILESERVER_SAMBA == 1 )); then
			echo -e "raspberry\nraspberry" | smbpasswd -s -a root
			cp /DietPi/dietpi/conf/smb.conf /etc/samba/smb.conf
			
			sed -i "/path = /c\path = $TARGET_DIRECTORY" /etc/samba/smb.conf
			
			FILESERVER_SAMBA=2
		fi
		
		# vsFTPD
		if (( $FILESERVER_VSFTPD == 1 )); then
			cp /DietPi/dietpi/conf/vsftpd.conf /etc/vsftpd.conf
			sed -i '/root/c\#root' /etc/ftpusers

			sed -i "/local_root=/c\local_root=$TARGET_DIRECTORY" /etc/vsftpd.conf

			FILESERVER_VSFTPD=2
		fi
		
		#Ympd MPD
		if (( $HIFI == 1 )); then
		
			#Start at boot		
			cp /DietPi/dietpi/conf/ympd_init /etc/init.d/ympd
			chmod +x /etc/init.d/ympd
			update-rc.d ympd defaults

			#Copy configs
			if (( $HW_MODEL == 10 )); then
				cp /DietPi/dietpi/conf/mpd_c1.conf /etc/mpd.conf
			elif (( $HW_MODEL <= 2 )); then
				cp /DietPi/dietpi/conf/mpd_rpi.conf /etc/mpd.conf
			fi
			
			#Setup data
			Create_UserContent_Folders
			mkdir -p "$TARGET_DIRECTORY"/.mpd_cache
			sed -i '/music_directory/c\music_directory "'$TARGET_DIRECTORY/$FOLDER_MUSIC'"' /etc/mpd.conf
			sed -i '/playlist_directory/c\playlist_directory "'$TARGET_DIRECTORY/$FOLDER_MUSIC'"' /etc/mpd.conf
			sed -i 
			
			#Grab our test music for the user.
			Download_Test_Media
			
			#Enable Dedicated PWM pll (HQ Audio)
			sed -i '/avoid_pwm_pll=/c\avoid_pwm_pll=0' /DietPi/config.txt
			
			HIFI=2
		fi

		#Kodi
		if (( $KODI == 1 )); then
			#odroid c1
			if (( $HW_MODEL == 10 )); then
				#startkodi alias for console.
				if (( $(cat /etc/bash.bashrc | grep -ci -m1 'startkodi') == 0 )); then
					echo -e "alias startkodi='xinit kodi-standalone'" >> /etc/bash.bashrc
				fi

			#rpi
			elif (( $HW_MODEL <= 2 )); then
				#Remove Kodi user (Whilst waving)
				userdel -r kodi

				#Copy udev rules, probably not needed for root, but we'll do it anyway
				cp /DietPi/dietpi/conf/kodi_udev /etc/udev/rules.d/99-input.rules
				chmod +x /etc/udev/rules.d/99-input.rules

				#Run Kodi as root
				sed -i '/USER=/c\USER=root' /etc/default/kodi
		 
				#Enable Dedicated PWM pll
				sed -i '/avoid_pwm_pll=/c\avoid_pwm_pll=0' /DietPi/config.txt

				#startkodi alias for console (fix black screen exit script).
				if (( $(cat /etc/bash.bashrc | grep -ci -m1 'startkodi') == 0 )); then
					echo -e "alias startkodi='/DietPi/dietpi/misc/rpi_kodi_noblackscreen_run'" >> /etc/bash.bashrc
				fi

			fi

			#Create .desktop SymLinks
			mkdir -p "$HOME"/Desktop
			rm /usr/share/applications/kodi.desktop &> /dev/null
			ln -sf /DietPi/dietpi/conf/desktop/kodi.desktop /usr/share/applications/kodi.desktop
			ln -sf /DietPi/dietpi/conf/desktop/kodi.desktop "$HOME"/Desktop/kodi.desktop

			KODI=2

		fi
		
		#RetroPie
		if (( $RETROPIE == 1 )); then
			
			#Move Retro Pie data
			if [ "$TARGET_DIRECTORY" != "$HOME" ]; then
				mv "$HOME"/RetroPie "$TARGET_DIRECTORY"/
				ln -s "$TARGET_DIRECTORY"/RetroPie "$HOME"/RetroPie
			fi
			
			#Fix RetroPi Emulation Station menu (remove raspi-config)
			rm "$HOME"/RetroPie/retropiemenu/*
			touch "$HOME"/RetroPie/retropiemenu/rpsetup.rp
			sed -i 's/sudo //g' /etc/emulationstation/es_systems.cfg
			
			#Enable Dedicated PWM pll
			sed -i '/avoid_pwm_pll=/c\avoid_pwm_pll=0' /DietPi/config.txt

			RETROPIE=2
		fi
		
		#MINIDLNA
		if (( $MINIDLNA == 1 )); then
			#Run as root
			sed -i '/USER=m/c\USER=root' /etc/init.d/minidlna
			
			#Copy Config
			cp /DietPi/dietpi/conf/minidlna.conf /etc/minidlna.conf

			#Setup data directories
			Create_UserContent_Folders
			mkdir -p "$TARGET_DIRECTORY"/.MiniDLNA_Cache
			
			sed -i "/media_dir=A,/c\media_dir=A,$TARGET_DIRECTORY/$FOLDER_MUSIC" /etc/minidlna.conf
			sed -i "/media_dir=P,/c\media_dir=P,$TARGET_DIRECTORY/$FOLDER_PICTURES" /etc/minidlna.conf
			sed -i "/media_dir=V,/c\media_dir=V,$TARGET_DIRECTORY/$FOLDER_VIDEO" /etc/minidlna.conf
			sed -i "/db_dir=/c\db_dir=$TARGET_DIRECTORY/.MiniDLNA_Cache" /etc/minidlna.conf
			
			MINIDLNA=2
		fi
		
		#NoIp
		if (( $NOIPDYNDNS == 1 )); then

			NOIPDYNDNS=2
		fi
		
		#VPN Server
		if (( $VPNSERVER == 1 )); then
			#Set password to raspberry
			service vpnserver start
			sleep 3
			echo -e "1\n\n\nServerPasswordSet\nraspberry\nraspberry" | /usr/local/vpnserver/vpncmd

			#Copy config file to VPN server
			service vpnserver stop
			cp /DietPi/dietpi/conf/vpnserver.config /usr/local/vpnserver/vpn_server.config

			VPNSERVER=2
		fi
		
		#OpenTyrian
		if (( $OPENTYRIAN == 1 )); then

			#Create .Desktop SymLinks
			mkdir -p "$HOME"/Desktop
			rm /usr/share/applications/opentyrian.desktop &> /dev/null
			ln -s /DietPi/dietpi/conf/desktop/opentyrian.desktop /usr/share/applications/opentyrian.desktop
			ln -s /DietPi/dietpi/conf/desktop/opentyrian.desktop "$HOME"/Desktop/opentyrian.desktop

			OPENTYRIAN=2
		fi
		
		#DietPi-Cam
		if (( $DIETPICAM == 1 )); then

			#raspimjpeg Conf
			cp /DietPi/dietpi/conf/dietpicam_raspimjpeg /etc/raspimjpeg
			chmod +x /etc/raspimjpeg
			ln -s /etc/raspimjpeg /var/www/dietpicam/raspimjpeg

			#raspimjpeg/php schedule startup and control script
			cp /DietPi/dietpi/conf/dietpicam_raspimjpeg_init /etc/raspimjpeg_init
			chmod +x /etc/raspimjpeg_init

			#Motion config file
			mkdir -p /etc/motion
			cp /DietPi/dietpi/conf/dietpicam_motion /etc/motion/motion.conf
			chgrp www-data /etc/motion/motion.conf
			chmod 777 /etc/motion/motion.conf
			usermod -a -G video www-data

			#Set web permissions for local dietpicam web directory
			chown -R www-data:www-data /var/www/dietpicam

			#Setup Data directory
			local dietpicam_media_directory=$TARGET_DIRECTORY
			# we cant use /root/dietpicam, even with permissions setup, it cant access it. So move it to /dietpicam
			if [ "$dietpicam_media_directory" = "/root" ]; then
				dietpicam_media_directory=""
			fi
			
			mkdir -p "$dietpicam_media_directory"/dietpicam
			rm -R /var/www/dietpicam/media
			ln -s "$dietpicam_media_directory"/dietpicam /var/www/dietpicam/media
			chown -R www-data:www-data "$dietpicam_media_directory"/dietpicam
			chmod -R 777 "$dietpicam_media_directory"/dietpicam
			
			#Enable RPi Camera module
			sed -i '/start_x=/c\start_x=1' /DietPi/config.txt

			DIETPICAM=2
		fi

		#Deluge
		if (( $DELUGE == 1 )); then

			#copy init
			cp /DietPi/dietpi/conf/deluge_init /etc/deluge_init
			chmod +x /etc/deluge_init

			#Copy configs
			mkdir -p "$HOME"/.config/deluge
			cp /DietPi/dietpi/conf/deluge.conf "$HOME"/.config/deluge/core.conf
			cp /DietPi/dietpi/conf/deluge_web.conf "$HOME"/.config/deluge/web.conf
			
			#Setup data directory
			Create_UserContent_Folders
			sed -i '/"move_completed_path": /c\"move_completed_path": "'$TARGET_DIRECTORY/$FOLDER_DOWNLOADS'",' "$HOME"/.config/deluge/core.conf
			sed -i '/"download_location": /c\"download_location": "'$TARGET_DIRECTORY/$FOLDER_DOWNLOADS'",' "$HOME"/.config/deluge/core.conf
			sed -i '/"torrentfiles_location": /c\"torrentfiles_location": "'$TARGET_DIRECTORY/$FOLDER_DOWNLOADS'",' "$HOME"/.config/deluge/core.conf

			#Applied Optimized settings
			#Cache size is in steps of 16 KiB. (Cachesize * 16 = total KiB)
			if (( $HW_MODEL == 10 )); then
				sed -i '/"cache_size": /c\"cache_size": 7814,' "$HOME"/.config/deluge/core.conf
			elif (( $HW_MODEL == 2 )); then
				sed -i '/"cache_size": /c\"cache_size": 7814,' "$HOME"/.config/deluge/core.conf
			elif (( $HW_MODEL == 1 )); then
				sed -i '/"cache_size": /c\"cache_size": 3906,' "$HOME"/.config/deluge/core.conf
			elif (( $HW_MODEL == 0 )); then
				sed -i '/"cache_size": /c\"cache_size": 1954,' "$HOME"/.config/deluge/core.conf
			fi
		
			DELUGE=2
		fi
		
		#GRASSHOPPER
		if (( $GRASSHOPPER == 1 )); then

			GRASSHOPPER=2
		fi

		#RaspControl
		if (( $RASPCONTROL == 1 )); then

			chown -R www-data:www-data /var/www/raspcontrol
			chmod -R 750 /var/www/raspcontrol
			
			#Setup login file
			mkdir -p /etc/raspcontrol

cat << _EOF_ > /etc/raspcontrol/database.aptmnt
{
    "user": "root",
    "password": "raspberry"
}
_EOF_

			chown -R www-data:www-data /etc/raspcontrol
			chmod -R 750 /etc/raspcontrol

			RASPCONTROL=2
		fi
		
		#Linux Dash
		if (( $LINUXDASH == 1 )); then

			chown -R www-data:www-data /var/www/linuxdash
			chmod -R 750 /var/www/linuxdash

			LINUXDASH=2
		fi
		
		#PIHOLE
		if (( $PIHOLE == 1 )); then
		
			#Apply dnsmasq.conf
			cat << _EOF_ > /etc/dnsmasq.conf
#/etc/dnsmasq.conf

addn-hosts=/etc/pihole/gravity.list
domain-needed
bogus-priv
no-resolv
server=8.8.8.8
server=8.8.4.4
interface=eth0
listen-address=127.0.0.1
cache-size=10000
log-queries
log-facility=/var/log/pihole.log
local-ttl=300
_EOF_

			#Generate index page that replaces adverts
			cat << _EOF_ > /var/www/index.html
<html>
Blocked by Pi-hole.
</html>
_EOF_

			#Set www permisions
			chown -R www-data:www-data /var/www/pihole
			chmod -R 775 /var/www/pihole

			#Add active network adapter to DNS server conf
			local active_network_adapter=$(sed -n 3p /DietPi/dietpi/.network)
			sed -i "/interface=/c\interface=$active_network_adapter" /etc/dnsmasq.conf
			
			#Add dnsmasq to root group. Allows access to /var/log/pihole.log
			usermod -G root dnsmasq

			PIHOLE=2
		fi
		
		#SUBSONIC
		if (( $SUBSONIC == 1 )); then
		
			#Generate user dir
			Create_UserContent_Folders
			
			#Optimize memory limit (total / 6)
			local subsonic_memory_max=$(( $(free -m -o | grep 'Mem:' | awk '{print $2}') / 6 ))
			cat << _EOF_ > /etc/default/subsonic
SUBSONIC_USER=root
SUBSONIC_ARGS="--quiet --pidfile=/run/subsonic.pid --max-memory=$subsonic_memory_max --default-music-folder=$TARGET_DIRECTORY/$FOLDER_MUSIC --default-podcast-folder=$TARGET_DIRECTORY/$FOLDER_MUSIC --default-playlist-folder=$TARGET_DIRECTORY/$FOLDER_MUSIC"
_EOF_

			#Grab our test media for user
			Download_Test_Media
			
			#Enable Dedicated PWM pll (HQ Audio)
			sed -i '/avoid_pwm_pll=/c\avoid_pwm_pll=0' /DietPi/config.txt

			SUBSONIC=2

		fi

		#WEBIOPI
		if (( $WEBIOPI == 1 )); then
			#auto start
			update-rc.d webiopi defaults

			WEBIOPI=2
		fi

		#WEAVED
		if (( $WEAVED == 1 )); then

			WEAVED=2
		fi
		
	}

	Install_Apply_GPU_Settings(){

		local memory_split_mode=0

		#Define Memory Split Modes with installed software
		#Mode 3 (Gaming / HIGH GPU RAM)
		if (( $RETROPIE == 2 )); then 
			memory_split_mode=3
			
		#Mode 2 (Kodi / Dietpicam / MED GPU RAM / 128MB)	
		elif (( $KODI == 2 )); then 
			memory_split_mode=2
		elif (( $DIETPICAM == 2 )); then 
			memory_split_mode=2
			
		#Mode 1 (Desktop / LOW GPU RAM)	
		elif (( $DESKTOP_LXDE == 2 )); then 
			memory_split_mode=1
		elif (( $OPENTYRIAN == 2 )); then 
			memory_split_mode=1
			
		#Mode 0 (Server / NO GPU RAM)	
		else
			memory_split_mode=0
		fi

		#Apply GPU Settings
		#Mode 3
		if (( $memory_split_mode == 3 )); then

			#odroid c1
			sed -i '/setenv hdmioutput /c\setenv hdmioutput "1"' /DietPi/boot.ini
			sed -i '/setenv vpu /c\setenv vpu "1"' /DietPi/boot.ini
			sed -i '/setenv m_bpp /c\setenv m_bpp "32"' /DietPi/boot.ini

			#rpi
			sed -i '/gpu_mem_256=/c\gpu_mem_256=128' /DietPi/config.txt
			sed -i '/gpu_mem_512=/c\gpu_mem_512=192' /DietPi/config.txt
			sed -i '/gpu_mem_1024=/c\gpu_mem_1024=256' /DietPi/config.txt
			sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /DietPi/dietpi.txt
		#Mode 2	
		elif (( $memory_split_mode == 2 )); then

			#odroid c1
			sed -i '/setenv hdmioutput /c\setenv hdmioutput "1"' /DietPi/boot.ini
			sed -i '/setenv vpu /c\setenv vpu "1"' /DietPi/boot.ini
			sed -i '/setenv m_bpp /c\setenv m_bpp "32"' /DietPi/boot.ini

			#rpi
			sed -i '/gpu_mem_256=/c\gpu_mem_256=128' /DietPi/config.txt
			sed -i '/gpu_mem_512=/c\gpu_mem_512=128' /DietPi/config.txt
			sed -i '/gpu_mem_1024=/c\gpu_mem_1024=128' /DietPi/config.txt
			sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /DietPi/dietpi.txt
		#Mode 1
		elif (( $memory_split_mode == 1 )); then

			#odroid c1
			sed -i '/setenv hdmioutput /c\setenv hdmioutput "1"' /DietPi/boot.ini
			sed -i '/setenv vpu /c\setenv vpu "0"' /DietPi/boot.ini
			sed -i '/setenv m_bpp /c\setenv m_bpp "16"' /DietPi/boot.ini

			#rpi
			sed -i '/gpu_mem_256=/c\gpu_mem_256=64' /DietPi/config.txt
			sed -i '/gpu_mem_512=/c\gpu_mem_512=64' /DietPi/config.txt
			sed -i '/gpu_mem_1024=/c\gpu_mem_1024=64' /DietPi/config.txt
			sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /DietPi/dietpi.txt
		#Mode 0	
		elif (( $memory_split_mode == 0 )); then

			#odroid c1
			#sed -i '/setenv hdmioutput /c\setenv hdmioutput "1"' /DietPi/boot.ini
			sed -i '/setenv vpu /c\setenv vpu "0"' /DietPi/boot.ini
			sed -i '/setenv m_bpp /c\setenv m_bpp "16"' /DietPi/boot.ini

			#rpi
			sed -i '/gpu_mem_256=/c\gpu_mem_256=16' /DietPi/config.txt
			sed -i '/gpu_mem_512=/c\gpu_mem_512=16' /DietPi/config.txt
			sed -i '/gpu_mem_1024=/c\gpu_mem_1024=16' /DietPi/config.txt
			#HDMI output, use user setting, dont change | sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /DietPi/dietpi.txt
		fi

	}

	USB_HDD_CONNECTED=0
	Check_Usb_Hdd_Connected(){

		USB_HDD_CONNECTED=$(df -h | grep -ci -m1 '/dev/sda1')
	}

	Run_Installations(){

		#Set target data install directory
		TARGET_DIRECTORY="$HOME"
		if (( $USBDRIVE > 0 )); then
			TARGET_DIRECTORY="/mnt/usb_1"
		fi
	
		#Set local path to home folder
		cd "$HOME"/
		
		#Update Apt
		Banner_Apt_Update

		#Update apt (waits for thread completion)
		/DietPi/dietpi/dietpi-apt-get_update 1
		
		#Upgrade Apt
		Banner_Setup
		Banner_Apt_Update
		apt-get upgrade -y

		#Apply DietPi choice systems
		Apply_FileServer_Choices
		Apply_SSHServer_Choices
		Apply_Logging_Choices

		#Install Linux Software
		Install_Linux_Software

		#Install DietPi Optimized Software
		Install_Dietpi_Software

		#Apply Uninstall script created by DietPi choice system
		Uninstall_NonSelected_Choices

		#Apply DietPi Configuration and Optimization Files
		Banner_Configs
		Install_Apply_Configs

		#Apply GPU Memory Splits
		Install_Apply_GPU_Settings

		#Write to .install File
		Write_InstallFileList

		#Set Install Stage to Finished
		echo 1 > /DietPi/dietpi/.install_stage

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# First Run functions (eg: on a fresh install)
	#/////////////////////////////////////////////////////////////////////////////////////

	AUTOINSTALL_INDEX=$(cat /DietPi/dietpi.txt | grep 'AUTO_Install_Index=' | sed 's/AUTO_Install_Index=//g')
	AUTOINSTALL_SKIPUPDATEREBOOTPROMPT=$(cat /DietPi/dietpi.txt | grep 'AUTO_DietpiSoftware_SkipUpdateRebootPrompt=' | sed 's/AUTO_DietpiSoftware_SkipUpdateRebootPrompt=//g')
	AUTOINSTALL_SKIPUSBDRIVE=$(cat /DietPi/dietpi.txt | grep 'AUTO_DietpiSoftware_SkipUsbDrive=' | sed 's/AUTO_DietpiSoftware_SkipUsbDrive=//g')
	AUTOINSTALL_SKIPQUESTIONS=$(cat /DietPi/dietpi.txt | grep 'AUTO_DietpiSoftware_SkipQuestions=' | sed 's/AUTO_DietpiSoftware_SkipQuestions=//g')
	AUTOINSTALL_SSHINDEX=$(cat /DietPi/dietpi.txt | grep 'AUTO_DietpiSoftware_SSHServerIndex=' | sed 's/AUTO_DietpiSoftware_SSHServerIndex=//g')
	AUTOINSTALL_FILESERVERINDEX=$(cat /DietPi/dietpi.txt | grep 'AUTO_DietpiSoftware_FileServerIndex=' | sed 's/AUTO_DietpiSoftware_FileServerIndex=//g')
	AUTOINSTALL_LOGGINGINDEX=$(cat /DietPi/dietpi.txt | grep 'AUTO_DietpiSoftware_LoggingIndex=' | sed 's/AUTO_DietpiSoftware_LoggingIndex=//g')

	FirstRun_Automated_Install(){

		#Automated install based on index
		if (( $AUTOINSTALL_INDEX > 0 )); then

			/DietPi/dietpi/dietpi-banner 0
			echo -e "\n Running Automated Installation:\n"

			#Skip dietpi-software menu
			TARGETMENUID=-1

			#Set start install
			GOSTARTINSTALL=1

			#Define Install indexs
			#DIETPI Core
			if (( $AUTOINSTALL_INDEX == 1 )); then
				echo -e " - DietPi-Core\n"
				/DietPi/dietpi/dietpi-funtime 0

			#Grasshopper
			elif (( $AUTOINSTALL_INDEX == 2 )); then
				echo -e " - Grasshopper\n"
				/DietPi/dietpi/dietpi-funtime 0

				#Required DietPi Software
				GRASSHOPPER=1

				#Override automation options
				AUTOINSTALL_SKIPUPDATEREBOOTPROMPT=1
				AUTOINSTALL_SKIPUSBDRIVE=1
				AUTOINSTALL_SKIPQUESTIONS=1
				AUTOINSTALL_SSHINDEX=-2
				AUTOINSTALL_LOGGINGINDEX=-2

				#Inform user to setup STATIC IP
				WHIP_TITLE='DietPi - Setup static IP'
				WHIP_QUESTION='DietPi-Config will now be launched, this will allow you to setup a STATIC IP for this device.\nSimply select your Ethernet or Wifi connection from the menu to access the IP address settings.\n\nThe "copy current address to STATIC" menu option can be used to quickly setup your static IP. Please ensure you change the mode "DHCP" to "STATIC".\n\nWhen you are done, select "Apply, Save Changes", then, exit DietPi-Config to resume setup.'
				whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" 19 70

				#Launch DietPi-config networking menu
				/DietPi/dietpi/dietpi-config 8 1
				

				#Launch DietPi-config networking menu
				/DietPi/dietpi/dietpi-config 8 1

			elif (( $AUTOINSTALL_INDEX == 3 )); then
				echo -e " - Pi-hole\n"
				/DietPi/dietpi/dietpi-funtime 0

				#Required DietPi Software
				PIHOLE=1
				
				#Override automation options
				AUTOINSTALL_SKIPUPDATEREBOOTPROMPT=1
				AUTOINSTALL_SKIPUSBDRIVE=1
				AUTOINSTALL_SKIPQUESTIONS=1

				#Inform user to setup STATIC IP
				WHIP_TITLE='DietPi - Setup static IP'
				WHIP_QUESTION='DietPi-Config will now be launched, this will allow you to setup a STATIC IP for this device.\nSimply select your Ethernet or Wifi connection from the menu to access the IP address settings.\n\nThe "copy current address to STATIC" menu option can be used to quickly setup your static IP. Please ensure you change the mode "DHCP" to "STATIC".\n\nWhen you are done, select "Apply, Save Changes", then, exit DietPi-Config to resume setup.'
				whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" 19 70

				#Launch DietPi-config networking menu
				/DietPi/dietpi/dietpi-config 8 1

			fi
		fi

		#Further Automated options. (Applied regardless of AUTOINSTALL_INDEX)
		INDEX_SSHSERVER_TARGET=$AUTOINSTALL_SSHINDEX
		INDEX_FILESERVER_TARGET=$AUTOINSTALL_FILESERVERINDEX
		INDEX_LOGGING_TARGET=$AUTOINSTALL_LOGGINGINDEX

	}

	FirstRun_DietPi_Update(){

		#-1 = 1st run | 0 = Reboot, updates applied | 1 = Idle, No updates
		#Update .update_stage file to completed
		echo 1 > /DietPi/dietpi/.update_stage		

		#Check for updates and apply if needed (1=force apply updates).
		/DietPi/dietpi/dietpi-update 1

		#Check update stage file again (dietpi-update will set to 0 if an update was applied and requires a reboot)
		if (( $(cat /DietPi/dietpi/.update_stage) == 0 )); then

			#Update .update_stage file to completed
			echo 1 > /DietPi/dietpi/.update_stage	

			clear
			/DietPi/dietpi/dietpi-banner 0
			WHIP_TITLE='DietPi has been updated'

			if (( $AUTOINSTALL_SKIPUPDATEREBOOTPROMPT == 0 )); then
				whiptail --title "$WHIP_TITLE" --msgbox "DietPi has been updated to the latest version.\nYour system will now reboot to finish the DietPi update. Once completed, simply login to resume DietPi Setup. \n\nPress Enter to Continue." 14 65
			fi

			#Make sure apt-get_update thread is finished
			/DietPi/dietpi/dietpi-apt-get_update 1

			#Reboot required NOW, exit this script NOW
			reboot
			exit
		fi

	}

	FirstRun_Questions(){

		#Questions Start (Ask our inital questions, before allowing access to the software selection menus)
		if (( $AUTOINSTALL_SKIPQUESTIONS == 0 )); then
			WHIP_TITLE='DietPi - Welcome'
			whiptail --title "$WHIP_TITLE" --msgbox "Welcome to the DietPi Installation System. \n \nBefore we can begin, we need to ask you a few questions regarding this installation. \n \nPress Enter to begin." 14 70
		fi

		#Request for Dedicated External Drive installation.
		if (( $USBDRIVE == 0 )) && (( $AUTOINSTALL_SKIPUSBDRIVE == 0 )); then
			WHIP_TITLE='Setup USB Dedicated Drive?'
			WHIP_QUESTION='Will you be using a dedicated USB hard drive with this DietPi installation? \n \n(NOTICE) Your decision now is final and cannot be changed at a later date. DietPi will automatically setup your future software installations to utilize the USB drive instead of MicroSD.\nAs USB hard drives are generally faster than MicroSD, using a USB drive can vastly improve system performance.\n\n This is recommended for: \n - BitTorrent (Store downloads) \n - OwnCloud \n - Kodi (Store Media Files) \n - RetroPie (Store Roms) \n - Hifi (Store Music)'
			whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --backtitle "$WHIP_TITLE" --defaultno 22 70
			CHOICE=$?
			if (( $CHOICE == 0 )); then
			
				#Run external drive setup script
				/DietPi/dietpi/dietpi-external_drive_setup

				#Confirm drive is available
				Check_Usb_Hdd_Connected
				if (( $USB_HDD_CONNECTED == 1 )); then
					USBDRIVE=2
				fi
			fi
		fi

		#Questions End
		if (( $AUTOINSTALL_INDEX == 0 )); then
			WHIP_TITLE='DietPi - Questions Completed'
			whiptail --title "$WHIP_TITLE" --msgbox "The DietPi-Software menu will now appear with the following options: \n\n- Select DietPi Optimized Software\nThis will allow you to select Optimized and Ready to Run software.\nhttp://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=5#p5\n\n- Select Additional Linux Software.\nThis will allow you to select standard linux software relative to this installation. \n\n- DietPi-Config\nA feature rich configuration tool for your device.\n \n- Go Start Install\nThis will start the installation process for your selected items." 21 75
		fi

	}
	
	#/////////////////////////////////////////////////////////////////////////////////////
	# WHIPTAIL INFOs
	#/////////////////////////////////////////////////////////////////////////////////////

	Info_NoConnection_NoInstall(){
		whiptail --title "Error - Unable to Connect" --msgbox "Unable to Install $INSTALL_DESCRIPTION \n\n$INSTALL_URL_ADDRESS is offline and/or unreachable." 14 70
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# WHIPTAIL MENUS
	#/////////////////////////////////////////////////////////////////////////////////////
	TARGETMENUID=0

	Menu_No_Internet(){

		#Ask to check settings, 
		whiptail --title "No Internet Connection!" --yesno " Internet access is required to start the DietPi Installation Program \n Would you like to change your network settings and try again?" --yes-button "Ok" --no-button "Exit" --backtitle "$WHIP_BACKTITLE" 14 60
		CHOICE=$?
		#run dietpi config
		if (( $CHOICE == 0 )); then
			whiptail --title "Launching DietPi-Config" --msgbox "DietPi-Config will now be started.\nUse the Network Options menu to change and test your network settings.\n\nWhen completed, Exit DietPi-Config to resume setup." --backtitle "Launching DietPi-Config" 14 60
			/DietPi/dietpi/dietpi-config 8 1
		#User aborted setup
		else
			Banner_Aborted
			
			#Exit Script NOW
			exit
		fi

	}
	
	Menu_Main(){

		#Data for storing SSH server index info
		local index_sshserver_text="None"
		if (( $INDEX_SSHSERVER_TARGET == -1 )); then
			index_sshserver_text="Dropbear"
		elif (( $INDEX_SSHSERVER_TARGET == -2 )); then
			index_sshserver_text="OpenSSH"
		fi

		#Data for storing Fileserver index info
		local index_fileserver_text="None"
		if (( $INDEX_FILESERVER_TARGET == -1 )); then
			index_fileserver_text="ProFTP"
		elif (( $INDEX_FILESERVER_TARGET == -2 )); then
			index_fileserver_text="Samba"
		fi

		#Data for storing Logging index info
		local index_logging_text="None"
		if (( $INDEX_LOGGING_TARGET == -1 )); then
			index_logging_text="DietPi-Ramlog #1"
		elif (( $INDEX_LOGGING_TARGET == -2 )); then
			index_logging_text="DietPi-Ramlog #2"
		elif (( $INDEX_LOGGING_TARGET == -3 )); then
			index_logging_text="Full"
		fi

		#Hold our string that tells the user what software will be removed when using Index based choice systems
		local toberemoved_text=""
		
		WHIP_TITLE='---------- DietPi - Software Setup ----------'
		OPTION=$(whiptail --title "$WHIP_TITLE" --backtitle "$WHIP_TITLE" --menu " Hardware Detected : $HW_MODEL_DESCRIPTION" --cancel-button "Exit" 15 60 8 \
		"1" "Select DietPi Optimized Software." \
		"2" "Select Additional Linux Software." \
		"3" "SSH Server  : $index_sshserver_text" \
		"4" "File Server : $index_fileserver_text" \
		"5" "Log System  : $index_logging_text" \
		"6" "DietPi-Config" \
		"7" "Help!" \
		"Go" "Start Install"  3>&1 1>&2 2>&3)

		CHOICE=$?
		if (( $CHOICE == 0 )); then
			case "$OPTION" in
			  1)
				TARGETMENUID=1
				;;
			  2)
				TARGETMENUID=2
				;;
			  3)
				WHIP_TITLE='SSH Server Choices'
				OPTION=$(whiptail --title "$WHIP_TITLE" --menu "> None\nSelecting this option will uninstall all SSH servers. This reduces system resources and improves performance. Useful for users who do NOT require networked/remote terminal access.\n\n> Dropbear (Recommended)\nLightweight SSH server, installed by default on DietPi systems.\n\n> OpenSSH\nA feature rich SSH server with SFTP/SCP support, at the cost of increased resource usage." --cancel-button "Back" --default-item "$index_sshserver_text" 21 75 3 \
				"None" "Not required / manual setup." \
				"Dropbear" "Lightweight SSH Server (Recommended)." \
				"OpenSSH" "Feature Rich SSH Server with SFTP/SCP support." 3>&1 1>&2 2>&3)

				#Assign target index
				if [ "$OPTION" = "None" ]; then
					INDEX_SSHSERVER_TARGET=0
					toberemoved_text="Dropbear and OpenSSH Server"
				elif [ "$OPTION" = "Dropbear" ]; then
					INDEX_SSHSERVER_TARGET=-1
					toberemoved_text="OpenSSH Server"
				elif [ "$OPTION" = "OpenSSH" ]; then
					INDEX_SSHSERVER_TARGET=-2
					toberemoved_text="Dropbear"
				#Reset to current
				else
					INDEX_SSHSERVER_TARGET=$INDEX_SSHSERVER_CURRENT
				fi
				
				#Check for changes
				INSTALL_SSHSERVER_CHOICESMADE=false
				if (( $INDEX_SSHSERVER_TARGET != $INDEX_SSHSERVER_CURRENT )); then
					INSTALL_SSHSERVER_CHOICESMADE=true

					#Inform user
					WHIP_TITLE="SSH Server Change"
					WHIP_QUESTION="$OPTION has been selected:\n- Your choice will be applied when >> Go Start Install << is selected.\n- $toberemoved_text installations will be automatically uninstalled."
					whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 11 75
					
				fi
			  ;;
			  4)
				WHIP_TITLE='Fileserver Choices'
				OPTION=$(whiptail --title "$WHIP_TITLE" --menu "> None\nSelect this option if you do NOT require a method of accessing or sharing files and folders on this device.\n\n> ProFTP (Recommended for RPi v1)\nAllows you to access/share files on this device efficiently with minimal cpu usage. Uses FTP protocol.\n\n> Samba (Recommended for RPi v2)\nAllows you to easily access/share files on this device, at the cost of higher cpu usage.\n\nMore info: http://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=15#p19" --cancel-button "Back" --default-item "$index_fileserver_text" 23 75 3 \
				"None" "Not required / manual setup." \
				"ProFTP" "Efficient, lightweight fileserver (recommended)." \
				"Samba" "Feature rich fileserver." 3>&1 1>&2 2>&3)

				#Assign target index
				if [ "$OPTION" = "None" ]; then
					INDEX_FILESERVER_TARGET=0
					toberemoved_text="ProFTP and Samba Server"
				elif [ "$OPTION" = "ProFTP" ]; then
					INDEX_FILESERVER_TARGET=-1
					toberemoved_text="Samba Server"
				elif [ "$OPTION" = "Samba" ]; then
					INDEX_FILESERVER_TARGET=-2
					toberemoved_text="ProFTP"
				#Reset to current
				else
					INDEX_FILESERVER_TARGET=$INDEX_FILESERVER_CURRENT
				fi
				
				#Check for changes
				INSTALL_FILESERVER_CHOICESMADE=false
				if (( $INDEX_FILESERVER_TARGET != $INDEX_FILESERVER_CURRENT )); then
					INSTALL_FILESERVER_CHOICESMADE=true

					#Inform user
					WHIP_TITLE="Fileserver Choice Change"
					WHIP_QUESTION="$OPTION has been selected:\n- Your choice will be applied when >> Go Start Install << is selected.\n- $toberemoved_text installations will be automatically uninstalled."
					whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 11 75
					
				fi
				;;
			  5)
				WHIP_TITLE='Logging System Choices'
				OPTION=$(whiptail --title "$WHIP_TITLE" --menu "> None\nSelecting this option will uninstall DietPi-Ramlog, Logrotate, Rsyslog.\n\n> DietPi-Ramlog #1 (Max performance)\nMounts /var/log to RAM, reducing filesystem IO. Logfiles are cleared every hour. Does NOT save logfiles to disk.\n\n> DietPi-Ramlog #2\nSame as #1, with the added feature of saving logfile contents to disk ($HOME/logfile_storage/*), before being cleared.\n\n> Full (Reduces performance)\nMounts /var/log to DISK, reduces SDcard lifespan. Full logging system with Logrotate and Rsyslog." --cancel-button "Back" --default-item "$index_logging_text" 25 75 4 \
				"None" " Not required / manual setup." \
				"DietPi-Ramlog #1" " Hourly clear (recommended)." \
				"DietPi-Ramlog #2" " Hourly save, then clear." \
				"Full" " Logrotate and Rsyslog." 3>&1 1>&2 2>&3)

				#Assign target index
				if [ "$OPTION" = "None" ]; then
					INDEX_LOGGING_TARGET=0
					toberemoved_text="DietPi-Ramlog, Logrotate, Rsyslog"
				elif [ "$OPTION" = "DietPi-Ramlog #1" ]; then
					INDEX_LOGGING_TARGET=-1
					toberemoved_text="Logrotate, Rsyslog"
				elif [ "$OPTION" = "DietPi-Ramlog #2" ]; then
					INDEX_LOGGING_TARGET=-2
					toberemoved_text="Logrotate, Rsyslog"
				elif [ "$OPTION" = "Full" ]; then
					INDEX_LOGGING_TARGET=-3
					toberemoved_text="DietPi-Ramlog"
				#Reset to current
				else
					INDEX_LOGGING_TARGET=$INDEX_LOGGING_CURRENT
				fi
				
				#Check for changes
				INSTALL_LOGGING_CHOICESMADE=false
				if (( $INDEX_LOGGING_TARGET != $INDEX_LOGGING_CURRENT )); then
					INSTALL_LOGGING_CHOICESMADE=true

					#Inform user
					WHIP_TITLE="Logging System Change"
					WHIP_QUESTION="$OPTION has been selected:\n- Your choice will be applied when >> Go Start Install << is selected.\n- $toberemoved_text installations will be automatically uninstalled."
					whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 11 75
				fi
				;;
			  6)
				#Launch DietPi-config
				/DietPi/dietpi/dietpi-config
				;;
			  7)
				whiptail --title "DietPi - Help" --msgbox "Welcome to DietPi.\n\nEasy to follow, step by step guides for installing DietPi:\nhttp://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=9\n\nFor a list of all installation options and their details:\nhttp://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=5" --backtitle "$WHIP_TITLE" 16 75
				;;
			  Go)
				Menu_StartInstall
				;;
			esac
		#Exit/Abort Setup
		else
			Menu_Exit
		fi
	}

	Menu_Exit(){

		#1st run install
		if (( $DIETPI_INSTALL_STAGE == 0 )); then
			WHIP_TITLE='Exit Setup?'
			WHIP_QUESTION=' DietPi has not fully been installed.\n This must be completed prior to using DietPi by selecting:\n - Go Start Install. \n \n Would you like to exit and abort the installation?'
			whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --backtitle "$WHIP_TITLE" --yes-button "Ok" --no-button "Back" --defaultno 13 65
			CHOICE=$?
			if (( $CHOICE == 0 )); then
				Banner_Aborted
				#Exit script NOW
				exit
			else
				#Return to Main Menu
				TARGETMENUID=0
			fi
		#Standard exit
		elif (( $DIETPI_INSTALL_STAGE == 1 )); then
			WHIP_TITLE='Exit DietPi-Software?'
			WHIP_QUESTION='Do you wish to exit DietPi-Software?\n\nAll changes to software selections will be cleared.'
			whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --backtitle "$WHIP_TITLE" --yes-button "Ok" --no-button "Back" --defaultno 11 65
			CHOICE=$?
			if (( $CHOICE == 0 )); then
				Banner_Aborted
				#Exit script NOW
				exit
			else
				#Return to Main Menu
				TARGETMENUID=0
			fi
		fi
	}

	Menu_ConfirmInstall(){

		#Confirm Software install
		WHIP_TITLE='DietPi - Start Installation?'
		WHIP_QUESTION='DietPi is now ready to install your software choices. \nWould you like to begin?'
		whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --backtitle "$WHIP_TITLE" 10 70
		CHOICE=$?
		if (( $CHOICE == 0 )); then
			#exit menu system
			TARGETMENUID=-1
			
			#Enable installation start flag
			GOSTARTINSTALL=1
		else
			#Return to Main Menu
			TARGETMENUID=0
		fi
		
	}

	Menu_StartInstall(){

		#Check if the user has made changes to their software selections.
		if [ "$INSTALL_DIETPI_CHOICESMADE" = false ] && 
			[ "$INSTALL_LINUX_CHOICESMADE" = false ] && 
			[ "$INSTALL_SSHSERVER_CHOICESMADE" = false ] && 
			[ "$INSTALL_FILESERVER_CHOICESMADE" = false ] && 
			[ "$INSTALL_LOGGING_CHOICESMADE" = false ]; then

			#1st run install
			if (( $DIETPI_INSTALL_STAGE == 0 )); then
				WHIP_TITLE='No Software Selected. Continue?'
				WHIP_QUESTION='DietPi was unable to detect any software selections for install. Do you wish to continue?\n\nBy selecting Ok: \n- DietPi optimized software will NOT be installed.\nYou can use dietpi-software at a later date if you change your mind. \n\n- You want a Minimal Raspbian/Debian Server Install.\nDietPi is a minimal image. A great OS base to use with your projects.'
				whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --backtitle "$WHIP_TITLE" --yes-button "Ok" --no-button "Back" --defaultno 16 75
				CHOICE=$?
				if (( $CHOICE == 0 )); then
					#exit menu system
					TARGETMENUID=-1
					
					#Enable installation start flag
					GOSTARTINSTALL=1
				else
					#Return to Main Menu
					TARGETMENUID=0
				fi
			#Not 1st run
			elif (( $DIETPI_INSTALL_STAGE == 1 )); then
				WHIP_TITLE='No Changes to Software Selection'
				whiptail --title "$WHIP_TITLE" --msgbox "No changes have been detected. Unable to start installation." 8 65
			fi
		# Confirm install with user
		else
			Menu_ConfirmInstall
		fi
	}

	#TARGETMENUID=1
	Menu_Dietpi_Software(){

		#Reset Choices made flag
		INSTALL_DIETPI_CHOICESMADE=false

		#Obtain On/Off state for whiptail menu
		local grasshopper_w="off"
		if (( $GRASSHOPPER > 0 )); then
			grasshopper_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $GRASSHOPPER == 1 )); then
				GRASSHOPPER=0
			fi
		fi
		
		local desktop_w="off"
		if (( $DESKTOP_LXDE > 0 )); then
			desktop_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $DESKTOP_LXDE == 1 )); then
				DESKTOP_LXDE=0
			fi
		fi
		
		local transmission_w="off"
		if (( $TRANSMISSION > 0 )); then
			transmission_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $TRANSMISSION == 1 )); then
				TRANSMISSION=0
			fi
		fi
		
		local owncloud_w="off"
		if (( $OWNCLOUD > 0 )); then
			owncloud_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $OWNCLOUD == 1 )); then
				OWNCLOUD=0
			fi
		fi

		local phpbb_w="off"
		if (( $PHPBB > 0 )); then
			phpbb_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $PHPBB == 1 )); then
				PHPBB=0
			fi
		fi

		local webserver_lamp_w="off"
		if (( $WEBSERVER_LAMP > 0 )); then
			webserver_lamp_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $WEBSERVER_LAMP == 1 )); then
				WEBSERVER_LAMP=0
			fi
		fi
		
		local webserver_lemp_w="off"
		if (( $WEBSERVER_LEMP > 0 )); then
			webserver_lemp_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $WEBSERVER_LEMP == 1 )); then
				WEBSERVER_LEMP=0
			fi
		fi

		local webserver_lasp_w="off"
		if (( $WEBSERVER_LASP > 0 )); then
			webserver_lasp_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $WEBSERVER_LASP == 1 )); then
				WEBSERVER_LASP=0
			fi
		fi
		
		local webserver_lesp_w="off"
		if (( $WEBSERVER_LESP > 0 )); then
			webserver_lesp_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $WEBSERVER_LESP == 1 )); then
				WEBSERVER_LESP=0
			fi
		fi

		local webserver_phpmyadmin_w="off"
		if (( $WEBSERVER_MYADMINPHP > 0 )); then
			webserver_phpmyadmin_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $WEBSERVER_MYADMINPHP == 1 )); then
				WEBSERVER_MYADMINPHP=0
			fi
		fi

		local fileserver_proftp_w="off"
		if (( $FILESERVER_PROFTP > 0 )); then
			fileserver_proftp_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $FILESERVER_PROFTP == 1 )); then
				FILESERVER_PROFTP=0
			fi
		fi

		local fileserver_samba_w="off"
		if (( $FILESERVER_SAMBA > 0 )); then
			fileserver_samba_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $FILESERVER_SAMBA == 1 )); then
				FILESERVER_SAMBA=0
			fi
		fi

		local fileserver_vsftpd_w="off"
		if (( $FILESERVER_VSFTPD > 0 )); then
			fileserver_vsftpd_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $FILESERVER_VSFTPD == 1 )); then
				FILESERVER_VSFTPD=0
			fi
		fi

		local hifi_w="off"
		if (( $HIFI > 0 )); then
			hifi_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $HIFI == 1 )); then
				HIFI=0
			fi
		fi
		
		local kodi_w="off"
		if (( $KODI > 0 )); then
			kodi_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $KODI == 1 )); then
				KODI=0
			fi
		fi

		local retropie_w="off"
		if (( $RETROPIE > 0 )); then
			retropie_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $RETROPIE == 1 )); then
				RETROPIE=0
			fi
		fi
		
		local minidlna_w="off"
		if (( $MINIDLNA > 0 )); then
			minidlna_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $MINIDLNA == 1 )); then
				MINIDLNA=0
			fi
		fi
		
		local noipdyndns_w="off"
		if (( $NOIPDYNDNS > 0 )); then
			noipdyndns_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $NOIPDYNDNS == 1 )); then
				NOIPDYNDNS=0
			fi
		fi
		
		local vpnserver_w="off"
		if (( $VPNSERVER > 0 )); then
			vpnserver_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $VPNSERVER == 1 )); then
				VPNSERVER=0
			fi
		fi
		
		local opentyrian_w="off"
		if (( $OPENTYRIAN > 0 )); then
			opentyrian_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $OPENTYRIAN == 1 )); then
				OPENTYRIAN=0
			fi
		fi
		
		local dietpicam_w="off"
		if (( $DIETPICAM > 0 )); then
			dietpicam_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $DIETPICAM == 1 )); then
				DIETPICAM=0
			fi
		fi

		local deluge_w="off"
		if (( $DELUGE > 0 )); then
			deluge_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $DELUGE == 1 )); then
				DELUGE=0
			fi
		fi

		local raspcontrol_w="off"
		if (( $RASPCONTROL > 0 )); then
			raspcontrol_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $RASPCONTROL == 1 )); then
				RASPCONTROL=0
			fi
		fi
		
		local linuxdash_w="off"
		if (( $LINUXDASH > 0 )); then
			linuxdash_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $LINUXDASH == 1 )); then
				LINUXDASH=0
			fi
		fi
		
		local pihole_w="off"
		if (( $PIHOLE > 0 )); then
			pihole_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $PIHOLE == 1 )); then
				PIHOLE=0
			fi
		fi

		local subsonic_w="off"
		if (( $SUBSONIC > 0 )); then
			subsonic_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $SUBSONIC == 1 )); then
				SUBSONIC=0
			fi
		fi

		local webiopi_w="off"
		if (( $WEBIOPI > 0 )); then
			webiopi_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $WEBIOPI == 1 )); then
				WEBIOPI=0
			fi
		fi

		local weaved_w="off"
		if (( $WEAVED > 0 )); then
			weaved_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $WEAVED == 1 )); then
				WEAVED=0
			fi
		fi

		#-----------------------------------------------------------------------------
		WHIP_TITLE='DietPi Optimized Software Selection'

		#Odroid C1 Software Installation
		if (( $HW_MODEL == 10 )); then
			whiptail --title "$WHIP_TITLE" --checklist --separate-output "Please use the spacebar to select the software you wish to install.\nSoftware details: http://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=5" --backtitle "$WHIP_TITLE" 20 75 12 \
			"" "────Desktops────────────────────────────────" "off" \
			"LXDE" "Beta: Uses FBturbo driver." $desktop_w \
			"" "────Media Systems───────────────────────────" "off" \
			"Kodi" "Your very own media centre/player." $kodi_w \
			"HiFi" "Web interface music / radio player." $hifi_w \
			"" "────BitTorrent──────────────────────────────" "off" \
			"Transmission" "BitTorrent server with web interface." $transmission_w \
			"" "────Cloud / Backups─────────────────────────" "off" \
			"OwnCloud" "Your very own cloud (eg: dropbox)." $owncloud_w \
			"" "────Forums / Blogs─────────────────────────" "off" \
			"Forums" "Your very own website forums (Phpbb3)." $phpbb_w \
			"" "────System Management──────────────────────" "off" \
			"Raspcontrol" "Web interface system stats." $raspcontrol_w \
			"LinuxDash" "Web interface system stats." $linuxdash_w \
			"" "────Webserver Stacks───────────────────────" "off" \
			"LAMP" "Webserver: Apache2 / MySql  / Php." $webserver_lamp_w \
			"LASP" "Webserver: Apache2 / SQLite / Php." $webserver_lasp_w \
			"LEMP" "Webserver: Nginx   / MySql  / Php." $webserver_lemp_w \
			"LESP" "Webserver: Nginx   / SQLite / Php." $webserver_lesp_w \
			"phpMyAdmin" "Webserver: Optional MySql admin tools." $webserver_phpmyadmin_w \
			"" "────DNS Servers────────────────────────────" "off" \
			"Pi-hole" "Block adverts for any device on your network." $pihole_w \
			"" "────File Servers───────────────────────────" "off" \
			"ProFTP" "Lightweight FTP / file server." $fileserver_proftp_w \
			"vsFTPD" "Alternative FTP / file server." $fileserver_vsftpd_w \
			"Samba" "Feature rich file server." $fileserver_samba_w \
			"" "────VPN Servers────────────────────────────" "off" \
			"SoftEther" "VPN server." $vpnserver_w \
			"" "────Website URLs───────────────────────────" "off" \
			"NoIp" "URL website address for your device." $noipdyndns_w 2>/tmp/dietpi-software_results

		#-----------------------------------------------------------------------------
		#Rpi
		elif (( $HW_MODEL <= 2 )); then
			whiptail --title "$WHIP_TITLE" --checklist --separate-output "Please use the spacebar to select the software you wish to install.\nSoftware details: http://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=5" --backtitle "$WHIP_TITLE" 20 75 12 \
			"" "────Desktops────────────────────────────────" "off" \
			"LXDE" "Ultra lightweight desktop." $desktop_w \
			"" "────Media Systems───────────────────────────" "off" \
			"Kodi" "Your very own media centre / player." $kodi_w \
			"HiFi" "Web interface music / radio player." $hifi_w \
			"MiniDLNA" "Media streaming server (DLNA, UPnP)." $minidlna_w \
			"" "────BitTorrent──────────────────────────────" "off" \
			"Transmission" "BitTorrent server with web interface." $transmission_w \
			"Deluge" "BitTorrent server with web interface." $deluge_w \
			"" "────Gaming──────────────────────────────────" "off" \
			"RetroPie" "Gaming: Turn your RPi into a gaming system." $retropie_w \
			"OpenTyrian" "Gaming: A classic retro game, addictive." $opentyrian_w \
			"" "────Cloud / Backups─────────────────────────" "off" \
			"OwnCloud" "Your very own cloud (eg: dropbox)." $owncloud_w \
			"" "────Forums / Blogs─────────────────────────" "off" \
			"Forums" "Your very own website forums (Phpbb3)." $phpbb_w \
			"" "────Camera / Surveillance───────────────────" "off" \
			"DietPiCam" "RPi Cam Control / Web Interface Surveillance." $dietpicam_w \
			"" "────Home Automation─────────────────────────" "off" \
			"Grasshopper" "Web App to control Bticino MyHome." $grasshopper_w \
			"" "────RPi-GPIO Related Software───────────────" "off" \
			"WebIOPi" "Web interface to control RPi GPIO." $webiopi_w \
			"" "────Remote Access───────────────────────────" "off" \
			"Weaved" "Access your device over the internet." $weaved_w \
			"" "────System Management──────────────────────" "off" \
			"Raspcontrol" "Web interface system stats." $raspcontrol_w \
			"LinuxDash" "Web interface system stats." $linuxdash_w \
			"" "────Webserver Stacks───────────────────────" "off" \
			"LAMP" "Webserver: Apache2 / MySql  / Php." $webserver_lamp_w \
			"LASP" "Webserver: Apache2 / SQLite / Php." $webserver_lasp_w \
			"LEMP" "Webserver: Nginx   / MySql  / Php." $webserver_lemp_w \
			"LESP" "Webserver: Nginx   / SQLite / Php." $webserver_lesp_w \
			"phpMyAdmin" "Webserver: Optional MySql admin tools." $webserver_phpmyadmin_w \
			"" "────DNS Servers────────────────────────────" "off" \
			"Pi-hole" "Block adverts for any device on your network." $pihole_w \
			"" "────File Servers───────────────────────────" "off" \
			"ProFTP" "Lightweight FTP / file server." $fileserver_proftp_w \
			"vsFTPD" "Alternative FTP / file server." $fileserver_vsftpd_w \
			"Samba" "Feature rich file server." $fileserver_samba_w \
			"" "────VPN Servers────────────────────────────" "off" \
			"SoftEther" "VPN server." $vpnserver_w \
			"" "────Website URLs───────────────────────────" "off" \
			"NoIp" "URL website address for your device." $noipdyndns_w 2>/tmp/dietpi-software_results
		fi
		
			##DISABLED
			#"SubSonic" "Web interface media streaming server." $subsonic_w \

		while read choice
		do
			case $choice in
			WebIOPi)
				if (( $WEBIOPI == 0 )); then
					WEBIOPI=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			Weaved)
				if (( $WEAVED == 0 )); then
					WEAVED=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			SubSonic)
				if (( $SUBSONIC == 0 )); then
					SUBSONIC=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			"Pi-hole")
				if (( $PIHOLE == 0 )); then
					PIHOLE=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			Grasshopper)
				if (( $GRASSHOPPER == 0 )); then
					GRASSHOPPER=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			LinuxDash)
				if (( $LINUXDASH == 0 )); then
					LINUXDASH=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			LXDE)
				if (( $DESKTOP_LXDE == 0 )); then
					DESKTOP_LXDE=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			Kodi)
				if (( $KODI == 0 )); then
					KODI=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			RetroPie)
				if (( $RETROPIE == 0 )); then
					RETROPIE=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			OpenTyrian)
				if (( $OPENTYRIAN == 0 )); then
					OPENTYRIAN=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			Transmission)
				if (( $TRANSMISSION == 0 )); then
					TRANSMISSION=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			Deluge)
				if (( $DELUGE == 0 )); then
					DELUGE=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			OwnCloud)
				if (( $OWNCLOUD == 0 )); then
					OWNCLOUD=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			DietPiCam)
				if (( $DIETPICAM == 0 )); then
					DIETPICAM=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			MiniDLNA)
				if (( $MINIDLNA == 0 )); then
					MINIDLNA=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			HiFi)
				if (( $HIFI == 0 )); then
					HIFI=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			Forums)
				if (( $PHPBB == 0 )); then
					PHPBB=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			LAMP)
				if (( $WEBSERVER_LAMP == 0 )); then
					WEBSERVER_LAMP=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			LEMP)
				if (( $WEBSERVER_LEMP == 0 )); then
					WEBSERVER_LEMP=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			LASP)
				if (( $WEBSERVER_LASP == 0 )); then
					WEBSERVER_LASP=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			LESP)
				if (( $WEBSERVER_LESP == 0 )); then
					WEBSERVER_LESP=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			phpMyAdmin)
				if (( $WEBSERVER_MYADMINPHP == 0 )); then
					WEBSERVER_MYADMINPHP=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			ProFTP)
				if (( $FILESERVER_PROFTP == 0 )); then
					FILESERVER_PROFTP=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			Samba)
				if (( $FILESERVER_SAMBA == 0 )); then
					FILESERVER_SAMBA=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			vsFTPD)
				if (( $FILESERVER_VSFTPD == 0 )); then
					FILESERVER_VSFTPD=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			SoftEther)
				if (( $VPNSERVER == 0 )); then
					VPNSERVER=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			NoIp)
				if (( $NOIPDYNDNS == 0 )); then
					NOIPDYNDNS=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			Raspcontrol)
				if (( $RASPCONTROL == 0 )); then
					RASPCONTROL=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			esac
		done < /tmp/dietpi-software_results
		rm /tmp/dietpi-software_results &> /dev/null

		#-----------------------------------------------------------------------------
		#Install Info/Warnings
		#phpMyAdmin (only available for install if MySql is to be installed also.)
		if (( $WEBSERVER_MYADMINPHP == 1 )) && (( $WEBSERVER_LAMP == 0 )) && (( $WEBSERVER_LEMP == 0 )); then
			WHIP_TITLE='phpMyAdmin - Requires MySql';WHIP_QUESTION='phpMyAdmin cannot be installed as it requires a MySql webserver stack.\n\nOne of the following must be either selected for install, or, already installed:\n- LAMP (Apache2). \n- LEMP (Nginx).\n\nYour phpMyAdmin selection has been removed.';whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 15 70
			WEBSERVER_MYADMINPHP=0
		fi
		
		#Pi-hole. prompt for static ip.
		if (( $PIHOLE == 1 )); then
			WHIP_TITLE=' Pi-hole - Setup Static IP Now?'
			WHIP_QUESTION='A static IP address is essential for Pi-hole installations. DietPi-Config can be used to quickly setup your static IP address.\n\nIf you have already setup your static IP, please ignore this message.\n\nWould you like to setup your static IP address now?'
			whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --defaultno --backtitle "$WHIP_TITLE" 15 70
			CHOICE=$?
			if (( $CHOICE == 0 )); then

				WHIP_TITLE=' Pi-hole - Setup Static IP'
				WHIP_QUESTION='DietPi-Config will now be launched. Simply select your Ethernet or Wifi connection from the menu to access the IP address settings.\n\nThe "copy current address to STATIC" menu option can be used to quickly setup your static IP. Please ensure you change the mode "DHCP" to "STATIC".\n\nWhen you are done, select "Apply, Save Changes", then exit DietPi-Config to resume setup.'
				whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 15 70
				
				#Launch DietPi-config networking menu
				/DietPi/dietpi/dietpi-config 8 1

			fi
		fi

		#RPi
		if (( $HW_MODEL <= 2 )); then
			if (( $RETROPIE == 1 )); then
				#RetroPie Project
				WHIP_TITLE=' RetroPie - Advanced Users'
				WHIP_QUESTION='DietPi will clone the RetroPie git for you and start the RetroPie Setup Script. Please follow the DietPi + RetroPie Setup Guide: http://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=8'
				whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 14 70
			fi

			#Give full credit to Micheal and his Repo.
			if (( $KODI == 1 )); then
				WHIP_TITLE=' Kodi - Thanks to Michael Groven'
				WHIP_QUESTION=' DietPi uses the Kodi installation which is provided by Michael Grovens excellent Repository \n \n For more information and to thank Michael for his hard work, please goto http://michael.gorven.za.net/raspberrypi/xbmc'
				whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 14 70
			fi
			
			#Weaved
			if (( $WEAVED == 1 )); then
				WHIP_TITLE=' Weaved - 1st run setup';
				WHIP_QUESTION='Weaved requires you to create an online account, and, link it this device.\n\nOnce DietPi has completed your software installations, and rebooted, please follow the First Run tutorial here:\nhttp://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=5&p=188#p188';
				whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 14 70
			fi

		#OdroidC1
		elif (( $HW_MODEL == 10 )); then

			#Desktop Beta warning.
			if (( $DESKTOP_LXDE == 1 )); then
				echo -e "nothing here" &> /dev/null
				WHIP_TITLE='LXDE Beta Information'
				WHIP_QUESTION='LXDE Desktop is currently in Beta. The FBturbo driver will be installed for hardware 2D acceleration. For more information, please see:\nhttp://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=11&p=69#p69'
				whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 14 70
			fi
		fi
		
		#-----------------------------------------------------------------------------
		#dietpi-config can be used to install/configure the following software. Ask user.
		#NoIp - 
		if (( $NOIPDYNDNS == 1 )); then
			WHIP_TITLE='NoIp - Setup Now?'
			WHIP_QUESTION='NoIp can be setup and configured by using DietPi-Config. Would you like to go there now? \n\n- Once completed, exit DietPi-Config to resume setup. \n\n- More information:\nhttp://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=5&start=10#p58'
			whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_TITLE" 15 70
			CHOICE=$?
			if (( $CHOICE == 0 )); then
				#Launch DietPi-config
				/DietPi/dietpi/dietpi-config 8 1

				#DietPi-Config will change .installed file, so reload new value into var
				NOIPDYNDNS=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'NOIPDYNDNS ' | awk '{print $2}')
				
			fi
		fi
		
		#-----------------------------------------------------------------------------
		#Installations that might require File server to access data.
		#Lets inform the user of File Server option
		local inform_user_fileserver=0
		if (( $INDEX_FILESERVER_TARGET == 0 )); then
			if (( $TRANSMISSION == 1 )); then
				inform_user_fileserver=1
			elif (( $DELUGE == 1 )); then
				inform_user_fileserver=1
			elif (( $RETROPIE == 1 )); then
				inform_user_fileserver=1
			elif (( $MINIDLNA == 1 )); then
				inform_user_fileserver=1
			elif (( $HIFI == 1 )); then
				inform_user_fileserver=1
			elif (( $HIFI == 1 )); then
				inform_user_fileserver=1
			fi
			
			if (( $inform_user_fileserver == 1 )); then
				WHIP_TITLE='File Server Recommended'
				WHIP_QUESTION="Your installation choices may benefit from a File Server. This would allow you to access and transfer files on this DietPi system.\n\nWhen you return to the main menu, select:\n- File Server\nThis will allow you to see the complete list of available fileserver choices."
				whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 15 70
			fi
		fi
		
		#-----------------------------------------------------------------------------
		#Boot Choices
		local bootchoices_available=false
		if (( $DESKTOP_LXDE == 1 )); then
			bootchoices_available=true
		elif (( $KODI == 1 )); then
			bootchoices_available=true
		elif (( $RETROPIE == 1 )); then
			bootchoices_available=true
		elif (( $OPENTYRIAN == 1 )); then
			bootchoices_available=true	
		fi

		if [ "$bootchoices_available" = true ]; then
			# Set Boot Order
			WHIP_TITLE=' DietPi - Boot Options'
			WHIP_QUESTION='Would you like to configure the auto boot options for DietPi?\n\nThis will allow you to choose which program loads automatically after booting eg:\n - Console\n - Desktop\n - Kodi'
			whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --defaultno --backtitle "$WHIP_TITLE" 14 70
			CHOICE=$?
			if (( $CHOICE == 0 )); then
				/DietPi/dietpi/dietpi-boot_order
			fi
		fi
		
		#Return to Main Menu
		TARGETMENUID=0
	}

	#TARGETMENUID=2
	Menu_Linux_Software(){

		#Inform User that DietPi software will automatically install additional linux software when required.
		WHIP_TITLE='Additional Linux Software'
		WHIP_QUESTION='DietPi will automatically install additional Linux software on the next screen, when required (eg: Desktop LXDE will install ALSA + Xserver).\n\nThis means you only need to select the software you actually require.'
		whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_TITLE" 12 70

		#Reset Choices made flag
		INSTALL_LINUX_CHOICESMADE=false

		#Obtain On/Off state for whiptail menu
		local vimfull_w="off"
		if (( $VIMFULL > 0 )); then
			vimfull_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $VIMFULL == 1 )); then
				VIMFULL=0
			fi
		fi
		
		local sshclient_w="off"
		if (( $SSHCLIENT > 0 )); then
			sshclient_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $SSHCLIENT == 1 )); then
				SSHCLIENT=0
			fi
		fi
		
		local smbclient_w="off"
		if (( $SMBCLIENT > 0 )); then
			smbclient_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $SMBCLIENT == 1 )); then
				SMBCLIENT=0
			fi
		fi
		
		local rpigpio_w="off"
		if (( $RPIGPIO > 0 )); then
			rpigpio_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $RPIGPIO == 1 )); then
				RPIGPIO=0
			fi
		fi
		
		local gitclient_w="off"
		if (( $GITCLIENT > 0 )); then
			gitclient_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $GITCLIENT == 1 )); then
				GITCLIENT=0
			fi
		fi
		
		local buildessential_w="off"
		if (( $BUILDESSENTIAL > 0 )); then
			buildessential_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $BUILDESSENTIAL == 1 )); then
				BUILDESSENTIAL=0
			fi
		fi
		
		local alsabase_w="off"
		if (( $ALSABASE > 0 )); then
			alsabase_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $ALSABASE == 1 )); then
				ALSABASE=0
			fi
		fi
		
		#XSERVERXORG
		local xserverxorg_w="off"
		if (( $XSERVERXORG > 0 )); then
			xserverxorg_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $XSERVERXORG == 1 )); then
				XSERVERXORG=0
			fi
		fi
		
		#CURLFTPFS
		local curlftpfs_w="off"
		if (( $CURLFTPFS > 0 )); then
			curlftpfs_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $CURLFTPFS == 1 )); then
				CURLFTPFS=0
			fi
		fi
		
		#SUDO_AUTH
		local sudo_auth_w="off"
		if (( $SUDO_AUTH > 0 )); then
			sudo_auth_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $SUDO_AUTH == 1 )); then
				SUDO_AUTH=0
			fi
		fi
		
		#-----------------------------------------------------------------------------
		#Odroid C1 Software Installation
		if (( $HW_MODEL == 10 )); then
			WHIP_TITLE='Linux - Software Selection'
			whiptail --title "$WHIP_TITLE" --checklist --separate-output "Please Select Additional Software you Require \n - Press the SpaceBar to select/unselect" --backtitle "$WHIP_TITLE" 20 71 12 \
			"" "────SSH Clients──────────────────────────────" "off" \
			"OpenSSH" "SSH Client: OpenSSH." $sshclient_w \
			"" "────Fileserver Clients───────────────────────" "off" \
			"Samba" "Samba Client: Access Network Shares." $smbclient_w \
			"Curlftpfs" "FTP Client: Allows filesystem mount." $curlftpfs_w \
			"" "────Development / Programming────────────────" "off" \
			"Vim" "Text editor: Console." $vimfull_w \
			"Build" "Build-Essentials." $buildessential_w \
			"Git" "Git Client." $gitclient_w \
			"" "────System───────────────────────────────────" "off" \
			"ALSA" "Linux Sound System" $alsabase_w \
			"Xserver" "Xinit / Xauth / Mali." $xserverxorg_w \
			"" "────Authentication───────────────────────────" "off" \
			"Sudo" "Run commands with root permissions." $sudo_auth_w 2>/tmp/dietpi-software_results
		#-----------------------------------------------------------------------------
		#Rpi
		elif (( $HW_MODEL <= 2 )); then

			WHIP_TITLE='Linux - Software Selection'
			whiptail --title "$WHIP_TITLE" --checklist --separate-output "Please Select Additional Software you Require \n - Press the SpaceBar to select/unselect" --backtitle "$WHIP_TITLE" 20 71 12 \
			"" "────SSH Clients──────────────────────────────" "off" \
			"OpenSSH" "SSH Client: OpenSSH." $sshclient_w \
			"" "────Fileserver Clients───────────────────────" "off" \
			"Samba" "Samba Client: Access Network Shares." $smbclient_w \
			"Curlftpfs" "FTP Client: Allows filesystem mount." $curlftpfs_w \
			"" "────Raspberry Pi─────────────────────────────" "off" \
			"RpiGpio" "Required for GPIO usage and projects." $rpigpio_w \
			"" "────Development / Programming────────────────" "off" \
			"Vim" "Text editor: Console." $vimfull_w \
			"Build" "Build-Essentials." $buildessential_w \
			"Git" "Git Client." $gitclient_w \
			"" "────System───────────────────────────────────" "off" \
			"ALSA" "Linux Sound System" $alsabase_w \
			"Xserver" "Xinit / Xauth / Mali." $xserverxorg_w \
			"" "────Authentication───────────────────────────" "off" \
			"Sudo" "Run commands with root permissions." $sudo_auth_w 2>/tmp/dietpi-software_results
		fi

		while read choice
		do
			case $choice in
				Vim)
					if (( $VIMFULL == 0 )); then
						VIMFULL=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				OpenSSH)
					if (( $SSHCLIENT == 0 )); then
						SSHCLIENT=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				Samba)
					if (( $SMBCLIENT == 0 )); then
						SMBCLIENT=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				Curlftpfs)
					if (( $CURLFTPFS == 0 )); then
						CURLFTPFS=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				RpiGpio)
					if (( $RPIGPIO == 0 )); then
						RPIGPIO=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				Build)
					if (( $BUILDESSENTIAL == 0 )); then
						BUILDESSENTIAL=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				Git)
					if (( $GITCLIENT == 0 )); then
						GITCLIENT=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				ALSA)
					if (( $ALSABASE == 0 )); then
						ALSABASE=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				Xserver)
					if (( $XSERVERXORG == 0 )); then
						XSERVERXORG=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				Sudo)
					if (( $SUDO_AUTH == 0 )); then
						SUDO_AUTH=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
			esac
		done < /tmp/dietpi-software_results
		rm /tmp/dietpi-software_results &> /dev/null

		#-----------------------------------------------------------------------------
		#dietpi-config can be used to install/configure the following software. Ask user.
		#CurlFTPfs - 
		if (( $CURLFTPFS == 1 )); then
			WHIP_TITLE='FTP Client - Setup Now?'
			WHIP_QUESTION='FTP Client as a filesystem mount (CurlFTPfs) can be setup and configured by using DietPi-Config. Would you like to go there now? \n\n- Once completed, exit DietPi-Config to resume setup.'
			whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_TITLE" 13 70
			CHOICE=$?
			if (( $CHOICE == 0 )); then
				#Launch DietPi-config
				/DietPi/dietpi/dietpi-config 8 1

				#DietPi-Config will change .installed file, so reload new value into var
				CURLFTPFS=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'CURLFTPFS ' | awk '{print $2}')
				
			fi
		fi

		#SMBCLIENT - 
		if (( $SMBCLIENT == 1 )); then
			WHIP_TITLE='Samba Client  - Setup Now?'
			WHIP_QUESTION='Samba Client can be setup and configured by using DietPi-Config. Would you like to go there now? \n\n- Once completed, exit DietPi-Config to resume setup.'
			whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_TITLE" 13 70
			CHOICE=$?
			if (( $CHOICE == 0 )); then
				#Launch DietPi-config
				/DietPi/dietpi/dietpi-config 8 1

				#DietPi-Config will change .installed file, so reload new value into var
				SMBCLIENT=$(cat "$FILEPATH_INSTALLED_FILE" | grep 'SMBCLIENT ' | awk '{print $2}')
			fi
		fi
		
		#-----------------------------------------------------------------------------
		#Return to Main Menu
		TARGETMENUID=0
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Banner Print
	#/////////////////////////////////////////////////////////////////////////////////////

	Banner_Setup(){
		/DietPi/dietpi/dietpi-banner 0
		echo -e "\n DietPi-Software \n"
	}

	Banner_Installing(){
		/DietPi/dietpi/dietpi-banner 0
		echo -e "\n Installing Software: $INSTALL_DESCRIPTION \n Please Wait, this may take some time... \n "
		/DietPi/dietpi/dietpi-funtime 0
		#sleep 3
	}

	Banner_Apt_Update(){
		/DietPi/dietpi/dietpi-banner 0
		echo -e "\n Please Wait: \n Updating and Upgrading APT, this may take some time... \n"
		sleep 1
	}

	Banner_Reboot(){
		/DietPi/dietpi/dietpi-banner 0
		echo -e "\n The system will now reboot. \n This completes the DietPi-Software installation.\n"
		/DietPi/dietpi/dietpi-funtime 0
		sleep 3
	}

	Banner_Configs(){
		/DietPi/dietpi/dietpi-banner 0
		echo -e "\n Please Wait: \n Applying DietPi optimizations for $HW_MODEL_DESCRIPTION \n"
		/DietPi/dietpi/dietpi-funtime 0
		#sleep 3
	}

	Banner_Aborted(){
		#1st run abort
		if (( $DIETPI_INSTALL_STAGE == 0 )); then
			/DietPi/dietpi/dietpi-banner 0
			echo -e "\n Installation Aborted by User \n Installation must be completed prior to using DietPi \n Please run dietpi-software to restart the installation \n"
		#Standard abort
		else
			/DietPi/dietpi/dietpi-banner 1
		fi
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	#--------------------------------------------------------------------------------------
	Banner_Setup

	#--------------------------------------------------------------------------------------
	#Check Internet before starting anything.
	#NB: Contains EXIT path
	Check_Internet_Connection
	
	#--------------------------------------------------------------------------------------
	#7 days since last apt-get update?
	if (( $(/DietPi/dietpi/dietpi-apt-get_update 3) >= 168 )); then
		#reset
		/DietPi/dietpi/dietpi-apt-get_update -1 &> /dev/null
	fi

	#Check/run apt-get update, as a background thread.
	/DietPi/dietpi/dietpi-apt-get_update 0 &> /dev/null
	
	#--------------------------------------------------------------------------------------
	#Check for DietPi updates on 1st run
	#NB: Contains EXIT path
	if (( $(cat /DietPi/dietpi/.update_stage) == -1 )); then
		FirstRun_DietPi_Update
	fi

	clear

	#--------------------------------------------------------------------------------------
	#Generate blank .installed file. Doesnt exist on a fresh image.
	if [ ! -f "$FILEPATH_INSTALLED_FILE" ]; then
		Write_InstallFileList
	#load .installed file, update vars
	else
		Read_InstallFileList
	fi

	#--------------------------------------------------------------------------------------
	#DietPi-Software, 1st run.
	if (( $DIETPI_INSTALL_STAGE == 0 )); then

		#Load and apply Automated install settings from dietpi.txt.
		FirstRun_Automated_Install
		
		#1st run Questions for user.
		FirstRun_Questions

	fi

	#--------------------------------------------------------------------------------------
	#Start DietPi Menu
	while (( $TARGETMENUID > -1 )); do
	
		clear
	
		if (( $TARGETMENUID == 0 )); then
			Menu_Main
		elif (( $TARGETMENUID == 1 )); then
			Menu_Dietpi_Software
		elif (( $TARGETMENUID == 2 )); then
			Menu_Linux_Software
		fi
	done
	
	#--------------------------------------------------------------------------------------
	#Start DietPi-Software installs
	if (( $GOSTARTINSTALL == 1 )); then
	
		Check_Internet_Connection

		if (( $INTERNET_CONNECTED == 1 )); then
		
			#Start installations for software
			Run_Installations
		
			#Upload DietPi-Survey Data
			/DietPi/dietpi/dietpi-survey &> /dev/null

			#Reboot
			Banner_Reboot
			reboot

		fi

	fi

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}