#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Bug Report Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Called from G_ERROR_HANDLER
	# - filename /DietPi/dietpi/dietpi-bugreport
	# - Generates $UNIQUE_ID.7z and uploads to dietpi.com
	# Usage:
	# - /DietPi/dietpi/dietpi-bugreport	Interactively let user send or remove already uploaded bug report
	# - /DietPi/dietpi/dietpi-bugreport 1	Automated send of bug report
	# - /DietPi/dietpi/dietpi-bugreport -1	Automated remove of already uploaded bug report
	#////////////////////////////////////

	#Import DietPi-Globals ---------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_PROGRAM_NAME='DietPi-Bugreport'
	G_CHECK_ROOT_USER
	G_CHECK_ROOTFS_RW
	G_INIT
	#Import DietPi-Globals ---------------------------------------------------------------

	INPUT=0
	disable_error=1 G_CHECK_VALIDINT $1 && INPUT=$1

	UNIQUE_ID=$(sed -n 5p /DietPi/dietpi/.hw_model)
	UPLOAD_FILENAME="$UNIQUE_ID.7z"

	# - byte
	UPLOAD_FILESIZE_LIMIT=10000000
	UPLOAD_FILESIZE=0

	SFTP_ADDR='ssh.dietpi.com'
	SFTP_USER='dietpi-survey'
	SFTP_PASS='upload2dietpi'

	# List of commands we want to run and redirect to upload archive
	aCOMMAND_LIST=(

		'ls -lha /var/log'
		'dpkg -l'
		'ip a'
		'ip r'
		'ip l'
		'lsusb'
		'cat /proc/cpuinfo'
		'ps aux'
		'blkid'
		'mount'
		'df -h'
		"ls /etc/rc*.d/"
		'cut -d: -f1 /etc/passwd'
		'locale'
		'ls -lha /mnt' #dietpi userdata location
		'dmesg'
		'uname -a'
		'lsmod'
		'aplay -l'
		'aplay -L'
		"systemctl status *.service -l"
		"systemctl status *.mount -l"
		'/DietPi/dietpi/dietpi-services status'

	)

	# List of files and folders we want to add to upload archive
	aFILE_LIST=(

		# - command output file
		'CMD_OUT.txt'

		# - Git Error file
		'G_ERROR_HANDLER_GITREPORT'

		# - logs
		"/var/log/*"

		# - DietPi scripts / logs
		"/DietPi/*"
		'/boot/dietpi.txt'
		'/boot/config.txt'
		"/boot/dietpi/*"
		"/tmp/.G*"
		"/var/tmp/dietpi/logs/*"

		# - /var/lib/dietpi
		"/var/lib/dietpi/*"

		# - confs
		#	- bash shell
		'/etc/bash.bashrc'
		"/etc/bashrc.d/*"
		'/root/.bashrc'
		"/home/*/.bashrc"
		#	- login shell
		'/etc/profile'
		"/etc/profile.d/*"
		'/root/.profile'
		"/home/*/.profile"

		'/etc/rc.local'
		'/etc/X11/xorg.conf'
		'/etc/asound.conf'
		'/etc/network/interfaces'
		'/etc/wpa_supplicant/wpa_supplicant.conf'
		'/etc/fstab'
		'/etc/sysctl.conf'
		"/etc/sysctl.d/*"

		# - Services
		"/etc/init.d/*"
		"/etc/systemd/system/*"
		"/lib/systemd/system/*"

		# - APT
		'/etc/apt/sources.list'
		"/etc/apt/sources.list.d/*"

	)

	Generate_Upload_File(){

		# Generate command output file
		for ((i=0; i<${#aCOMMAND_LIST[@]}; i++))
		do

			echo -e "\n----------\n${aCOMMAND_LIST[$i]}:\n----------" >> CMD_OUT.txt
			${aCOMMAND_LIST[$i]} >> CMD_OUT.txt

		done
		unset aCOMMAND_LIST

		# - Have the git error in 1st directory.
		cp /tmp/.G_ERROR_HANDLER_GITREPORT ./G_ERROR_HANDLER_GITREPORT &> /dev/null

		G_DIETPI-NOTIFY 2 'Packing upload archive, please wait...'
		7z a -t7z -spf "$UPLOAD_FILENAME" ${aFILE_LIST[@]} &> /tmp/dietpi-bugreport_compress.log

	}

	Upload_Bug_Report(){

		# Check upload location is online
		G_CHECK_URL "$SFTP_ADDR"
		if (( ! $? )); then

			if [[ ! -f $UPLOAD_FILENAME ]]; then

				G_WHIP_MSG "Failed to create compressed upload file: $UPLOAD_FILENAME\n\nOn the next screen you will be prompted to view the log. If problems persist, please contact DietPi for support."
				log=1 G_WHIP_VIEWFILE /tmp/dietpi-bugreport_compress.log
				exit 1

			fi

			rm /tmp/dietpi-bugreport_compress.log &> /dev/null

			# Limit filesize
			UPLOAD_FILESIZE=$(stat -c%s "$UPLOAD_FILENAME")

			# - Upload
			if (( $UPLOAD_FILESIZE <= $UPLOAD_FILESIZE_LIMIT )); then

				G_DIETPI-NOTIFY -2 'Running cURL'
				curl --connect-timeout 4 --retry 1 --retry-delay 4 -sT "$UPLOAD_FILENAME" sftp://"$SFTP_USER":"$SFTP_PASS"@"$SFTP_ADDR"/bugreport/
				if (( ! $? )); then

					# Bug report removal via empty file upload
					if (( $UPLOAD_FILESIZE == 0 )); then

						G_DIETPI-NOTIFY 0 'Bug report successfully purged'

					else

						G_DIETPI-NOTIFY 0 "Bug report sent, reference code: $UNIQUE_ID"

					fi

				else

					G_DIETPI-NOTIFY 1 'Failed to connect to SFTP server. Please try again later or report this to DietPi forum or GitHub repo in the first place.'

				fi

			else

				G_DIETPI-NOTIFY 1 'The bug report upload archive appears to be unexpected large. Please inspect and in case clean up the locations to be uploaded, as their size should never be that large:'
				printf "%s\n" "${aFILE_LIST[@]}"

			fi

		else

			G_DIETPI-NOTIFY 1 'Failed to connect to "dietpi.com". Please try again later or report this to DietPi forum or GitHub repo in the first place.'

		fi

		unset aFILE_LIST

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	# Interactive menu
	if (( $INPUT == 0 )); then

		while true
		do

			G_WHIP_MENU_ARRAY=(

				'1' ': Send bug report archive to help the developers investigate an issue.'
				'2' ': Remove my previous uploaded bug report.'
				'3' ': Show me what is included with the upload archive.'

			)

			G_WHIP_MENU "By sending a bug report file, you can help the developers to investigate your issue, in relation to your report on GitHub or the DietPi forum.
The file is sent via secured connection to our SFTP server and is stored there unreadable to the public upload user.
The file will be removed after your issue is solved and you can remove it by yourself as well by running \"dietpi-bugreport -1\" or via this menu.

Would you like to send a bug report archive or remove an already uploaded one?"
			if (( ! $? )); then

				if (( $G_WHIP_RETURNED_VALUE == 1 )); then

					INPUT=1
					break

				elif (( $G_WHIP_RETURNED_VALUE == 2 )); then

					INPUT=-1
					break

				elif (( $G_WHIP_RETURNED_VALUE == 3 )); then

					G_WHIP_SCROLLBOX "The upload will contain the following command outputs:

$(printf "\t- %s\n" "${aCOMMAND_LIST[@]}")

It will contain as well the following file locations:

$(printf "\t- %s\n" "${aFILE_LIST[@]}")"

				fi

			else

				break

			fi

		done

	fi

	if (( $INPUT == 1 || $INPUT == -1 )); then

		if (( $INPUT == 1 )); then

			# Generate 7z bug report file
			Generate_Upload_File

		else

			# Send empty file to clear already uploaded bug report
			> "$UPLOAD_FILENAME"

		fi

		# Upload bug report file
		Upload_Bug_Report

	fi

	#-----------------------------------------------------------------------------------
	exit 0
	#-----------------------------------------------------------------------------------

}
