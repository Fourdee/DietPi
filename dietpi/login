#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Login Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/login
	# - activates on login /etc/bashrc.d/dietpi-login.sh
	# - requires /DietPi/dietpi/.install_stage to have a value of 0 for it to run /DietPi/dietpi/dietpi-software (active after /dietpi/boot has completed first run setup)
	#////////////////////////////////////

	#Precaution: Wait for DietPi Ramdisk to finish
	until [[ -f /DietPi/.ramdisk ]]
	do

		G_DIETPI-NOTIFY 2 'Waiting for DietPi-RAMDISK to finish mounting DietPi to RAM...'
		sleep 1

	done

	#Import DietPi-Globals ---------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_PROGRAM_NAME='DietPi-Login'
	#G_INIT
	##Import DietPi-Globals ---------------------------------------------------------------

	#/////////////////////////////////////////////////////////////////////////////////////
	#Globals
	#/////////////////////////////////////////////////////////////////////////////////////
	FP_DIETPI_FIRSTRUNSETUP_LOG='/var/tmp/dietpi/logs/dietpi-firstrun-setup.log'
	FP_TMP_DIETPI_FIRSTRUNSETUP_LOG="/tmp/dietpi-firstrun-setup.log"

	#/////////////////////////////////////////////////////////////////////////////////////
	#DietPi-Autostart
	#/////////////////////////////////////////////////////////////////////////////////////
	AUTO_START_INDEX=0
	[[ -f /DietPi/dietpi/.dietpi-autostart_index ]] && AUTO_START_INDEX=$(</DietPi/dietpi/.dietpi-autostart_index)

	#Autoboot
	Run_AutoStart(){

		#Do we have a valid screen for autoboot?
		local screen_valid=0
		[[ ! $DISPLAY && $(tty) == '/dev/tty1' ]] && screen_valid=1

		#Boot to specific Program
		if (( $screen_valid )); then

			#Kodi
			if (( $AUTO_START_INDEX == 1 )); then

				/DietPi/dietpi/misc/start_kodi

			#Desktop (LXDE/MATE etc)
			elif (( $AUTO_START_INDEX == 2 )); then

				clear
				if (( $G_HW_MODEL == 11 )); then

					sleep 5 && startx &

				else

					startx

				fi

			#RetroPie/Emulation station
			elif (( $AUTO_START_INDEX == 3 )); then

				#emulationstation - can no longer be run as root
				/opt/retropie/supplementary/emulationstation/emulationstation.sh

			#OpenTyrian
			elif (( $AUTO_START_INDEX == 4 )); then

				/usr/local/games/opentyrian/run

			#DietPi-Cloudshell
			elif (( $AUTO_START_INDEX == 5 )); then

				#Launch DietPi-Cloudshell
				setterm --blank 0 --powersave off --cursor off
				systemctl start dietpi-cloudshell

			#Amiberry standard boot
			elif (( $AUTO_START_INDEX == 8 )); then

				$G_FP_DIETPI_USERDATA/amiberry/run.sh

			#DXX-Rebirth
			elif (( $AUTO_START_INDEX == 9 )); then

				#wait for DietPi-PostBoot to finish
				local max_seconds=15
				local current_seconds=0
				until systemctl status dietpi-postboot | grep -qi 'exited'
				do

					sleep 1
					((current_seconds++))

					#max loop limit
					(( $current_seconds >= $max_seconds )) && break

				done

				$G_FP_DIETPI_USERDATA/dxx-rebirth/run.sh

			#CAVA
			elif (( $AUTO_START_INDEX == 10 )); then

				#wait for DietPi-PostBoot to finish
				until systemctl status dietpi-postboot | grep -qi 'code=exited, status=0/SUCCESS'
				do

					sleep 1

				done

				# wait for MPD fifo to start
				sleep 4

				setterm --blank 0 --powersave off
				cava

			#Chromium
			elif (( $AUTO_START_INDEX == 11 )); then

				/var/lib/dietpi/dietpi-software/installed/chromium-autostart.sh

			#LightDM
			elif (( $AUTO_START_INDEX == 16 )); then

				/usr/sbin/lightdm

			fi

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	#Update network details for banner IP address.
	/DietPi/dietpi/func/obtain_network_details

	#----------------------------------------------------------------
	#Normal Login
	if (( $G_DIETPI_INSTALL_STAGE == 1 )); then

		/DietPi/dietpi/func/dietpi-banner 1

		(( $AUTO_START_INDEX > 0 )) && Run_AutoStart

	#----------------------------------------------------------------
	#Run DietPi-Software (1st run setup)
	elif (( $G_DIETPI_INSTALL_STAGE == 0 )); then

		/DietPi/dietpi/func/dietpi-banner 0

		#Wait for DietPi-Software if already running, else run it
		while pgrep 'dietpi-software' &> /dev/null
		do

			# - Automated
			if grep -qi '^[[:blank:]]*AUTO_SETUP_AUTOMATED=1' /DietPi/dietpi.txt; then

				G_DIETPI-NOTIFY 2 'DietPi is currently installing and configuring your system. Please wait for this to complete, check back later.'

			else

				G_DIETPI-NOTIFY 2 'DietPi-Software is already running on another terminal/screen. Please complete or exit, before continuing.'

			fi

			sleep 2

		done

		# - Start DietPi-Software

		#Set non-interactive shell, if automated installation (as .bashrc run via STDIN check is interactive)
		if grep -qi '^[[:blank:]]*AUTO_SETUP_AUTOMATED=1' /DietPi/dietpi.txt; then

			export G_USER_INPUTS=0

		fi

		/DietPi/dietpi/dietpi-software | tee $FP_TMP_DIETPI_FIRSTRUNSETUP_LOG
		mv $FP_TMP_DIETPI_FIRSTRUNSETUP_LOG $FP_DIETPI_FIRSTRUNSETUP_LOG

		#	reset to auto detection
		unset G_USER_INPUTS

	#----------------------------------------------------------------
	#DietPi finishing up bootloader.
	elif (( $G_DIETPI_INSTALL_STAGE == -1 )); then

		/DietPi/dietpi/func/dietpi-banner 0
		echo -e ' >> DietPi System prep is nearly completed: \n Please run /DietPi/dietpi/login after a few seconds'

	#----------------------------------------------------------------
	#DietPi running filesystem prep
	else

		/DietPi/dietpi/func/dietpi-banner 0
		echo -e ' >> Filesystem prep has not yet completed: \n Please wait for the system to reboot'

	fi

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}
