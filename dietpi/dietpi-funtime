#!/bin/bash
{
	#////////////////////////////////////
	# DietPi funtime Script
	#
	#////////////////////////////////////
	# Created by Dan Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	#////////////////////////////////////
	#
	# Info:
	# - Does absolutetly nothing useful, except:
	# - LOOKS COOL!
	#
	# Usage:
	# - Called from bordum, or, /boot/dietpi/dietpi-funtime iMODE
	#////////////////////////////////////
	
	INPUT=0
	if [[ $1 =~ ^-?[0-9]+$ ]]; then
		INPUT=$1
	fi
	
	#/////////////////////////////////////////////////////////////////////////////////////
	#Funtime_0 processing
	#/////////////////////////////////////////////////////////////////////////////////////

	Funtime_0(){

		local MAX_COUNT=28
		((MAX_COUNT--))

		local count=$MAX_COUNT
		local mode=1
		
		local passes=0
		local MAX_PASSES=3

		declare -a marker=(
		'#               processing | D I E T  P I             #'
		'D#              processing | D I E T  P I            #g'
		'D #             processing | D I E T  P I           #ng'
		'D I#            processing | D I E T  P I          #ing'
		'D I #           processing | D I E T  P I         #sing'
		'D I E#          processing | D I E T  P I        #ssing'
		'D I E #         processing | D I E T  P I       #essing'
		'D I E T#        processing | D I E T  P I      #cessing'
		'D I E T #       processing | D I E T  P I     #ocessing'
		'D I E T  #      processing | D I E T  P I    #rocessing'
		'D I E T  P#     processing | D I E T  P I   #processing'
		'D I E T  P #    processing | D I E T  P I  # processing'
		'D I E T  P I#   processing | D I E T  P I #  processing'
		'D I E T  P I #  processing | D I E T  P I#   processing'
		'D I E T  P I  # processing | D I E T  P #    processing'
		'D I E T  P I   #processing | D I E T  P#     processing'
		'D I E T  P I    #rocessing | D I E T  #      processing'
		'D I E T  P I     #ocessing | D I E T #       processing'
		'D I E T  P I      #cessing | D I E T#        processing'
		'D I E T  P I       #essing | D I E #         processing'
		'D I E T  P I        #ssing | D I E#          processing'
		'D I E T  P I         #sing | D I #           processing'
		'D I E T  P I          #ing | D I#            processing'
		'D I E T  P I           #ng | D #             processing'
		'D I E T  P I            #g | D#              processing'
		'D I E T  P I             # | #               processing'
		'D I E T  P I              #|#                processing'
		'D I E T  P I               #                 processing'

		)

		while (( $passes < $MAX_PASSES ))
		do
			if (( $mode == 0 )); then
				((count++))
				if (( $count >= $MAX_COUNT )); then
					count=$MAX_COUNT
					mode=1
					((passes++))
				fi
			elif (( $mode == 1 )); then
				((count--))
				if (( $count <= 0 )); then
					count=0
					mode=0
					((passes++))
				fi
			fi

			#color=$((228 + $count))
			color=93
			
			#echo -ne "${marker[$count]}\r"
			
			echo -ne "\e[38;5;${color}m ${marker[$count]}\r"
			#echo -e "\e[38;5;${color}m ${marker[$count]}\r"

			#echo -e "\e[38;5;93m ${marker[$count]}\r"
			
			#fSleep="0.0$count"
			local fSleep=0.03
			sleep "$fSleep"

		done

		unset marker
		
	}

	Funtime_1(){
		local count=0
		local mode=0
		
		local passes=0
		local MAX_PASSES=4

		local MAX_COUNT=1
		((MAX_COUNT--))
		declare -a marker=(
		'                           |                           '
		'                           |                           '
		'                           |                           '
		'                           |                           '
		'                           |                           '
		'                           |                           '
		'                           |                           '
		'                           |                           '

		)

		while (( $passes < $MAX_PASSES ))
		do
			if (( $mode == 0 )); then
				((count++))
				if (( $count >= $MAX_COUNT )); then
					count=$MAX_COUNT
					mode=1
					((passes++))
				fi
			elif (( $mode == 1 )); then
				((count--))
				if (( $count <= 0 )); then
					count=0
					mode=0
					((passes++))
				fi
			fi

			#color=$((228 + $count))
			color=93
			
			#echo -ne "${marker[$count]}\r"
			
			echo -ne "\e[38;5;${color}m ${marker[$count]}\r"
			#echo -e "\e[38;5;${color}m ${marker[$count]}\r"

			#echo -e "\e[38;5;93m ${marker[$count]}\r"
			
			#fSleep="0.0$count"
			local fSleep=0.03
			sleep "$fSleep"

		done

		unset marker
		
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	#Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	
	#----------------------------------------------------------------
	# Run
	Funtime_"$INPUT"
	
	#----------------------------------------------------------------
	#Put colours back to normal
	echo -e "\e[0m"

	#Move a line down
	echo -e ""
	#----------------------------------------------------------------
	exit
	#----------------------------------------------------------------
}
