#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Launcher
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/dietpi-launcher
	# - Whiptail menu with list of all DietPi programs etc.
	#
	#////////////////////////////////////
	#Import DietPi-Globals ---------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_PROGRAM_NAME='DietPi-Launcher'
	G_CHECK_ROOT_USER
	G_CHECK_ROOTFS_RW
	G_INIT
	#Import DietPi-Globals ---------------------------------------------------------------

	#/////////////////////////////////////////////////////////////////////////////////////
	# MENUS
	#/////////////////////////////////////////////////////////////////////////////////////
	LAST_SELECTED_ITEM='dietpi-config'

	Menu_Main(){

		G_WHIP_MENU_ARRAY=('' '●─ Install Optimized Software ')
		G_WHIP_MENU_ARRAY+=('DietPi-Software' ': Install optimized software thats ready to run.')
		G_WHIP_MENU_ARRAY+=('' '●─ Configuration ')
		G_WHIP_MENU_ARRAY+=('DietPi-Config' ': Feature rich config tool for your device.')

		if dpkg-query -s 'alsa-utils' &> /dev/null; then

			G_WHIP_MENU_ARRAY+=('DietPi-JustBoom' ': Launches EQ and MPD audio options menu')

		fi

		G_WHIP_MENU_ARRAY+=('DietPi-AutoStart' ': Choose what software runs after boot.')

		if [[ -f '/DietPi/dietpi/.installed' ]] && grep -qi 'aSOFTWARE_INSTALL_STATE\[62\]=2' /DietPi/dietpi/.installed; then

			G_WHIP_MENU_ARRAY+=('DietPi-CloudShell' ': Adjust update rate, scenes settings and more.')

		fi

		G_WHIP_MENU_ARRAY+=('DietPi-Cron' ': Modify the start times of cron jobs.')
		G_WHIP_MENU_ARRAY+=('DietPi-Services' ': Service and process tool control')
		G_WHIP_MENU_ARRAY+=('DietPi-Drive_Manager' ': Setup and control multiple external drives.')
		G_WHIP_MENU_ARRAY+=('' '●─ DietPi Updates ')
		G_WHIP_MENU_ARRAY+=('DietPi-Update' ': Keep your DietPi system upto date.')
		G_WHIP_MENU_ARRAY+=('' '●─ Backups / Sync ')
		G_WHIP_MENU_ARRAY+=('DietPi-Backup' ': Backup and restore your DietPi system.')
		G_WHIP_MENU_ARRAY+=('DietPi-Sync' ': Duplicate (Sync) one directory to another.')
		G_WHIP_MENU_ARRAY+=('' '●─ Maintenance ')
		G_WHIP_MENU_ARRAY+=('DietPi-Explorer' ': File explorer and manager.')
		G_WHIP_MENU_ARRAY+=('DietPi-Cleaner' ': Remove unwanted junk from your system.')
		G_WHIP_MENU_ARRAY+=('' '●─ Misc ')
		G_WHIP_MENU_ARRAY+=('DietPi-CpuInfo' ': Displays CPU Temp, frequencies, type etc.')
		G_WHIP_MENU_ARRAY+=('DietPi-LetsEncrypt' ': Frontend for Lets Encrypt, free SSL certs')
		G_WHIP_MENU_ARRAY+=('DietPi-NordVPN' ': GUI to setup a NordVPN connection')
		G_WHIP_MENU_ARRAY+=('DietPi-Survey' ': Join or leave our usage program, view upload file.')
		G_WHIP_MENU_ARRAY+=('DietPi-BugReport' ': Found a bug? Let us know!')
		G_WHIP_MENU_ARRAY+=('DietPi-MorseCode' ': Converts and outputs a text file to morsecode.')

		G_WHIP_DEFAULT_ITEM=$LAST_SELECTED_ITEM
		G_WHIP_BUTTON_CANCEL_TEXT='Exit'
		if G_WHIP_MENU 'Please select a program to run:'; then

			if [[ $G_WHIP_RETURNED_VALUE ]]; then

				LAST_SELECTED_ITEM=$G_WHIP_RETURNED_VALUE

				#Convert to lowercase
				local command=${G_WHIP_RETURNED_VALUE,,}

				#Run
				if [[ -f /DietPi/dietpi/$command ]]; then

					/DietPi/dietpi/$command

				# - different location
				elif [[ -f /DietPi/dietpi/misc/$command ]]; then

					/DietPi/dietpi/misc/$command

				# - different location
				elif [[ -f /DietPi/dietpi/func/$command ]]; then

					/DietPi/dietpi/func/$command

				else

					G_DIETPI-NOTIFY 1 "The chosen program $G_WHIP_RETURNED_VALUE could not be found on your system."
					read -p " - Press any key to continue to $G_PROGRAM_NAME..."

				fi

				#+ Wait for user input.
				if [[ $command == 'dietpi-cpuinfo' ||
					$command == 'dietpi-update' ||
					$command == 'dietpi-morsecode' ]]; then

					read -p '
 - Press any key to exit...'

				fi

			fi

		#Exit
		else

			G_WHIP_SIZE_X_MAX=50
			G_WHIP_YESNO "Exit $G_PROGRAM_NAME?" && exit 0

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	#Start Menu
	while :; do

		printf '\ec' # clear current terminal screen
		Menu_Main

	done

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}
