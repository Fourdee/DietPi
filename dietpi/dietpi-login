#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Login Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/dietpi-login
	# - activates on login /etc/bashrc.d/dietpi-login.sh
	#////////////////////////////////////

	# Import DietPi-Globals --------------------------------------------------------------
	# In main loop
	# Import DietPi-Globals --------------------------------------------------------------

	#/////////////////////////////////////////////////////////////////////////////////////
	# Globals
	#/////////////////////////////////////////////////////////////////////////////////////
	FP_DIETPI_FIRSTRUNSETUP_LOG='/var/tmp/dietpi/logs/dietpi-firstrun-setup.log'

	# Autoboot
	Run_AutoStart(){

		# - Do we have a valid screen for autoboot?
		local screen_valid=0
		[[ ! $DISPLAY && $(tty) == '/dev/tty1' ]] && screen_valid=1

		# - Boot to specific program
		if (( $screen_valid )); then

			# - Kodi
			if (( $auto_start_index == 1 )); then

				/DietPi/dietpi/misc/start_kodi

			# - Desktop (LXDE/MATE etc)
			elif (( $auto_start_index == 2 )); then

				clear
				if (( $G_HW_MODEL == 11 )); then

					sleep 5 && startx &

				else

					startx

				fi

			# - RetroPie/Emulation station
			elif (( $auto_start_index == 3 )); then

				#	emulationstation - can no longer be run as root
				/opt/retropie/supplementary/emulationstation/emulationstation.sh

			# - OpenTyrian
			elif (( $auto_start_index == 4 )); then

				/usr/local/games/opentyrian/run

			# - DietPi-Cloudshell
			elif (( $auto_start_index == 5 )); then

				setterm --blank 0 --powersave off --cursor off
				systemctl start dietpi-cloudshell

			# - Amiberry standard boot
			elif (( $auto_start_index == 8 )); then

				systemctl start amiberry

			# - DXX-Rebirth
			elif (( $auto_start_index == 9 )); then

				$G_FP_DIETPI_USERDATA/dxx-rebirth/run.sh

			# - CAVA
			elif (( $auto_start_index == 10 )); then

				sleep 4 # Wait for MPD fifo to start
				setterm --blank 0 --powersave off
				cava

			# - Chromium
			elif (( $auto_start_index == 11 )); then

				/var/lib/dietpi/dietpi-software/installed/chromium-autostart.sh

			# - LightDM
			elif (( $auto_start_index == 16 )); then

				/usr/sbin/lightdm

			fi

		fi

	}

	# First Run Setup
	Run_First_Update_Setup(){

		# 1st run dietpi-update
		if (( $G_DIETPI_INSTALL_STAGE == 0 )); then

			# - Check internet
			optional_cmd_inputs='--no-check-certificate' G_CHECK_URL "$(grep -m1 '^[[:blank:]]*deb ' /etc/apt/sources.list | mawk '{print $2}')" # Will exit on failure here then prompt user to configure network

			# - Check NTP synced
			/DietPi/dietpi/func/run_ntpd

			# - Start DietPi-Update
			/DietPi/dietpi/dietpi-update 1 # Sets G_DIETPI_INSTALL_STAGE=1

		# 1st run dietpi-software installs
		elif (( $G_DIETPI_INSTALL_STAGE == 1 )); then

			# - Start DietPi-Software
			/DietPi/dietpi/dietpi-software 2>&1 | tee $FP_DIETPI_FIRSTRUNSETUP_LOG # Sets G_DIETPI_INSTALL_STAGE=2

		fi

	}

	Show_License(){

		if [[ -f /var/lib/dietpi/license.txt ]] && (( $G_USER_INPUTS )); then

			G_WHIP_VIEWFILE /var/lib/dietpi/license.txt
			rm /var/lib/dietpi/license.txt

		fi

	}

	Main(){

		# Wait for full system boot
		until sudo systemctl status dietpi-postboot | grep -qi 'exited' #Sudo required for non-root
		do

			echo -e '\e[90m[\e[0m INFO \e[90m]\e[0m Waiting for DietPi-Postboot to finish, before executing login script...'
			sleep 1

		done

		while :
		do

			# Import DietPi-Globals --------------------------------------------------------------
			. /DietPi/dietpi/func/dietpi-globals
			G_PROGRAM_NAME='DietPi-Login'
			#G_INIT
			# Import DietPi-Globals --------------------------------------------------------------

			/DietPi/dietpi/func/obtain_network_details

			Show_License

			#----------------------------------------------------------------
			# Normal Login
			if (( $G_DIETPI_INSTALL_STAGE == 2 )); then

				/DietPi/dietpi/func/dietpi-banner 1

				local auto_start_index=0
				[[ -f /DietPi/dietpi/.dietpi-autostart_index ]] && auto_start_index=$(</DietPi/dietpi/.dietpi-autostart_index)
				(( $auto_start_index > 0 )) && Run_AutoStart

				break

			#----------------------------------------------------------------
			# Run DietPi-Update/DietPi-Software (1st run setup) (G_DIETPI_INSTALL_STAGE=0/1)
			elif (( $G_DIETPI_INSTALL_STAGE == 0 || $G_DIETPI_INSTALL_STAGE == 1 )); then

				/DietPi/dietpi/func/dietpi-banner 0
				G_CHECK_ROOT_USER

				# - Automated first run setup?
				if grep -qi '^[[:blank:]]*AUTO_SETUP_AUTOMATED=1' /DietPi/dietpi.txt; then

					# - Set non-interactive shell, if automated installation (as .bashrc run via STDIN check is interactive)
					export G_USER_INPUTS=0

				fi

				# - Prompt and wait if this script runs in other session already
				if (( $(pgrep -c 'dietpi-login') >= 2 )); then

					# - First run setup running in other session
					local additional_text='Please resume setup on the active screen.'
					(( ! $G_USER_INPUTS )) && additional_text='Automated setup is in progress. When completed, the system will be rebooted (if required), or, this terminal session will login.'

					G_WHIP_MSG "[WARNING] DietPi first run setup: Currently running on another screen.\n\n$additional_text"

					local restart_loop_delay=5
					G_DIETPI-NOTIFY 2 "Waiting $restart_loop_delay seconds before checking again. Please wait... (Press CTRL+C to abort)"
					sleep $restart_loop_delay

				elif (( ! $G_CHECK_ROOT_USER_VERIFIED )); then

					G_WHIP_MSG '[WARNING] Root login required\n
To finish DietPi first run setup, root permissions are required.\n
Please login again as user "root" with password "dietpi", respectively the one you chose in "dietpi.txt".'

					break

				else

					Run_First_Update_Setup

				fi

			#----------------------------------------------------------------
			# Unknown install state
			else

				/DietPi/dietpi/func/dietpi-banner 0

				# - Force interactive mode to show G_WHIP error prompts
				export G_USER_INPUTS=1

				if G_WHIP_YESNO "[FAILED] Unknown install state/First run setup failed\n
An error has occured either during first run update or installs.\n
First run setup will now attempt to re-apply the last step.
If this repeatedly fails, please collect all terminal output and the content of $FP_DIETPI_FIRSTRUNSETUP_LOG if available and report this issue to: https://github.com/Fourdee/DietPi/issues\n\nWould you like to restart the first run setup and installation?"; then

					# - reset to 0 to force update and fix code
					echo 0 > /DietPi/dietpi/.install_stage

				else

					break

				fi

			fi

		done

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	Main

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}
