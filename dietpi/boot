#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Boot Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/boot
	# - activates on boot from /etc/init.d/dietpi-service
	#////////////////////////////////////
	#Import DietPi-Globals ---------------------------------------------------------------
	/DietPi/dietpi/dietpi-obtain_hw_model # Running for the 1st time
	. /DietPi/dietpi/func/dietpi-globals
	export G_PROGRAM_NAME='DietPi-Boot'
	G_INIT
	#Import DietPi-Globals ---------------------------------------------------------------

	#/////////////////////////////////////////////////////////////////////////////////////
	#Globals
	#/////////////////////////////////////////////////////////////////////////////////////
	FP_LOGFILE='/var/log/dietpi-boot.log'

	RPi_Set_Clock_Speeds(){

		#RPi's
		if (( $G_HW_MODEL < 10 )); then

			#If no overclocking is set. set values to current (used in dietpi-config as reference for overclocking / current values)
			if (( $(cat /DietPi/config.txt | grep -ci -m1 '^#over_voltage=') &&
				$(cat /DietPi/config.txt | grep -ci -m1 '^#arm_freq=') &&
				$(cat /DietPi/config.txt | grep -ci -m1 '^#core_freq=') &&
				$(cat /DietPi/config.txt | grep -ci -m1 '^#sdram_freq=') )); then

				#RPi v1 - Set safe clock
				if (( $G_HW_MODEL < 2 )); then

					sed -i '/over_voltage=/c\over_voltage=2' /DietPi/config.txt
					sed -i '/arm_freq=/c\arm_freq=900' /DietPi/config.txt
					sed -i '/core_freq=/c\#core_freq=250' /DietPi/config.txt
					sed -i '/sdram_freq=/c\#sdram_freq=400' /DietPi/config.txt

					#Zero
					if (( $(sed -n 2p /DietPi/dietpi/.hw_model | tr '[:upper:]' '[:lower:]' | grep -ci -m1 'rpi zero') )); then

						sed -i '/over_voltage=/c\#over_voltage=0' /DietPi/config.txt
						sed -i '/arm_freq=/c\#arm_freq=1000' /DietPi/config.txt
						sed -i '/core_freq=/c\#core_freq=400' /DietPi/config.txt
						sed -i '/sdram_freq=/c\#sdram_freq=450' /DietPi/config.txt

					fi

				#RPi v2
				elif (( $G_HW_MODEL == 2 )); then

					sed -i '/over_voltage=/c\#over_voltage=0' /DietPi/config.txt
					sed -i '/arm_freq=/c\#arm_freq=900' /DietPi/config.txt
					sed -i '/core_freq=/c\#core_freq=250' /DietPi/config.txt
					sed -i '/sdram_freq=/c\#sdram_freq=450' /DietPi/config.txt

				#RPi v3
				elif (( $G_HW_MODEL == 3 )); then

					sed -i '/over_voltage=/c\#over_voltage=0' /DietPi/config.txt
					sed -i '/core_freq=/c\#core_freq=400' /DietPi/config.txt
					sed -i "/temp_limit=/c\temp_limit=75" /DietPi/config.txt # https://github.com/Fourdee/DietPi/issues/356

					local arm_freq=1200
					local sdram_freq=450
					if (( $(grep -ci -m1 'RPi 3 Model B+' /DietPi/dietpi/.hw_model) )); then

						arm_freq=1400
						sdram_freq=500

					fi

					sed -i "/arm_freq=/c\#arm_freq=$arm_freq" /DietPi/config.txt
					sed -i "/sdram_freq=/c\#sdram_freq=$sdram_freq" /DietPi/config.txt

				fi

			fi

		fi

	}

	Apply_DietPi_FirstRun_Settings(){

		#----------------------------------------------------------------
		# Network
		local index_eth=$(sed -n 1p /DietPi/dietpi/.network)
		local index_wlan=$(sed -n 2p /DietPi/dietpi/.network)

		systemctl stop networking.service

		#Kill dhclient
		killall -w dhclient &> /dev/null

		#Drop Connections
		ifdown eth"$index_eth" &> /dev/null
		ifdown wlan"$index_wlan" &> /dev/null

		#Replace all eth0 and wlan0 values to the indexs DietPi has found.
		sed -i "s/eth0/eth$index_eth/g" /etc/network/interfaces
		sed -i "s/wlan0/wlan$index_wlan/g" /etc/network/interfaces

		#Grab user requested settings from /dietpi.txt
		local Ethernet_Enabled=$(grep -ci -m1 '^[[:blank:]]*AUTO_SETUP_NET_ETHERNET_ENABLED=1' /DietPi/dietpi.txt)
		local Wifi_Enabled=$(grep -ci -m1 '^[[:blank:]]*AUTO_SETUP_NET_WIFI_ENABLED=1' /DietPi/dietpi.txt)

		local Use_Static=$(grep -ci -m1 '^[[:blank:]]*AUTO_SETUP_NET_USESTATIC=1' /DietPi/dietpi.txt)
		local Static_IP="$(grep -m1 '^[[:blank:]]*AUTO_SETUP_NET_STATIC_IP=' /DietPi/dietpi.txt | sed 's/^.*=//')"
		local Static_Mask="$(grep -m1 '^[[:blank:]]*AUTO_SETUP_NET_STATIC_MASK=' /DietPi/dietpi.txt | sed 's/^.*=//')"
		local Static_Gateway="$(grep -m1 '^[[:blank:]]*AUTO_SETUP_NET_STATIC_GATEWAY=' /DietPi/dietpi.txt | sed 's/^.*=//')"
		local Static_Dns="$(grep -m1 '^[[:blank:]]*AUTO_SETUP_NET_STATIC_DNS=' /DietPi/dietpi.txt | sed 's/^.*=//')"

		# - Wifi
		if (( $Wifi_Enabled == 1 )); then

			#Enable Wlan, disable Eth
			Ethernet_Enabled=0
			sed -i "/allow-hotplug wlan/c\allow-hotplug wlan$index_wlan" /etc/network/interfaces
			sed -i "/allow-hotplug eth/c\#allow-hotplug eth$index_eth" /etc/network/interfaces

			# - Enable modules + Apply global SSID/Keys from dietpi.txt to wpa_supp
			/DietPi/dietpi/func/dietpi-set_hardware wificreds set
			/DietPi/dietpi/func/dietpi-set_hardware wifimodules enable

		# - Ethernet
		elif (( $Ethernet_Enabled == 1 )); then

			#Enable Eth, disable Wlan
			Wifi_Enabled=0
			sed -i "/allow-hotplug eth/c\allow-hotplug eth$index_eth" /etc/network/interfaces
			sed -i "/allow-hotplug wlan/c\#allow-hotplug wlan$index_wlan" /etc/network/interfaces

		fi

		# - Static IPs
		if (( $Use_Static == 1 )); then

			#enable dns-nameservers
			sed -i 's/^#dns-nameservers/dns-nameservers/g' /etc/network/interfaces

			if (( $Wifi_Enabled == 1 )); then

				sed -i "/iface wlan/c\iface wlan$index_wlan inet static" /etc/network/interfaces

			elif (( $Ethernet_Enabled == 1 )); then

				sed -i "/iface eth/c\iface eth$index_eth inet static" /etc/network/interfaces

			fi

			sed -i "/address/c\address $Static_IP" /etc/network/interfaces
			sed -i "/netmask/c\netmask $Static_Mask" /etc/network/interfaces
			sed -i "/gateway/c\gateway $Static_Gateway" /etc/network/interfaces
			sed -i "/dns-nameservers/c\dns-nameservers $Static_Dns" /etc/network/interfaces

		fi

		#Kill dhclient, again: https://github.com/Fourdee/DietPi/issues/660
		killall -w dhclient

		#Restart Networking
		systemctl daemon-reload
		#systemctl restart networking #: Does exactly the same as ifdown/up that we already do.

		#Manually bring up adapters
		if (( $Wifi_Enabled == 1 )); then

			ifup wlan"$index_wlan"

		elif (( $Ethernet_Enabled == 1 )); then

			ifup eth"$index_eth"

		fi

		#Apply forced eth speed if set in dietpi.txt
		/DietPi/dietpi/func/dietpi-set_hardware eth-forcespeed $(grep -m1 '^[[:blank:]]*AUTO_SETUP_NET_ETH_FORCE_SPEED=' /DietPi/dietpi.txt | sed 's/^.*=//' )

		#Wait for active connection, then update network details file
		Wait_For_Valid_Network_Connection

	}

	Wait_For_Valid_Network_Connection(){

		#Attempt to wait for a valid network connection
		local max_loops=1

		#	Wait mode, max time
		local boot_wait_for_network=$(cat /DietPi/dietpi.txt | grep -m1 '^CONFIG_BOOT_WAIT_FOR_NETWORK=' | sed 's/.*=//')
		if (( $boot_wait_for_network == 1 )); then

			max_loops=10

		fi

		local loop_count=0
		while true
		do

			if (( $loop_count >= $max_loops )); then

				G_DIETPI-NOTIFY 1 "$(date) | Valid connection wait timed out." | tee -a "$FP_LOGFILE"
				break

			elif (( ! $(route | awk '{print $4}' | grep -ci -m1 'UG') )); then

				G_DIETPI-NOTIFY 2 "$(date) | Waiting for valid connection, before continuing boot | Mode=$boot_wait_for_network" | tee -a "$FP_LOGFILE"
				sleep 1

			else

				# - Update network details (for IP in dietpi-banner etc..)
				G_DIETPI-NOTIFY 0 "$(date) | Valid connection found." | tee -a "$FP_LOGFILE"
				/DietPi/dietpi/func/obtain_network_details

				#	Mount all drives again (eg: network shares)
				mount -a

				break

			fi

			if (( $boot_wait_for_network != 2 )); then

				((loop_count++))

			fi

		done

	}

	Run_Init(){

		#----------------------------------------------------------------
		#WiFi Country | Additional fallback for (older kernel?) devices that fail with wpa_supplicant.conf https://github.com/Fourdee/DietPi/issues/838
		which iw &> /dev/null && iw reg set "$(grep -m1 '^[[:blank:]]*CONFIG_WIFI_COUNTRY_CODE=' /DietPi/dietpi.txt | sed 's/^.*=//')" &
		#----------------------------------------------------------------
		#Update NTP
		/DietPi/dietpi/func/run_ntpd &
		#----------------------------------------------------------------
		#Apply LED triggers if set
		/DietPi/dietpi/func/dietpi-led_control 1 &
		#----------------------------------------------------------------
		#RPi set volume to -0.1db | We have to do it here because sound card modules (dietpi-set_hardware) are not enabled on the fly, requires a reboot.
		if (( $G_HW_MODEL < 10 )); then

			which amixer &> /dev/null && amixer set PCM -- -010 &

		fi
		#----------------------------------------------------------------
		#Apply DietPi CPU Governor and settings
		/DietPi/dietpi/dietpi-cpu_set &
		#----------------------------------------------------------------
		#Disable RPi hdmi output if set in dietpi.txt
		if (( $G_HW_MODEL < 10 )) &&
			grep -q '^[[:blank:]]*CONFIG_HDMI_OUTPUT=0' /DietPi/dietpi.txt; then

			#FBset value below allows for reduced memory bandwidth usage from VideoCore (eg: Faster RAM bandwidth/performance)
			fbset -xres 16 -yres 16 -vxres 16 -vyres 16 -depth 8 &> /dev/null
			/opt/vc/bin/tvservice -o &> /dev/null

		fi
		#----------------------------------------------------------------
		#Find first index number for network devices (checks 0-9)
		/DietPi/dietpi/func/obtain_network_details
		#----------------------------------------------------------------
		#Ensure DietPi-Globals, login and banner scripts always exists (eg: if user disables it)
		grep -qE '^[[:blank:]]*(.|source)[[:blank:]]+/DietPi/dietpi/func/dietpi-globals' /root/.bashrc || echo '. /DietPi/dietpi/func/dietpi-globals' >> /root/.bashrc
		grep -q '^[[:blank:]]*/DietPi/dietpi/login' /root/.bashrc || echo '/DietPi/dietpi/login' >> /root/.bashrc
		#----------------------------------------------------------------
		# - Lower dmesg print level (mostly for Odroid C2 where HiFi Shield prints info when starting/stopping stream on tty1)
		dmesg -n 1
		#----------------------------------------------------------------
		Workaround_WiFi
		#----------------------------------------------------------------

	}

	Workaround_WiFi(){

		#Workaround: Wlan currently fails to connect during boot, so, manually drop and reconnect: https://github.com/Fourdee/DietPi/issues/602#issuecomment-262806470
		#	OPi Zero 2 / Neo Air
		if (( $G_HW_MODEL == 35 || $G_HW_MODEL == 64 )) &&
			grep -qE '^[[:blank:]]*(allow-hotplug|auto)[[:blank:]]+wlan0' /etc/network/interfaces; then

			ifdown wlan0
			ifup wlan0

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	#----------------------------------------------------------------
	# Init
	Run_Init

	#----------------------------------------------------------------
	#Normal Boot
	if (( $G_DIETPI_INSTALL_STAGE == 1 )); then

		Wait_For_Valid_Network_Connection

		if grep -qi '^[[:blank:]]*CONFIG_CHECK_DIETPI_UPDATES=1' /DietPi/dietpi.txt; then

			#Check for DietPi updates (+thread)
			echo -e "$(date) | +Thread: checking for DietPi-Updates" >> "$FP_LOGFILE"
			/DietPi/dietpi/dietpi-update 2 &> /dev/null &

		fi

		/DietPi/dietpi/dietpi-banner 1

	#----------------------------------------------------------------
	#First run prep
	elif (( $G_DIETPI_INSTALL_STAGE == -1 )); then

		# Set RPi v1 safe overclocking profile (900mhz)
		RPi_Set_Clock_Speeds

		/DietPi/dietpi/dietpi-banner 0

		#Set hostname
		/DietPi/dietpi/func/change_hostname "$(grep -m1 '^[[:blank:]]*AUTO_SETUP_NET_HOSTNAME=' /DietPi/dietpi.txt | sed 's/^.*=//')"

		#Automation
		# - Set auto login for next bootup
		if (( $(grep -m1 '^[[:blank:]]*AUTO_SETUP_AUTOMATED=' /DietPi/dietpi.txt | sed 's/^.*=//') >= 1 )); then

			/DietPi/dietpi/dietpi-autostart 7

		fi

		# - Enable serial console?
		if grep -qi '^[[:blank:]]*CONFIG_SERIAL_CONSOLE_ENABLE=1' /DietPi/dietpi.txt; then

			/DietPi/dietpi/func/dietpi-set_hardware serialconsole enable

		fi

		# - Set root password?
		ROOT_PASSWORD="$(grep -m1 '^[[:blank:]]*AUTO_SETUP_GLOBAL_PASSWORD=' /DietPi/dietpi.txt | sed 's/^.*=//')"
		if [ -n "$ROOT_PASSWORD" ]; then

			chpasswd <<< "root:$ROOT_PASSWORD"
			chpasswd <<< "dietpi:$ROOT_PASSWORD"

		fi

		# - Set apt mirror
		TARGET_REPO='CONFIG_APT_DEBIAN_MIRROR'
		if (( $G_HW_MODEL < 10 )); then

			TARGET_REPO='CONFIG_APT_RASPBIAN_MIRROR'

		fi

		/DietPi/dietpi/func/dietpi-set_software apt-mirror "$(grep -m1 "^[[:blank:]]*$TARGET_REPO=" /DietPi/dietpi.txt | sed 's/^.*=//')"

		#Generate unique Dropbear host-key:
		rm /etc/dropbear/*key &> /dev/null
		dropbearkey -t rsa -f /etc/dropbear/dropbear_rsa_host_key &> /dev/null
		dropbearkey -t ecdsa -f /etc/dropbear/dropbear_ecdsa_host_key &> /dev/null
		dropbearkey -t dss -f /etc/dropbear/dropbear_dss_host_key &> /dev/null

		#Activate DietPi Boot Loader User Settings and bring up network (dietpi.txt)
		Apply_DietPi_FirstRun_Settings

		Workaround_WiFi

		# - Set NTPD
		/DietPi/dietpi/func/dietpi-set_software ntpd-mode $(grep -m1 '^[[:blank:]]*CONFIG_NTP_MODE=' /DietPi/dietpi.txt | sed 's/^.*=//')

		#Finished
		/DietPi/dietpi/dietpi-banner 0
		echo -e ' Default Login:\n Username = root\n Password = dietpi\n'

		#Set Install Stage index to trigger DietPi-Software installation on login
		echo 0 > /DietPi/dietpi/.install_stage

	fi

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}
