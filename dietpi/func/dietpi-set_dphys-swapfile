#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Function: Swapfile
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - DietPi Swapfile control for setting enable/disable/size/location.
	#
	# Usage:
	# - $1 = 0=disable, 1=enable+autosize, >=2=enable+size
	# - $2 = optional location
	# - /DietPi/dietpi/func/dietpi-set_dphys-swapfile     = Print current swap size and location
	#////////////////////////////////////

	#Import DietPi-Globals ---------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_PROGRAM_NAME='DietPi-Swapfile'
	G_CHECK_ROOT_USER
	G_INIT
	#Import DietPi-Globals ---------------------------------------------------------------

	SWAP_SIZE=$(grep -m1 '^[[:blank:]]*AUTO_SETUP_SWAPFILE_SIZE=' /DietPi/dietpi.txt | sed 's/^[^=]*=//')
	SWAP_LOCATION="$(grep -m1 '^[[:blank:]]*AUTO_SETUP_SWAPFILE_LOCATION=' /DietPi/dietpi.txt | sed 's/^[^=]*=//')"

	SWAP_SIZE_TARGET=$SWAP_SIZE
	disable_error=1 G_CHECK_VALIDINT "$1" && SWAP_SIZE_TARGET=$1

	SWAP_LOCATION_TARGET="$SWAP_LOCATION"
	[[ $2 ]] && SWAP_LOCATION_TARGET=$2

	Delete_Swapfile(){

		G_RUN_CMD swapoff -a
		G_DIETPI-NOTIFY 2 "Deleting existing swapfile ($SWAP_LOCATION)"
		[[ -f $SWAP_LOCATION ]] && rm "$SWAP_LOCATION"
		sed -i '/[[:blank:]]swap[[:blank:]]/d' /etc/fstab
		systemctl daemon-reload

	}

	Update_DietPi_Conf(){

		#	DietPi.txt
		G_CONFIG_INJECT 'AUTO_SETUP_SWAPFILE_SIZE=' "AUTO_SETUP_SWAPFILE_SIZE=$SWAP_SIZE" /DietPi/dietpi.txt
		G_CONFIG_INJECT 'AUTO_SETUP_SWAPFILE_LOCATION=' "AUTO_SETUP_SWAPFILE_LOCATION=$SWAP_LOCATION" /DietPi/dietpi.txt

	}

	Update_Tmp(){

		#Set /tmp to 50% of RAM+SWAP: https://github.com/MichaIng/DietPi/issues/1027#issuecomment-369373082
		local mem_total=$(free -m | mawk '/Mem:/ {print $2;exit}')
		local swap_size=$(free -m | mawk '/Swap:/ {print $2;exit}')
		local tmp_target_size="$(( ( $mem_total + $swap_size ) / 2 ))M"

		G_DIETPI-NOTIFY 2 "Setting /tmp tmpfs size: $tmp_target_size"

		sed -i -e "/[[:blank:]]\/tmp[[:blank:]]/ctmpfs \/tmp tmpfs defaults,size=$tmp_target_size,noatime,nodev,nosuid,mode=1777 0 0" /etc/fstab
		systemctl daemon-reload
		mount -a
		G_RUN_CMD mount -o remount,size=$tmp_target_size tmpfs /tmp

	}

	Swap_Disable(){

		G_DIETPI-NOTIFY 0 'Disable swapfile'

		Delete_Swapfile

		SWAP_SIZE=0
		SWAP_LOCATION='/var/swap'

		Update_DietPi_Conf
		Update_Tmp

	}

	Swap_Enable(){

		# - Create temp file for freespace check, and, fs_type scrape
		> "$SWAP_LOCATION_TARGET"

		#Free spacey, checkey weckey
		if ! G_CHECK_FREESPACE "$SWAP_LOCATION_TARGET" $SWAP_SIZE_TARGET; then

			G_DIETPI-NOTIFY 1 'Unable to generate swapfile due to insufficient disk space. Swap has be disabled.'

		#Exclude devices
		# - BBB
		elif (( $G_HW_MODEL == 71 )); then

			G_DIETPI-NOTIFY 2 "Disabled swapfile generation for $G_HW_MODEL_DESCRIPTION"

		#Create new swappey whappey
		else

			SWAP_SIZE=$SWAP_SIZE_TARGET
			SWAP_LOCATION="$SWAP_LOCATION_TARGET"

			G_DIETPI-NOTIFY 0 'Generating new swapfile'
			G_DIETPI-NOTIFY 2 "Size     = $SWAP_SIZE MB"
			G_DIETPI-NOTIFY 2 "Location = $SWAP_LOCATION"

			local fs_type="$(findmnt -n -o FSTYPE -T $SWAP_LOCATION)"

			#Pre-allocate for filesystems which do no support quick-allocate with fallocate
			if [[ $fs_type == 'f2fs' || $fs_type == 'xfs' || $fs_type == 'vfat' ]]; then

				G_RUN_CMD dd if=/dev/zero of=$SWAP_LOCATION bs=4K count=$(( $SWAP_SIZE * 1024 / 4 ))

			else

				G_RUN_CMD fallocate -l $SWAP_SIZE'M' $SWAP_LOCATION

			fi

			G_RUN_CMD mkswap $SWAP_LOCATION
			chmod 600 "$SWAP_LOCATION"

			G_RUN_CMD swapon $SWAP_LOCATION

			cat << _EOF_ >> /etc/fstab
$SWAP_LOCATION    none    swap    sw    0   0
_EOF_

			Update_DietPi_Conf
			Update_Tmp

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	#Info mode - Print Size / Location
	if [[ ! $1 ]]; then

		echo -e "$SWAP_SIZE $SWAP_LOCATION"

	#Remove/Create swap
	else

		G_DIETPI-NOTIFY 3 "$G_PROGRAM_NAME" 'Apply'

		#Always reset/remove existing swap
		Swap_Disable

		#Auto size?
		(( $SWAP_SIZE_TARGET == 1 )) && SWAP_SIZE_TARGET=$(( 2048 - $(free -m | mawk '/Mem:/ {print $2;exit}') ))

		#Configure new swapfile?
		(( $SWAP_SIZE_TARGET > 0 )) && Swap_Enable

	fi
	#-----------------------------------------------------------------------------------
	exit 0
	#-----------------------------------------------------------------------------------

}
