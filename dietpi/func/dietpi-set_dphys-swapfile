#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Function: Swapfile
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - DietPi Swapfile control for setting enable/disable/size/location.
	#
	# Usage:
	# - $1 = 0=disable, 1=enable+autosize, >=2=enable+size
	# - $2 = optional location
	# - /DietPi/dietpi/func/dietpi-set_dphys-swapfile     = Print current config size and location
	#////////////////////////////////////

	#Import DietPi-Globals ---------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_CHECK_ROOT_USER
	export G_PROGRAM_NAME='DietPi-Swapfile'
	G_INIT
	#Import DietPi-Globals ---------------------------------------------------------------

	SWAP_SIZE=$(grep -m1 '^[[:blank:]]*AUTO_SETUP_SWAPFILE_SIZE=' /DietPi/dietpi.txt | sed 's/.*=//')
	SWAP_LOCATION="$(grep -m1 '^[[:blank:]]*AUTO_SETUP_SWAPFILE_LOCATION=' /DietPi/dietpi.txt | sed 's/.*=//')"

	SWAP_SIZE_TARGET=$SWAP_SIZE
	if G_CHECK_VALIDINT $1; then

		SWAP_SIZE_TARGET=$1

	fi

	SWAP_LOCATION_TARGET="$SWAP_LOCATION"
	if [ -n "$2" ]; then

		SWAP_LOCATION_TARGET="$2"

	fi

	Delete_Swapfile(){

		G_RUN_CMD swapoff -a
		G_DIETPI-NOTIFY 2 "Deleting existing swapfile ($SWAP_LOCATION)"
		rm "$SWAP_LOCATION" &> /dev/null
		sed -i '/[[:blank:]]swap[[:blank:]]/d' /etc/fstab
		systemctl daemon-reload

	}

	Update_Conf(){

		#	DietPi.txt
		sed -i "/^[[:blank:]]*AUTO_SETUP_SWAPFILE_SIZE=/c\AUTO_SETUP_SWAPFILE_SIZE=$SWAP_SIZE" /DietPi/dietpi.txt
		sed -i "/^[[:blank:]]*AUTO_SETUP_SWAPFILE_LOCATION=/c\AUTO_SETUP_SWAPFILE_LOCATION=$SWAP_LOCATION" /DietPi/dietpi.txt

	}

	Update_Tmp(){

		#Set /tmp to 50% of RAM+SWAP: https://github.com/Fourdee/DietPi/issues/1027#issuecomment-369373082
		local mem_total=$(free -m | grep -m1 'Mem:' | awk '{print $2}')
		local swap_size=$(free -m | grep -im1 'Swap:' | awk '{print $2}')
		local tmp_target_size="$(( ( $mem_total + $swap_size ) / 2 ))M"

		G_DIETPI-NOTIFY 2 "Setting /tmp tmpfs size: $tmp_target_size"

		sed -i -e "/[[:blank:]]\/tmp[[:blank:]]/ctmpfs \/tmp tmpfs defaults,size=$tmp_target_size,noatime,nodev,nosuid,mode=1777 0 0" /etc/fstab
		systemctl daemon-reload
		mount -a
		G_RUN_CMD mount -o remount,size=$tmp_target_size tmpfs /tmp

	}

	Swap_Disable(){

		G_DIETPI-NOTIFY 3 'DietPi-Swapfile' 'Disable swapfile'

		Delete_Swapfile

		SWAP_SIZE=0
		SWAP_LOCATION='/var/swap'
		Update_Conf

		Update_Tmp

	}

	Swap_Enable(){

		#Exclude devices
		# - BBB
		if (( $G_HW_MODEL == 71 )); then

			G_DIETPI-NOTIFY 2 "Skipping swapfile generation for $G_HW_MODEL_DESCRIPTION"
			exit 0

		fi

		Delete_Swapfile

		SWAP_SIZE=$SWAP_SIZE_TARGET
		SWAP_LOCATION="$SWAP_LOCATION_TARGET"
		Update_Conf

		G_DIETPI-NOTIFY 3 'DietPi-Swapfile' 'Generating new swapfile'
		G_DIETPI-NOTIFY 2 "Size     = $SWAP_SIZE MB"
		G_DIETPI-NOTIFY 2 "Location = $SWAP_LOCATION"

		G_RUN_CMD echo '' > "$SWAP_LOCATION" #create temp file to ensure findmnt returns result
		local fs_type="$(findmnt -n -o FSTYPE -T $SWAP_LOCATION)"
		rm "$SWAP_LOCATION" &> /dev/null

		#Pre-allocate for filesystems which do no support quick-allocate with fallocate
		if [[ $fs_type == 'f2fs' || $fs_type == 'xfs' || $fs_type == 'vfat' ]]; then

			G_RUN_CMD dd if=/dev/zero of=$SWAP_LOCATION bs=4K count=$(( $SWAP_SIZE * 1024 / 4 ))

		else

			G_RUN_CMD fallocate -l $SWAP_SIZE'M' $SWAP_LOCATION

		fi

		G_RUN_CMD mkswap $SWAP_LOCATION
		chmod 600 "$SWAP_LOCATION"

		G_RUN_CMD swapon $SWAP_LOCATION

		cat << _EOF_ >> /etc/fstab
$SWAP_LOCATION    none    swap    sw    0   0
_EOF_

		Update_Tmp

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	#Info mode - Print Size / Location
	if [ -z "$1" ]; then

		echo -e "$SWAP_SIZE $SWAP_LOCATION"

	#Disabled
	elif (( $SWAP_SIZE_TARGET == 0 )); then

		Swap_Disable

	#Enabled (Auto)
	elif (( $SWAP_SIZE_TARGET == 1 )); then

		SWAP_SIZE_TARGET=$(( 2048 - $(free -m | grep -m1 'Mem:' | awk '{print $2}') ))
		if (( $SWAP_SIZE_TARGET < 0 )); then

			Swap_Disable

		else

			Swap_Enable

		fi

	#Enabled (manual)
	elif (( $SWAP_SIZE_TARGET >= 2 )); then

		Swap_Enable

	fi

	#-----------------------------------------------------------------------------------
	exit 0
	#-----------------------------------------------------------------------------------

}
