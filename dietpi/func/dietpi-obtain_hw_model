#!/bin/bash
{
	#////////////////////////////////////
	# DietPi
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#////////////////////////////////////
	#
	# Info:
	# - Generates /DietPi/dietpi/.hw_model
	# - Called from /DietPi/dietpi/preboot
	#
	# In DietPi-Software:
	#	MAX_G_HW_MODEL=71		#This needs to match highest G_HW_MODEL value in dietpi-obtain_hw_model
	#	MAX_G_HW_ARCH=10		#This needs to match highest G_HW_ARCH value in dietpi-obtain_hw_model
	#
	# - Line1 -
	# G_HW_MODEL 71 Beagle Bone Black
	# G_HW_MODEL 70 Sparky SBC
	# G_HW_MODEL 69 Firefly RK3399
	# G_HW_MODEL 68 NanoPC T4
	# G_HW_MODEL 67 NanoPi K1 Plus
	# G_HW_MODEL 66 NanoPi M1 Plus
	# G_HW_MODEL 65 NanoPi NEO 2
	# G_HW_MODEL 64 NanoPi NEO Air
	# G_HW_MODEL 63 NanoPi M1/T1
	# G_HW_MODEL 62 NanoPi M3/T3/F3(fire3)
	# G_HW_MODEL 61 NanoPi M2/T2
	# G_HW_MODEL 60 NanoPi Neo
	# G_HW_MODEL 53 BananaPi (sinovoip)
	# G_HW_MODEL 52 Asus Tinker Board
	# G_HW_MODEL 51 BananaPi Pro (Lemaker)
	# G_HW_MODEL 50 BananaPi M2+ (sinovoip)
	# G_HW_MODEL 44 Pinebook A64
	# G_HW_MODEL 43 Rock64
	# G_HW_MODEL 42 RockPro64
	# G_HW_MODEL 41 OrangePi PC Plus
	# G_HW_MODEL 40 Pine A64
	# G_HW_MODEL 39 LeMaker Guitar
	# G_HW_MODEL 38 OrangePi PC 2
	# G_HW_MODEL 37 OrangePi Prime
	# G_HW_MODEL 36 OrangePi Win
	# G_HW_MODEL 35 OrangePi Zero Plus 2 (H3/H5)
	# G_HW_MODEL 34 OrangePi Plus
	# G_HW_MODEL 33 OrangePi Lite
	# G_HW_MODEL 32 OrangePi Zero (H2+)
	# G_HW_MODEL 31 OrangePi One
	# G_HW_MODEL 30 OrangePi PC
	# G_HW_MODEL 22 Generic device (eg: unknown to DietPi)
	# G_HW_MODEL 21 x86_64 native (PC)
	# G_HW_MODEL 20 VM x64 (VMware VirtualBox)
	# G_HW_MODEL 15 oDroid N2
	# G_HW_MODEL 14 oDroid N1
	# G_HW_MODEL 13 oDroid U3
	# G_HW_MODEL 12 oDroid C2
	# G_HW_MODEL 11 oDroid XU3/XU4/HC1/HC2
	# G_HW_MODEL 10 oDroid C1
	# G_HW_MODEL 3 Raspberry Pi 3/3+
	# G_HW_MODEL 2 Raspberry Pi 2
	# G_HW_MODEL 1 Raspberry Pi 1/Zero (512mb)
	# G_HW_MODEL 0 Raspberry Pi 1 (256mb)
	# - Line2 -
	# G_HW_MODEL_DESCRIPTION
	# - Line3 -
	# G_DISTRO 0 unknown
	# G_DISTRO 1 Debian Wheezy (No longer supported, https://dietpi.com/phpbb/viewtopic.php?f=9&t=432#p1898)
	# G_DISTRO 2 Ubuntu 14.04 (No longer supported, left in for user message during update)
	# G_DISTRO 3 Jessie
	# G_DISTRO 4 Stretch, pulled a muscle!
	# G_DISTRO 5 Buster
	# - Line4 -
	# RootFS device path (eg: /dev/mmc01)
	# - Line5 -
	# UUID
	# - Line 6 -
	# G_HW_ARCH 10 x86_64 (VM)
	# G_HW_ARCH 3 armv8/arm64
	# G_HW_ARCH 2 armv7
	# G_HW_ARCH 1 armv6
	# G_HW_ARCH 0 unknown
	# - Line 7 -
	# G_HW_ARCH_DESCRIPTION
	# - Line 8 -
	# IMAGE_ADDITIONAL_CREDITS (eg: Meveric)
	# - Line 9 - Group CPU's
	# G_HW_CPUID 0 Not set
	# G_HW_CPUID 1 H3
	# G_HW_CPUID 2 H5
	# G_HW_CPUID 3 RK3399
	# G_HW_CPUID 4 S922X
	# - Line 10 - Onboard WiFi/BT Index
	# HW_ONBOARD_WIFI 0 Not set
	# HW_ONBOARD_WIFI 1 RPi3/ZeroW (BCM43438)
	# - Line 11 - (RPi only)
	# HW_REVISION_CODE
	# - Line 12 - (RPi only)
	# HW_RELEASE_DATE
	# - Line 13 - (RPi only)
	# HW_PCB_REVISION_CODE
	# - Line 14 - (RPi only)
	# HW_MEMORY_SIZE
	# - Line 15 - (RPi only)
	# HW_MANUFACTURER_NAME
	#////////////////////////////////////

	# Import DietPi-Globals --------------------------------------------------------------
	#. /DietPi/dietpi/func/dietpi-globals	# Not required
	#export LC_ALL=en_GB.UTF-8		# No locale dependant output scrape
	#cd /tmp				# No tmp file creation
	# Import DietPi-Globals --------------------------------------------------------------

	#/////////////////////////////////////////////////////////////////////////////////////
	# Obtain Hardware Model index
	#/////////////////////////////////////////////////////////////////////////////////////

	FP_G_HW_MODEL_INDENTIFIER='/etc/.dietpi_hw_model_identifier'

	G_HW_MODEL=-1
	G_HW_MODEL_DESCRIPTION='Unknown Device'
	G_DISTRO=0
	ROOTFS_DEVICE_PATH=$(df --output=source,target | mawk '/\/$/ {print $1;exit}')
	HW_UUID=0
	G_HW_ARCH=0
	G_HW_ARCH_DESCRIPTION=$(uname -m)
	IMAGE_ADDITIONAL_CREDITS=''
	G_HW_CPUID=0
	HW_ONBOARD_WIFI=0

	# RPi extras
	HW_REVISION_CODE=0
	HW_RELEASE_DATE='Unknown'
	HW_PCB_REVISION_CODE='Unknown'
	HW_MEMORY_SIZE=0
	HW_MANUFACTURER_NAME='Unknown'

	RPi_BoardInfo(){

		#-----------------------------------------------------------------------------------
		# Obtain device info by revision number
		# *" because 10000002 then it indicates that your Raspberry Pi has been over-volted
		HW_REVISION_CODE=$(mawk '/Revision/ {print $3;exit}' /proc/cpuinfo)

		G_HW_MODEL_DESCRIPTION='RPi '

		if [[ $HW_REVISION_CODE == *'Beta' ]]; then

			HW_RELEASE_DATE='Q1 2012'
			G_HW_MODEL_DESCRIPTION+='Beta'
			HW_PCB_REVISION_CODE='Unknown'
			HW_MEMORY_SIZE=256
			HW_MANUFACTURER_NAME='Unknown'
			G_HW_MODEL=0

		elif [[ $HW_REVISION_CODE == *'0002' ]]; then

			HW_RELEASE_DATE='Q1 2012'
			G_HW_MODEL_DESCRIPTION+='B'
			HW_PCB_REVISION_CODE='1.0'
			HW_MEMORY_SIZE=256
			HW_MANUFACTURER_NAME='Unknown'
			G_HW_MODEL=0

		elif [[ $HW_REVISION_CODE == *'0003' ]]; then

			HW_RELEASE_DATE='Q3 2012'
			G_HW_MODEL_DESCRIPTION+='B (ECN0001)'
			HW_PCB_REVISION_CODE='1.0'
			HW_MEMORY_SIZE=256
			HW_MANUFACTURER_NAME='Unknown'
			G_HW_MODEL=0

		elif [[ $HW_REVISION_CODE == *'0004' ]]; then

			HW_RELEASE_DATE='Q3 2012'
			G_HW_MODEL_DESCRIPTION+='B'
			HW_PCB_REVISION_CODE='2.0'
			HW_MEMORY_SIZE=256
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=0

		elif [[ $HW_REVISION_CODE == *'0005' ]]; then

			HW_RELEASE_DATE='Q4 2012'
			G_HW_MODEL_DESCRIPTION+='B'
			HW_PCB_REVISION_CODE='2.0'
			HW_MEMORY_SIZE=256
			HW_MANUFACTURER_NAME='Qisda'
			G_HW_MODEL=0

		elif [[ $HW_REVISION_CODE == *'0006' ]]; then

			HW_RELEASE_DATE='Q4 2012'
			G_HW_MODEL_DESCRIPTION+='B'
			HW_PCB_REVISION_CODE='2.0'
			HW_MEMORY_SIZE=256
			HW_MANUFACTURER_NAME='Egoman'
			G_HW_MODEL=0

		elif [[ $HW_REVISION_CODE == *'0007' ]]; then

			HW_RELEASE_DATE='Q1 2013'
			G_HW_MODEL_DESCRIPTION+='A'
			HW_PCB_REVISION_CODE='2.0'
			HW_MEMORY_SIZE=256
			HW_MANUFACTURER_NAME='Egoman'
			G_HW_MODEL=0

		elif [[ $HW_REVISION_CODE == *'0008' ]]; then

			HW_RELEASE_DATE='Q1 2013'
			G_HW_MODEL_DESCRIPTION+='A'
			HW_PCB_REVISION_CODE='2.0'
			HW_MEMORY_SIZE=256
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=0

		elif [[ $HW_REVISION_CODE == *'0009' ]]; then

			HW_RELEASE_DATE='Q1 2013'
			G_HW_MODEL_DESCRIPTION+='A'
			HW_PCB_REVISION_CODE='2.0'
			HW_MEMORY_SIZE=256
			HW_MANUFACTURER_NAME='Qisda'
			G_HW_MODEL=0

		elif [[ $HW_REVISION_CODE == *'000d' ]]; then

			HW_RELEASE_DATE='Q4 2012'
			G_HW_MODEL_DESCRIPTION+='B'
			HW_PCB_REVISION_CODE='2.0'
			HW_MEMORY_SIZE=512
			HW_MANUFACTURER_NAME='Egoman'
			G_HW_MODEL=1

		elif [[ $HW_REVISION_CODE == *'000e' ]]; then

			HW_RELEASE_DATE='Q4 2012'
			G_HW_MODEL_DESCRIPTION+='B'
			HW_PCB_REVISION_CODE='2.0'
			HW_MEMORY_SIZE=512
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=1

		elif [[ $HW_REVISION_CODE == *'000f' ]]; then

			HW_RELEASE_DATE='Q4 2012'
			G_HW_MODEL_DESCRIPTION+='B'
			HW_PCB_REVISION_CODE='2.0'
			HW_MEMORY_SIZE=512
			HW_MANUFACTURER_NAME='Qisda'
			G_HW_MODEL=1

		elif [[ $HW_REVISION_CODE == *'0010' ]]; then

			HW_RELEASE_DATE='Q3 2014'
			G_HW_MODEL_DESCRIPTION+='B+'
			HW_PCB_REVISION_CODE='1.0'
			HW_MEMORY_SIZE=512
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=1

		elif [[ $HW_REVISION_CODE == *'0011' ]]; then

			HW_RELEASE_DATE='Q2 2014'
			G_HW_MODEL_DESCRIPTION+='CM'
			HW_PCB_REVISION_CODE='1.0'
			HW_MEMORY_SIZE=512
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=1

		elif [[ $HW_REVISION_CODE == *'0012' ]]; then

			HW_RELEASE_DATE='Q4 2014'
			G_HW_MODEL_DESCRIPTION+='A+'
			HW_PCB_REVISION_CODE='1.0'
			HW_MEMORY_SIZE=256
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=0

		elif [[ $HW_REVISION_CODE == *'0013' ]]; then

			HW_RELEASE_DATE='Q1 2015'
			G_HW_MODEL_DESCRIPTION+='B+'
			HW_PCB_REVISION_CODE='1.2'
			HW_MEMORY_SIZE=512
			HW_MANUFACTURER_NAME='Unknown'
			G_HW_MODEL=1

		elif [[ $HW_REVISION_CODE == *'a01041' ]]; then

			HW_RELEASE_DATE='Q1 2015'
			G_HW_MODEL_DESCRIPTION+='2 Model B'
			HW_PCB_REVISION_CODE='1.1'
			HW_MEMORY_SIZE=1024
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=2

		elif [[ $HW_REVISION_CODE == *'a020a0' ]]; then

			HW_RELEASE_DATE='Q1 2017'
			G_HW_MODEL_DESCRIPTION+='CM 3'
			HW_PCB_REVISION_CODE='1.0'
			HW_MEMORY_SIZE=1024
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=3

		elif [[ $HW_REVISION_CODE == *'a21041' ]]; then

			HW_RELEASE_DATE='Q1 2015'
			G_HW_MODEL_DESCRIPTION+='2 Model B'
			HW_PCB_REVISION_CODE='1.1'
			HW_MEMORY_SIZE=1024
			HW_MANUFACTURER_NAME='Embest, China'
			G_HW_MODEL=2

		elif [[ $HW_REVISION_CODE == *'a02082' ]]; then

			HW_RELEASE_DATE='Q1 2016'
			G_HW_MODEL_DESCRIPTION+='3 Model B'
			HW_PCB_REVISION_CODE='1.2'
			HW_MEMORY_SIZE=1024
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=3
			HW_ONBOARD_WIFI=1

		elif [[ $HW_REVISION_CODE == *'a22042' ]]; then

			HW_RELEASE_DATE='Q1 2016'
			G_HW_MODEL_DESCRIPTION+='2 Model B'
			HW_PCB_REVISION_CODE='1.2'
			HW_MEMORY_SIZE=1024
			HW_MANUFACTURER_NAME='Embest, China'
			G_HW_MODEL=2

		elif [[ $HW_REVISION_CODE == *'a22082' ]]; then

			HW_RELEASE_DATE='Q1 2016'
			G_HW_MODEL_DESCRIPTION+='3 Model B'
			HW_PCB_REVISION_CODE='1.2'
			HW_MEMORY_SIZE=1024
			HW_MANUFACTURER_NAME='Embest, China'
			G_HW_MODEL=3
			HW_ONBOARD_WIFI=1

		elif [[ $HW_REVISION_CODE == *'a32082' ]]; then

			HW_RELEASE_DATE='Q4 2016'
			G_HW_MODEL_DESCRIPTION+='3 Model B'
			HW_PCB_REVISION_CODE='1.2'
			HW_MEMORY_SIZE=1024
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=3
			HW_ONBOARD_WIFI=1

		elif [[ $HW_REVISION_CODE == *'900092' ]]; then

			HW_RELEASE_DATE='Q4 2015'
			G_HW_MODEL_DESCRIPTION+='Zero'
			HW_PCB_REVISION_CODE='1.2'
			HW_MEMORY_SIZE=512
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=1

		elif [[ $HW_REVISION_CODE == *'900093' ]]; then

			HW_RELEASE_DATE='Q2 2016'
			G_HW_MODEL_DESCRIPTION+='Zero'
			HW_PCB_REVISION_CODE='1.3'
			HW_MEMORY_SIZE=512
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=1

		elif [[ $HW_REVISION_CODE == *'9000c1' ]]; then

			HW_RELEASE_DATE='Q1 2017'
			G_HW_MODEL_DESCRIPTION+='Zero W'
			HW_PCB_REVISION_CODE='1.1'
			HW_MEMORY_SIZE=512
			HW_MANUFACTURER_NAME='Sony'
			G_HW_MODEL=1
			HW_ONBOARD_WIFI=1

		elif [[ $HW_REVISION_CODE == *'a52082' ]]; then

			HW_RELEASE_DATE='Q1 2018'
			G_HW_MODEL_DESCRIPTION+='3 Model B'
			HW_PCB_REVISION_CODE='1.2'
			HW_MEMORY_SIZE=1024
			HW_MANUFACTURER_NAME='Stadium'
			G_HW_MODEL=3
			HW_ONBOARD_WIFI=1

		elif [[ $HW_REVISION_CODE == *'a020d3' ]]; then

			HW_RELEASE_DATE='Q1 2018'
			G_HW_MODEL_DESCRIPTION+='3 Model B+'
			HW_PCB_REVISION_CODE='1.3'
			HW_MEMORY_SIZE=1024
			HW_MANUFACTURER_NAME='Sony UK'
			G_HW_MODEL=3
			HW_ONBOARD_WIFI=1

		elif [[ $HW_REVISION_CODE == *'9020e0' ]]; then

			HW_RELEASE_DATE='Q3 2018'
			G_HW_MODEL_DESCRIPTION+='3 Model A+'
			HW_PCB_REVISION_CODE='1.0'
			HW_MEMORY_SIZE=512
			HW_MANUFACTURER_NAME='Sony UK'
			G_HW_MODEL=3
			HW_ONBOARD_WIFI=1

		fi

	}

	#	NB: PLEASE ENSURE HW_MODEL INDEX ENTRIES MATCH : PREP, dietpi-obtain_hw_model, dietpi-survey_results,
	#	NBB: DO NOT REORDER INDEX's. These are now fixed and will never change (due to survey results etc)
	Obtain_HW_Info(){

		# Systems that use /etc/.dietpi_hw_model_identifier for G_HW_MODEL
		if [[ -f $FP_G_HW_MODEL_INDENTIFIER ]]; then

			G_HW_MODEL=$(sed -n 1p $FP_G_HW_MODEL_INDENTIFIER)

			# Beagle Bone Black
			if (( $G_HW_MODEL == 71 )); then

				G_HW_MODEL_DESCRIPTION='BBB'

			# Sparky SBC
			elif (( $G_HW_MODEL == 70 )); then

				G_HW_MODEL_DESCRIPTION='Sparky SBC'

			# Firefly RK3399
			elif (( $G_HW_MODEL == 69 )); then

				G_HW_MODEL_DESCRIPTION='Firefly RK3399'
				G_HW_CPUID=3

			# NanoPC T4
			elif (( $G_HW_MODEL == 68 )); then

				G_HW_MODEL_DESCRIPTION='NanoPC T4'
				G_HW_CPUID=3

			# NanoPi K1 Plus
			elif (( $G_HW_MODEL == 67 )); then

				G_HW_MODEL_DESCRIPTION='NanoPi K1 Plus'
				G_HW_CPUID=2

			# NanoPi M1 Plus
			elif (( $G_HW_MODEL == 66 )); then

				G_HW_MODEL_DESCRIPTION='NanoPi M1 Plus'
				G_HW_CPUID=1

			# NanoPi NEO 2
			elif (( $G_HW_MODEL == 65 )); then

				G_HW_MODEL_DESCRIPTION='NanoPi NEO 2'
				G_HW_CPUID=2

			# NanoPi NEO Air
			elif (( $G_HW_MODEL == 64 )); then

				G_HW_MODEL_DESCRIPTION='NanoPi NEO Air'
				G_HW_CPUID=1

			# NanoPi M1
			elif (( $G_HW_MODEL == 63 )); then

				G_HW_MODEL_DESCRIPTION='NanoPi M1/T1'
				G_HW_CPUID=1

			# NanoPi M3
			elif (( $G_HW_MODEL == 62 )); then

				G_HW_MODEL_DESCRIPTION='NanoPi M3/T3/F3'

			# NanoPi M2
			elif (( $G_HW_MODEL == 61 )); then

				G_HW_MODEL_DESCRIPTION='NanoPi M2/T2'

			# NanoPi Neo
			elif (( $G_HW_MODEL == 60 )); then

				G_HW_MODEL_DESCRIPTION='NanoPi Neo'
				G_HW_CPUID=1

			# BananaPi (1st Gen)
			elif (( $G_HW_MODEL == 53 )); then

				G_HW_MODEL_DESCRIPTION='BananaPi'

			# Asus Tinker Board
			elif (( $G_HW_MODEL == 52 )); then

				G_HW_MODEL_DESCRIPTION='Asus Tinker Board'

			# BananaPi Pro
			elif (( $G_HW_MODEL == 51 )); then

				G_HW_MODEL_DESCRIPTION='BananaPi Pro'

			# BananaPi M2+
			elif (( $G_HW_MODEL == 50 )); then

				G_HW_MODEL_DESCRIPTION='BananaPi M2+'
				G_HW_CPUID=1

			# Pinebook A64
			elif (( $G_HW_MODEL == 44 )); then

				G_HW_MODEL_DESCRIPTION='Pinebook A64'

			# Rock64
			elif (( $G_HW_MODEL == 43 )); then

				G_HW_MODEL_DESCRIPTION='Rock64'

			# RockPro64
			elif (( $G_HW_MODEL == 42 )); then

				G_HW_MODEL_DESCRIPTION='RockPro64'
				G_HW_CPUID=3

			# OrangePi PC Plus
			elif (( $G_HW_MODEL == 41 )); then

				G_HW_MODEL_DESCRIPTION='OrangePi PC Plus'
				G_HW_CPUID=1

			# PineA64
			elif (( $G_HW_MODEL == 40 )); then

				G_HW_MODEL_DESCRIPTION='Pine A64'

			# LeMaker Guitar
			elif (( $G_HW_MODEL == 39 )); then

				G_HW_MODEL_DESCRIPTION='LeMaker Guitar'

			# OrangePi PC 2
			elif (( $G_HW_MODEL == 38 )); then

				G_HW_MODEL_DESCRIPTION='OPi PC2'
				G_HW_CPUID=2

			# OrangePi Prime
			elif (( $G_HW_MODEL == 37 )); then

				G_HW_MODEL_DESCRIPTION='OPi Prime'
				G_HW_CPUID=2

			# OrangePi Win
			elif (( $G_HW_MODEL == 36 )); then

				G_HW_MODEL_DESCRIPTION='OPi Win'

			# OrangePi Zero Plus 2 (h3/h5)
			elif (( $G_HW_MODEL == 35 )); then

				G_HW_MODEL_DESCRIPTION='OPi Zero 2 Plus'
				G_HW_CPUID=1

			# OrangePi Plus
			elif (( $G_HW_MODEL == 34 )); then

				G_HW_MODEL_DESCRIPTION='OrangePi Plus'
				G_HW_CPUID=1

			# OrangePi Lite
			elif (( $G_HW_MODEL == 33 )); then

				G_HW_MODEL_DESCRIPTION='OrangePi Lite'
				G_HW_CPUID=1

			# OrangePi Zero
			elif (( $G_HW_MODEL == 32 )); then

				G_HW_MODEL_DESCRIPTION='OrangePi Zero'
				#G_HW_CPUID=1 # H2+

			# OrangePi One
			elif (( $G_HW_MODEL == 31 )); then

				G_HW_MODEL_DESCRIPTION='OrangePi One'
				G_HW_CPUID=1

			# OrangePi Pc
			elif (( $G_HW_MODEL == 30 )); then

				G_HW_MODEL_DESCRIPTION='OrangePi PC'
				G_HW_CPUID=1

			# Generic device (eg: unknown to DietPi)
			elif (( $G_HW_MODEL == 22 )); then

				G_HW_MODEL_DESCRIPTION='Generic Device'
				IMAGE_ADDITIONAL_CREDITS='You!'

			# x86_64 native PC
			elif (( $G_HW_MODEL == 21 )); then

				G_HW_MODEL_DESCRIPTION='Native PC'

			# VM
			elif (( $G_HW_MODEL == 20 )); then

				G_HW_MODEL_DESCRIPTION='Virtual Machine'

			# Odroid N2
			elif (( $G_HW_MODEL == 15 )); then

				G_HW_MODEL_DESCRIPTION='Odroid N2'
				G_HW_CPUID=4
				#IMAGE_ADDITIONAL_CREDITS='Meveric'

			# Odroid N1
			elif (( $G_HW_MODEL == 14 )); then

				G_HW_MODEL_DESCRIPTION='Odroid N1'
				G_HW_CPUID=3
				#IMAGE_ADDITIONAL_CREDITS='Meveric'

			# Odroid U3
			elif (( $G_HW_MODEL == 13 )); then

				G_HW_MODEL_DESCRIPTION='Odroid U3'
				#IMAGE_ADDITIONAL_CREDITS='Meveric'

			# Odroid C2
			elif (( $G_HW_MODEL == 12 )); then

				G_HW_MODEL_DESCRIPTION='Odroid C2'
				IMAGE_ADDITIONAL_CREDITS='Meveric'

			# Odroid XU3/XU4/HC1/HC2
			elif (( $G_HW_MODEL == 11 )); then

				G_HW_MODEL_DESCRIPTION='Odroid XU3/XU4/HC1/HC2'
				IMAGE_ADDITIONAL_CREDITS='Meveric'

			# Odroid C1
			elif (( $G_HW_MODEL == 10 )); then

				G_HW_MODEL_DESCRIPTION='Odroid C1'
				#IMAGE_ADDITIONAL_CREDITS='Meveric'

			fi

		# RPi
		elif grep -qi '^ID=raspbian' /etc/os-release; then

			#Grab hardware description from rpi_boardinfo
			RPi_BoardInfo

		fi

		# Get distro index
		if grep -qi 'jessie' /etc/os-release; then

			G_DISTRO=3

		elif grep -qi 'stretch' /etc/os-release; then

			G_DISTRO=4

		elif grep -qi 'buster' /etc/os-release; then

			G_DISTRO=5

		fi

		# Generate UUID if it does not exist
		if [[ -f '/DietPi/dietpi/.hw_model' ]]; then

			HW_UUID=$(mawk 'NR==5 {print}' /DietPi/dietpi/.hw_model)

		else

			HW_UUID=$(</proc/sys/kernel/random/uuid)

		fi

		# Obtain hardware CPU architecture
		if [[ $G_HW_ARCH_DESCRIPTION == 'armv6l' ]]; then

			G_HW_ARCH=1

		elif [[ $G_HW_ARCH_DESCRIPTION == 'armv7l' ]]; then

			G_HW_ARCH=2

		elif [[ $G_HW_ARCH_DESCRIPTION == 'aarch64' ]]; then

			G_HW_ARCH=3

		elif [[ $G_HW_ARCH_DESCRIPTION == 'x86_64' ]]; then

			G_HW_ARCH=10

		# - Unknown arch for DietPi, inform user by adding 'unknown'.
		else

			G_HW_ARCH_DESCRIPTION+=' (Unknown)'

		fi

		# - Add HW arch to HW desc
		G_HW_MODEL_DESCRIPTION+=" ($G_HW_ARCH_DESCRIPTION)"

		# Save data
		echo "$G_HW_MODEL
$G_HW_MODEL_DESCRIPTION
$G_DISTRO
$ROOTFS_DEVICE_PATH
$HW_UUID
$G_HW_ARCH
$G_HW_ARCH_DESCRIPTION
$IMAGE_ADDITIONAL_CREDITS
$G_HW_CPUID
$HW_ONBOARD_WIFI
HW_MEMORY_SIZE=$HW_MEMORY_SIZE" > /DietPi/dietpi/.hw_model

		# - RPi extras
		(( $G_HW_MODEL < 10 )) && echo "$HW_REVISION_CODE
HW_RELEASE_DATE=$HW_RELEASE_DATE
HW_PCB_REVISION_CODE=$HW_PCB_REVISION_CODE
HW_MANUFACTURER_NAME=$HW_MANUFACTURER_NAME" >> /DietPi/dietpi/.hw_model

	}

	#-----------------------------------------------------------------------------------
	#Main
	Obtain_HW_Info
	#-----------------------------------------------------------------------------------
	exit 0
	#-----------------------------------------------------------------------------------

}
