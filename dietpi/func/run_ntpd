#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Function:
	# - Update ntpd
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Launches Systemd-timesyncd time sync update
	#
	# Usage:
	# - /DietPi/dietpi/func/run_ntpd
	# - /DietPi/dietpi/func/run_ntpd 1 | Same as above, resets any pre-existing sucessful synced flag before running
	#////////////////////////////////////

	#Import DietPi-Globals ---------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_CHECK_ROOT_USER
	export G_PROGRAM_NAME='DietPi-Run_ntpd'
	G_INIT
	#Import DietPi-Globals ---------------------------------------------------------------

	INPUT=0
	G_CHECK_VALIDINT $1 && INPUT=$1

	EXIT_CODE=-1
	FP_EXIT_CODE='/DietPi/dietpi/.timesync_exit_status'

	NTPD_UPDATE_MODE=$(grep -m1 '^[[:blank:]]*CONFIG_NTP_MODE=' /DietPi/dietpi.txt | sed 's/^.*=//')
	MAX_LOOPS_CHECK=${MAX_LOOPS_CHECK:-60} #*2 = seconds

	Update_NTPD(){

		#systemd-timesyncd
		if (( $NTPD_UPDATE_MODE >= 1 && $NTPD_UPDATE_MODE <= 4 )); then

			G_RUN_CMD systemctl restart systemd-timesyncd

			local current_loop=1

			while true
			do

				#NB: Following will always report "Synced", once systemd has completed it once
				# - Jessie: "using", Stretch+: "synchronized to"
				if systemctl status systemd-timesyncd | grep -qiE '^[[:blank:]]*status: "(synchronized to|using) time server'; then

					G_DIETPI-NOTIFY 0 'NTPD: systemd-timesyncd synced'
					if (( $NTPD_UPDATE_MODE >= 1 && $NTPD_UPDATE_MODE <= 3 )); then

						systemctl stop systemd-timesyncd
						#systemctl stop systemd-timedated

					fi

					EXIT_CODE=0
					break

				elif (( $current_loop >= $MAX_LOOPS_CHECK )); then

					G_DIETPI-NOTIFY 2 'NTPD: time out waiting for systemd-timesyncd'
					EXIT_CODE=1
					break

				else

					G_DIETPI-NOTIFY 2 "NTPD: Waiting for completion of systemd-timesyncd ($current_loop/$MAX_LOOPS_CHECK)"
					sleep 2
					((current_loop++))

				fi

			done

		#other method: assume status is ok
		else

			G_DIETPI-NOTIFY 0 'NTPD: manual mode detected'
			EXIT_CODE=0

		fi

		# - log status of completion, prevent software installs: https://github.com/Fourdee/DietPi/issues/786
		echo $EXIT_CODE > $FP_EXIT_CODE

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	#Reset and force new sync?
	if (( $INPUT == 1 )); then

		rm $FP_EXIT_CODE &> /dev/null

	fi

	#Only run timesync check once, for each boot session.
	if [[ -f $FP_EXIT_CODE ]] && (( $(<$FP_EXIT_CODE) == 0 )); then

		EXIT_CODE=0

	else

		Update_NTPD

	fi

	#-----------------------------------------------------------------------------------
	#Always return status
	G_DIETPI-NOTIFY -1 $EXIT_CODE 'NTPD: time sync |'
	if (( $EXIT_CODE != 0 )); then

		if (( $NTPD_UPDATE_MODE >= 1 && $NTPD_UPDATE_MODE <= 4 )); then

			G_DIETPI-NOTIFY 2 'NTPD: Please check the service status for more information:'
			G_DIETPI-NOTIFY 2 'NTPD: systemctl status systemd-timesyncd -l'

		else

			echo -e 'Should never occur'

		fi

	fi

	#-----------------------------------------------------------------------------------
	#return exit code
	exit $EXIT_CODE
	#-----------------------------------------------------------------------------------

}
