#!/bin/bash

	#////////////////////////////////////
	# DietPi Banner Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/func/dietpi-banner
	# - Checks /DietPi/dietpi/.update_available
	#
	# Usage:
	# - dietpi-banner 0 = top section only
	# - dietpi-banner 1 = top section and credits + clear
	#////////////////////////////////////

	# Import DietPi-Globals --------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_PROGRAM_NAME='DietPi-Banner'
	G_INIT
	# Import DietPi-Globals --------------------------------------------------------------

	INPUT=0
	disable_error=1 G_CHECK_VALIDINT "$1" && INPUT=$1

	#/////////////////////////////////////////////////////////////////////////////////////
	# Globals
	#/////////////////////////////////////////////////////////////////////////////////////
	DIETPI_VERSION="$G_DIETPI_VERSION_CORE.$G_DIETPI_VERSION_SUB.$G_DIETPI_VERSION_RC"
	[[ $G_GITBRANCH != 'master' ]] && DIETPI_VERSION+=" ($G_GITBRANCH)"

	IMAGE_ADDITIONAL_CREDITS=$(sed -n 8p /DietPi/dietpi/.hw_model)

	IP_ADDRESS=$(sed -n 4p /DietPi/dietpi/.network)
	IP_ADAPTER=$(sed -n 3p /DietPi/dietpi/.network)
	Update_Ip_Address(){

		/DietPi/dietpi/func/obtain_network_details
		IP_ADDRESS=$(sed -n 4p /DietPi/dietpi/.network)
		IP_ADAPTER=$(sed -n 3p /DietPi/dietpi/.network)

	}

	UPDATE_AVAILABLE=0
	UPDATE_AVAILABLE_VERSION='' # -1 = image required, other value = latest version
	Obtain_Update_Available(){

		# Update Available
		if [[ -f '/DietPi/dietpi/.update_available' ]]; then

			UPDATE_AVAILABLE=1
			UPDATE_AVAILABLE_VERSION=$(</DietPi/dietpi/.update_available)

		fi

	}

	Print_Header(){

		local green_line='\e[38;5;154m─────────────────────────────────────────────────────\e[0m'

		Obtain_Update_Available

		# Try to re-obtain IP if missing
		[[ $IP_ADDRESS ]] || Update_Ip_Address

		# Update Available?
		local text_update_available_date=''
		if (( $UPDATE_AVAILABLE )); then

			if [[ $UPDATE_AVAILABLE_VERSION == '-1' ]]; then

				text_update_available_date='\e[1;33mImage available\e[0m'

			else

				text_update_available_date='\e[1;33mUpdate available\e[0m'

			fi

		else

			text_update_available_date="$(date +"%a %x - %R")"

		fi

		echo -e "\
 $green_line
 \e[1mDietPi v$DIETPI_VERSION\e[0m \e[90m| $text_update_available_date\e[0m
 $green_line
 \e[1m$G_HW_MODEL_DESCRIPTION\e[0m \e[90m| $(print_full_info=1 G_OBTAIN_CPU_TEMP)\e[0m
 $green_line
 \e[1m$IP_ADAPTER ($IP_ADDRESS)\e[0m
 $green_line
"

	}

	Credits_Print(){

		echo -e '\e[90m DietPi Team     : MichaIng (lead), Daniel Knight (founder)\e[0m'

		local fp_prep_info='/DietPi/dietpi/.prep_info'
		if [[ -f $fp_prep_info ]]; then

			local image_creator=$(sed -n 1p $fp_prep_info)
			local preimage_name=$(sed -n 2p $fp_prep_info)
			[[ $image_creator == '0' ]] && image_creator='DietPi Core Team'

			echo -e "\e[90m Image           : $image_creator (pre-image: $preimage_name)\e[0m"

			IMAGE_ADDITIONAL_CREDITS=''

		fi

		echo -e '\e[90m Web             : https://DietPi.com | https://twitter.com/dietpi_
 Patreon Legends : PINE64 community
 Donate          : https://DietPi.com/#donate'

		[[ $IMAGE_ADDITIONAL_CREDITS ]] && echo -e "\n\ Device image possible thanks to: $IMAGE_ADDITIONAL_CREDITS"

		echo -e ' DietPi Hosting  : Powered by https://MyVirtualServer.com\e[0m\n
\e[1m dietpi-launcher\e[0m  = All the DietPi programs in one place.
\e[1m dietpi-config\e[0m    = Feature rich configuration tool for your device.
\e[1m dietpi-software\e[0m  = Select optimized software for installation.'

		# Update available?
		if (( $UPDATE_AVAILABLE )); then

			if [[ $UPDATE_AVAILABLE_VERSION = '-1' ]]; then

				echo -e '\n\e[1;31m Updated DietPi image is available, please download it:\e[0m\n https://dietpi.com/download\n'

			else

				echo -e "\e[1m dietpi-update\e[0m    = \e[1;31mRun now to update DietPi (from v$DIETPI_VERSION to v$UPDATE_AVAILABLE_VERSION).\e[0m"

			fi

		fi

		echo -e '\e[1m htop\e[0m             = Resource monitor.
\e[1m cpu\e[0m              = Shows CPU information and stats.\n'

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	if (( $INPUT == 0 )); then

		Print_Header

	elif (( $INPUT == 1 )); then

		printf '\ec' # clear current terminal screen
		Print_Header
		Credits_Print

	fi

	#-----------------------------------------------------------------------------------
	exit 0
	#-----------------------------------------------------------------------------------
