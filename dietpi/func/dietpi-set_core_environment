#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Function:
	# - Configures core/basic folders/permissions/services etc for DietPi a environment
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Script does not require a DietPi ready system to exec, can be used in PREP_SYSTEM
	# - DietPi sourcecode must exist in /boot or /DietPi
	# - Not everything for the DietPi env is contained here, only the core/critial stuff, to prevent dupe code in patches/PREP_SYSTEM
	#
	# Usage:
	# - /boot/dietpi/func/dietpi-set_core_environment
	# - /DietPi/dietpi/func/dietpi-set_core_environment
	#////////////////////////////////////

	#Import DietPi-Globals -------------------------------------------------------------
	#. $FP_SCRIPTS/dietpi/func/dietpi-globals # Not required/compatible
	#Import DietPi-Globals -------------------------------------------------------------

	if (( $UID != 0 )); then

		echo -e 'Error: Root privileges required. Please run the command with "sudo"\n'
		exit 1

	fi

	FP_SCRIPTS='/boot'
	if [ -f /DietPi/dietpi/dietpi-software ]; then

		FP_SCRIPTS='/DietPi'

	fi

	DIETPI_USERNAME='dietpi'
	DIETPI_PASSWORD='dietpi'

	#Near copy of useradd in dietpi-set_software, however, to support use in non-dietpi ready system, we manually need it here.
	Create_DietPi_User(){

		mkdir -p /home
		useradd -m -s /bin/bash "$DIETPI_USERNAME"
		chpasswd <<< "$DIETPI_USERNAME:$DIETPI_PASSWORD"

		#	Copy existing profile/bashrc
		cp /root/.profile /home/$DIETPI_USERNAME/
		cp /root/.bashrc /home/$DIETPI_USERNAME/

		#	Sudo up dietpi login script
		sed -i '/^\/DietPi\/dietpi\/login/c\sudo \/DietPi\/dietpi\/login' /home/$DIETPI_USERNAME/.bashrc

		chown -R $DIETPI_USERNAME:$DIETPI_USERNAME /home/$DIETPI_USERNAME

		#	Allow sudo without pw
		if (( ! $(cat /etc/sudoers | grep -ci -m1 "^$DIETPI_USERNAME[[:space:]]") )); then

			cat << _EOF_ >> /etc/sudoers
$DIETPI_USERNAME ALL=NOPASSWD: ALL
_EOF_

		fi

		#	Same groups as user pi
		local group_array=()
		group_array+=('input')
		group_array+=('netdev')
		group_array+=('spi')
		group_array+=('i2c')
		group_array+=('gpio')
		group_array+=('tty')
		group_array+=('users')
		group_array+=('games')
		group_array+=('plugdev')
		group_array+=('video')
		group_array+=('audio')
		group_array+=('sudo')
		group_array+=('cdrom')
		group_array+=('dialout')
		group_array+=('adm')

		#	+ allow access to www-data
		group_array+=('www-data')

		for ((i=0; i<${#group_array[@]}; i++))
		do

			usermod -a -G ${group_array[$i]} $DIETPI_USERNAME &> /dev/null

		done

		unset group_array

	}

	#///////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#///////////////////////////////////////////////////////////////////////////////////
	$FP_SCRIPTS/dietpi/func/dietpi-notify 2 "Creating core DietPi environment, please wait..."

	#-----------------------------------------------------------------------------------
	#Bash

	$FP_SCRIPTS/dietpi/func/dietpi-notify 2 "Configuring .bashrc:"

	sed -i '/DietPi/d' /root/.bashrc
	cat << _EOF_ >> /root/.bashrc
/DietPi/dietpi/login
. /DietPi/dietpi/func/dietpi-globals
_EOF_

	$FP_SCRIPTS/dietpi/func/dietpi-notify 2 "Configuring /etc/bash.bashrc:"

	sed -i '/#DietPi_Entries/,$d' /etc/bash.bashrc
	sed -i '/LANG=/,$d' /etc/bash.bashrc # pre v160 images
	cat << _EOF_ >> /etc/bash.bashrc
#DietPi_Entries
# - LANG
export \$(cat /etc/default/locale | grep LANG=)

# - Define a default LD_LIBRARY_PATH for all systems
export LD_LIBRARY_PATH=/lib:/usr/lib:/usr/local/lib:/opt/vc/lib

# - DietPi Scripts
alias sudo='sudo ' # https://github.com/Fourdee/DietPi/issues/424
alias dietpi-process_tool='/DietPi/dietpi/dietpi-process_tool'
alias dietpi-letsencrypt='/DietPi/dietpi/dietpi-letsencrypt'
alias dietpi-autostart='/DietPi/dietpi/dietpi-autostart'
alias dietpi-cron='/DietPi/dietpi/dietpi-cron'
alias dietpi-launcher='/DietPi/dietpi/dietpi-launcher'
alias dietpi-cleaner='/DietPi/dietpi/dietpi-cleaner'
alias dietpi-morsecode='/DietPi/dietpi/dietpi-morsecode'
alias dietpi-sync='/DietPi/dietpi/dietpi-sync'
alias dietpi-backup='/DietPi/dietpi/dietpi-backup'
alias dietpi-bugreport='/DietPi/dietpi/dietpi-bugreport'
alias dietpi-services='/DietPi/dietpi/dietpi-services'
alias dietpi-config='/DietPi/dietpi/dietpi-config'
alias dietpi-software='/DietPi/dietpi/dietpi-software'
alias dietpi-update='/DietPi/dietpi/dietpi-update'
alias dietpi-drive_manager='/DietPi/dietpi/dietpi-drive_manager'
alias emulationstation='/opt/retropie/supplementary/emulationstation/emulationstation'
alias opentyrian='/usr/local/games/opentyrian/run'

alias cpu='/DietPi/dietpi/dietpi-cpuinfo'
alias dietpi-logclear='/DietPi/dietpi/dietpi-logclear'

# - Treesize
treesize()
{
     du -k --max-depth=1 | sort -nr | awk '
     BEGIN {
        split("KB,MB,GB,TB", Units, ",");
     }
     {
        u = 1;
        while (\$1 >= 1024)
        {
           \$1 = \$1 / 1024;
           u += 1;
        }
        \$1 = sprintf("%.1f %s", \$1, Units[u]);
        print \$0;
     }
    '
}
_EOF_

	#-----------------------------------------------------------------------------------
	#Create_DietPi_User

	$FP_SCRIPTS/dietpi/func/dietpi-notify 2 'Creating DietPi User Account:'

	Create_DietPi_User

	#-----------------------------------------------------------------------------------
	#UID bit for sudo
	# - https://github.com/Fourdee/DietPi/issues/794

	$FP_SCRIPTS/dietpi/func/dietpi-notify 2 'Configuring Sudo UID bit:'

	chmod 4755 $(which sudo)

	#-----------------------------------------------------------------------------------
	#Dir's

	$FP_SCRIPTS/dietpi/func/dietpi-notify 2 'Configuring DietPi Directories:'

	# - /etc/dietpi , in process of moving this over to /var/lib/dietpi and /var/tmp/dietpi
	mkdir -p /etc/dietpi

	# - /var/lib/dietpi : Core storage for installed non-standard APT software, outside of /mnt/dietpi_userdata
	mkdir -p /var/lib/dietpi
	chown dietpi:dietpi /var/lib/dietpi
	chmod 660 /var/lib/dietpi

	#	Storage locations for program specifc additional data
	mkdir -p /var/lib/dietpi/dietpi-autostart
	mkdir -p /var/lib/dietpi/dietpi-config
	mkdir -p /var/lib/dietpi/dietpi-software

	# - /var/tmp/dietpi : Temp storage saved during reboots, eg: logs outside of /var/log
	mkdir -p /var/tmp/dietpi/logs
	chown dietpi:dietpi /var/tmp/dietpi
	chmod 660 /var/tmp/dietpi

	# - /DietPi RAMdisk
	mkdir -p /DietPi
	chown dietpi:dietpi /DietPi
	chmod 660 /DietPi

	# - /mnt/dietpi_userdata : DietPi userdata
	mkdir -p /mnt/dietpi_userdata
	chown dietpi:dietpi /mnt/dietpi_userdata
	chmod 660 /mnt/dietpi_userdata

	# - Networked drives
	mkdir -p /mnt/samba
	mkdir -p /mnt/ftp_client
	mkdir -p /mnt/nfs_client

	#-----------------------------------------------------------------------------------
	#Services

	$FP_SCRIPTS/dietpi/func/dietpi-notify 2 'Configuring DietPi Services:'

	cat << _EOF_ > /etc/systemd/system/dietpi-ramdisk.service
[Unit]
Description=DietPi-RAMdisk
Before=rsyslog.service syslog.service
After=local-fs.target

[Service]
Type=forking
RemainAfterExit=yes
ExecStart=/bin/bash -c '/boot/dietpi/dietpi-ramdisk 0 | tee -a /var/tmp/dietpi/logs/dietpi-ramdisk.log'
ExecStop=/bin/bash -c '/DietPi/dietpi/dietpi-ramdisk 1 | tee -a /var/tmp/dietpi/logs/dietpi-ramdisk.log'

[Install]
WantedBy=local-fs.target
_EOF_
	systemctl daemon-reload
	systemctl enable dietpi-ramdisk.service

	cat << _EOF_ > /etc/systemd/system/dietpi-ramlog.service
[Unit]
Description=DietPi-RAMlog
Before=rsyslog.service syslog.service
After=local-fs.target

[Service]
Type=forking
RemainAfterExit=yes
ExecStart=/bin/bash -c '/boot/dietpi/dietpi-ramlog 0'
ExecStop=/bin/bash -c '/DietPi/dietpi/dietpi-ramlog 1'

[Install]
WantedBy=local-fs.target
_EOF_
	systemctl daemon-reload
	systemctl enable dietpi-ramlog.service

	cat << _EOF_ > /etc/systemd/system/dietpi-boot.service
[Unit]
Description=DietPi-Boot
After=network-online.target network.target networking.service dietpi-ramdisk.service dietpi-ramlog.service
Requires=dietpi-ramdisk.service

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/bin/bash -c '/DietPi/dietpi/boot'
StandardOutput=tty

[Install]
WantedBy=multi-user.target
_EOF_
	systemctl enable dietpi-boot.service
	systemctl daemon-reload

	update-rc.d -f rc.local remove &> /dev/null
	rm /etc/init.d/rc.local &> /dev/null
	rm /lib/systemd/system/rc-local.service &> /dev/null
	cat << _EOF_ > /etc/systemd/system/rc-local.service
[Unit]
Description=/etc/rc.local Compatibility
After=dietpi-boot.service dietpi-ramdisk.service dietpi-ramlog.service
Requires=dietpi-boot.service dietpi-ramdisk.service

[Service]
Type=idle
ExecStart=/etc/rc.local
StandardOutput=tty
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
_EOF_
	systemctl enable rc-local.service
	systemctl daemon-reload

	cat << _EOF_ > /etc/rc.local
#!/bin/bash
#Precaution: Wait for DietPi Ramdisk to finish
while [ ! -f /DietPi/.ramdisk ]
do

    /DietPi/dietpi/func/dietpi-notify 2 "Waiting for DietPi-RAMDISK to finish mounting DietPi to RAM..."
    sleep 1

done

echo -e "\$(cat /proc/uptime | awk '{print \$1}') Seconds" > /var/log/boottime
if (( \$(cat /DietPi/dietpi/.install_stage) == 1 )); then

    /DietPi/dietpi/dietpi-services start

fi
/DietPi/dietpi/dietpi-banner 0
echo -e " Default Login:\n Username = root\n Password = dietpi\n"
exit 0
_EOF_
	chmod +x /etc/rc.local
	systemctl daemon-reload

	cat << _EOF_ > /etc/systemd/system/kill-ssh-user-sessions-before-network.service
[Unit]
Description=Shutdown all ssh sessions before network
DefaultDependencies=no
Before=network.target shutdown.target

[Service]
Type=oneshot
ExecStart=/bin/bash -c 'killall sshd &> /dev/null; killall dropbear &> /dev/null'

[Install]
WantedBy=poweroff.target halt.target reboot.target
_EOF_
	systemctl daemon-reload
	systemctl enable kill-ssh-user-sessions-before-network

	#-----------------------------------------------------------------------------------
	#Cron Jobs

	$FP_SCRIPTS/dietpi/func/dietpi-notify 2 "Configuring Cron:"

	cp $FP_SCRIPTS/dietpi/conf/cron.daily_dietpi /etc/cron.daily/dietpi
	chmod +x /etc/cron.daily/dietpi
	cp $FP_SCRIPTS/dietpi/conf/cron.hourly_dietpi /etc/cron.hourly/dietpi
	chmod +x /etc/cron.hourly/dietpi

	cat << _EOF_ > /etc/crontab
#Please use dietpi-cron to change cron start times
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# m h dom mon dow user  command
17 *    * * *   root    cd / && run-parts --report /etc/cron.hourly
25 1    * * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )
47 1    * * 7   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly )
52 1    1 * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly )
_EOF_

	# - ntp
	rm /etc/cron.daily/ntp &> /dev/null

	#-----------------------------------------------------------------------------------
	#Network

	$FP_SCRIPTS/dietpi/func/dietpi-notify 2 "Configuring: Prefer wlan/eth naming for networked devices:"

	# - Prefer to use wlan/eth naming for networked devices (eg: stretch)
	ln -sf /dev/null /etc/systemd/network/99-default.link
	#??? x86_64
	#	kernel cmd line with GRUB
	#	/etc/default/grub [replace] GRUB_CMDLINE_LINUX="net.ifnames=0"
	#								GRUB_TIMEOUT=0
	#???

	#-----------------------------------------------------------------------------------
	#MISC

	$FP_SCRIPTS/dietpi/func/dietpi-notify 2 "Disabling apt-daily services (prevents random APT cache lock):"

	systemctl mask apt-daily.service &> /dev/null
	systemctl mask apt-daily-upgrade.timer &> /dev/null

	$FP_SCRIPTS/dietpi/func/dietpi-notify 2 "Setting vm.swappiness=1:"

	sed -i '/vm.swappiness=/d' /etc/sysctl.conf
	echo -e "vm.swappiness=1" > /etc/sysctl.d/97-dietpi.conf

	#-----------------------------------------------------------------------------------
	$FP_SCRIPTS/dietpi/func/dietpi-notify 0 "Completed DietPi core environment"
	exit
	#-----------------------------------------------------------------------------------
}