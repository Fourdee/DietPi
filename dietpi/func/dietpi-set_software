#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Function:
	# - Enables control and applies settings for specific software and configs.
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Usage:
	#
	FP_SCRIPT='/DietPi/dietpi/func/dietpi-set_software'
	AVAIABLE_COMMANDS="
Available commands:
$FP_SCRIPT	locale			en_GB.UTF-8 / any other UTF-8 locale
$FP_SCRIPT	allo			eth_dhcp / eth_static
$FP_SCRIPT	useradd			X=create user with name X and default permissions, using global DietPi password (dietpi)
$FP_SCRIPT	userdel			X=delete user with name X
$FP_SCRIPT	apt-mirror		url / default
$FP_SCRIPT	ntpd-mode		[0-4] configures time sync mode (eg: daily/hourly/daemon)
$FP_SCRIPT	verify_dietpi.txt	Verifies dietpi.txt entries, adds missing entries if required
$FP_SCRIPT	passwords		NULL=Prompt user to change DietPi related passwords | X=optional set X as global password for future dietpi-software installations and \"root\" + \"dietpi\" login passwords.
$FP_SCRIPT	setpermissions		Applies required filesystem permissions to DietPi specific content, and, DietPi userdata directory for software installs
"
	#////////////////////////////////////

	#Grab inputs
	INPUT_MODE_NAME=$1
	INPUT_MODE_VALUE=$2

	INPUT_ADDITIONAL_1=$3
	INPUT_ADDITIONAL_2=$4
	INPUT_ADDITIONAL_3=$5
	INPUT_ADDITIONAL_4=$6

	#Import DietPi-Globals ---------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_PROGRAM_NAME='DietPi-Set_software'
	G_CHECK_ROOT_USER
	G_CHECK_ROOTFS_RW
	G_INIT
	#Import DietPi-Globals ---------------------------------------------------------------

	EXIT_CODE=0

	Unknown_Input_Name(){

		EXIT_CODE=1
		G_DIETPI-NOTIFY 2 "Unknown input name ($INPUT_MODE_NAME). Nothing has been applied."
		echo "$AVAIABLE_COMMANDS"

	}

	Unknown_Input_Mode(){

		EXIT_CODE=1
		G_DIETPI-NOTIFY 2 "Unknown input value ($INPUT_MODE_VALUE). Nothing has been applied."
		echo "$AVAIABLE_COMMANDS"

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# locale
	# NB: auto installs en_GB.UTF-8 alongside any input option
	#/////////////////////////////////////////////////////////////////////////////////////
	Locale_Main(){

		if [[ $INPUT_MODE_VALUE =~ 'UTF-8' ]]; then

			echo "$INPUT_MODE_VALUE UTF-8" > /etc/locale.gen

			# - Add en_GB.UTF-8 back in, if not chosen, as DietPi scripts require it
			[[ $INPUT_MODE_VALUE != 'en_GB.UTF-8' ]] && echo 'en_GB.UTF-8 UTF-8' >> /etc/locale.gen

			# - Remove exisiting settings that will break dpkg-reconfigure
			[[ -f /etc/default/locale ]] && rm /etc/default/locale

			G_RUN_CMD dpkg-reconfigure -f noninteractive locales

			# - Reassign locale, as in case of error (wrong locale variables) update-locale command will produce ugly errors.
			export LANG=en_GB.UTF8
			export LC_ALL=en_GB.UTF8

			# - Update /etc/default/locales with new values (not effective until next load of bash session, eg: logout/in)
			update-locale "LANG=$INPUT_MODE_VALUE"
			update-locale "LC_CTYPE=$INPUT_MODE_VALUE"
			update-locale "LC_TIME=$INPUT_MODE_VALUE"
			update-locale "LC_ALL=$INPUT_MODE_VALUE"

			G_CONFIG_INJECT 'AUTO_SETUP_LOCALE=' "AUTO_SETUP_LOCALE=$INPUT_MODE_VALUE" /DietPi/dietpi.txt

		else

			Unknown_Input_Mode

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Set Apt Mirror
	#/////////////////////////////////////////////////////////////////////////////////////
	AptMirror_Main(){

		if [[ $INPUT_MODE_VALUE ]]; then

			# - Jessie ARMv8: https://github.com/MichaIng/DietPi/issues/2665#issuecomment-477348864
			if (( $G_HW_ARCH == 3 && $G_DISTRO < 4 )); then

				INPUT_MODE_VALUE='http://archive.debian.org/debian/'

			# - Set defaults?
			elif [[ $INPUT_MODE_VALUE == 'default' ]]; then

				if (( $G_HW_MODEL < 10 )); then

					INPUT_MODE_VALUE='http://raspbian.raspberrypi.org/raspbian'

				else

					INPUT_MODE_VALUE='https://deb.debian.org/debian/'

				fi

			fi

			# - Set Raspbian
			if (( $G_HW_MODEL < 10 )); then

				echo "deb $INPUT_MODE_VALUE $G_DISTRO_NAME main contrib non-free rpi" > /etc/apt/sources.list
				echo "deb https://archive.raspberrypi.org/debian/ $G_DISTRO_NAME main ui" > /etc/apt/sources.list.d/raspi.list

				#	Update dietpi.txt entry
				G_CONFIG_INJECT 'CONFIG_APT_RASPBIAN_MIRROR=' "CONFIG_APT_RASPBIAN_MIRROR=$INPUT_MODE_VALUE" /DietPi/dietpi.txt

			# - Set Debian
			else

				cat << _EOF_ > /etc/apt/sources.list
deb $INPUT_MODE_VALUE $G_DISTRO_NAME main contrib non-free
deb $INPUT_MODE_VALUE $G_DISTRO_NAME-updates main contrib non-free
deb https://deb.debian.org/debian-security/ $G_DISTRO_NAME/updates main contrib non-free
deb $INPUT_MODE_VALUE $G_DISTRO_NAME-backports main contrib non-free
_EOF_

				#	Jessie: https://github.com/MichaIng/DietPi/issues/2665#issuecomment-477348864
				if (( $G_DISTRO < 4 )); then

					#	- Jessie APT reports warning on httpS://deb.debian.org
					sed -i 's|https://deb.debian.org|http://deb.debian.org|g' /etc/apt/sources.list
					#	- backports and updates have been dropped
					sed -Ei '/jessie-(backports|updates)/d' /etc/apt/sources.list
					#	- ARMv8 has been dropped from security repo
					(( $G_HW_ARCH == 3 )) && sed -i '/debian-security/d' /etc/apt/sources.list

				#	Buster, remove backports: https://github.com/MichaIng/DietPi/issues/1285#issuecomment-351830101
				elif (( $G_DISTRO > 4 )); then

					sed -i '/backports/d' /etc/apt/sources.list

				fi

				#	Update dietpi.txt entry
				G_CONFIG_INJECT 'CONFIG_APT_DEBIAN_MIRROR=' "CONFIG_APT_DEBIAN_MIRROR=$INPUT_MODE_VALUE" /DietPi/dietpi.txt

			fi

		else

			Unknown_Input_Mode

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Set NTPD Mode
	# NB: also sets mirror as defined in dietpi.txt CONFIG_NTP_MIRROR
	#/////////////////////////////////////////////////////////////////////////////////////
	NtpdMode_Main(){

		if G_CHECK_VALIDINT "$INPUT_MODE_VALUE" 0 4; then

			# - Reset global to disabled, prevents run_ntpd in dietpi-software
			sed -i '/CONFIG_NTP_MODE=/c\CONFIG_NTP_MODE=0' /DietPi/dietpi.txt

			# - Kill current
			killall -w /DietPi/dietpi/func/run_ntpd &> /dev/null

			local ntp_mirror=$(grep -m1 '^[[:blank:]]*CONFIG_NTP_MIRROR=' /DietPi/dietpi.txt | sed 's/^[^=]*=//')
			local ntp_mirror_entry='Servers='$ntp_mirror

			# - Default, lets timesyncd use DHCP server (Stretch+ only) or fallback to debian.pool.ntp.org.
			if [[ ${ntp_mirror,,} == default ]]; then

				ntp_mirror_entry='#Servers=0.debian.pool.ntp.org 1.debian.pool.ntp.org 2.debian.pool.ntp.org 3.debian.pool.ntp.org'

			# - Gateway, auto detect local gateway(s) (router) to use as NTP server.
			elif [[ ${ntp_mirror,,} == gateway ]]; then

				# NB: Turn output output into single line string via echo
				local gateway=$(echo $(ip r | mawk '/^default/ {print $3}'))
				if [[ $gateway ]]; then

					G_DIETPI-NOTIFY 0 "Gateway(s) detected: $gateway, adding as NTP server(s)."
					ntp_mirror_entry="Servers=$gateway"

				else

					G_DIETPI-NOTIFY 1 'No local gateway detected. No NTP mirror change will be applied.'
					EXIT_CODE=1
					return 1

				fi

			# - Add pool.ntp.org entries with subdomains "[0-3].", other entries without.
			elif [[ $ntp_mirror =~ 'pool.ntp.org' ]]; then

				ntp_mirror_entry='Servers='
				local i
				for i in $ntp_mirror
				do

					if [[ $i == *'pool.ntp.org' ]]; then

						ntp_mirror_entry+="0.$i 1.$i 2.$i 3.$i "

					else

						ntp_mirror_entry+="$i "

					fi

				done

			fi

			# - Set mirror
			cat << _EOF_ > /etc/systemd/timesyncd.conf
[Time]
$ntp_mirror_entry
_EOF_

			# - Daemon mode, dbus required for timedatectl, that users may expect
			if (( $INPUT_MODE_VALUE == 4 )); then

				G_AG_CHECK_INSTALL_PREREQ dbus
				systemctl enable systemd-timesyncd
				systemctl start systemd-timesyncd

			# - Else, disable systemd-timesyncd to let "run_ntpd" or other time sync system take control
			else

				systemctl stop systemd-timesyncd
				systemctl disable systemd-timesyncd

			fi

			# - Update DietPi.txt
			G_CONFIG_INJECT 'CONFIG_NTP_MODE=' "CONFIG_NTP_MODE=$INPUT_MODE_VALUE" /DietPi/dietpi.txt

		else

			Unknown_Input_Mode

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# allo
	#/////////////////////////////////////////////////////////////////////////////////////
	Allo_Main(){

		if [[ $INPUT_MODE_VALUE == 'eth_dhcp' ]]; then

			G_CONFIG_INJECT 'iface eth' 'iface eth0 inet dhcp' /etc/network/interfaces
			sed -i '0,/^.*dns-nameservers .*$/s//#dns-nameservers 8.8.8.8/' /etc/network/interfaces

		elif [[ $INPUT_MODE_VALUE == 'eth_static' ]]; then

			G_CONFIG_INJECT 'iface eth' 'iface eth0 inet static' /etc/network/interfaces
			G_CONFIG_INJECT 'address ' "address $INPUT_ADDITIONAL_1" /etc/network/interfaces
			G_CONFIG_INJECT 'gateway ' "gateway $INPUT_ADDITIONAL_2" /etc/network/interfaces
			G_CONFIG_INJECT 'netmask ' "netmask $INPUT_ADDITIONAL_3" /etc/network/interfaces
			G_CONFIG_INJECT 'dns-nameservers ' "dns-nameservers $INPUT_ADDITIONAL_4" /etc/network/interfaces

		else

			Unknown_Input_Mode

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Setpermissions_Main
	#/////////////////////////////////////////////////////////////////////////////////////
	Setpermissions_Main(){

		# - Failsafe, assure /var/tmp 777 permissions: https://github.com/MichaIng/DietPi/issues/1144#issuecomment-425758727
		chmod 777 /var/tmp

		# - DietPi-Software secure global_pw encrypted
		chown root:root /var/lib/dietpi/dietpi-software/.GLOBAL_PW.bin
		chmod 600 /var/lib/dietpi/dietpi-software/.GLOBAL_PW.bin

		# - /var/www / www-data
		chown -R www-data:www-data /var/www
		chmod -R 775 /var/www

		#Apply non-root permissions for files and folders in G_FP_DIETPI_USERDATA

		# - dietpi user
		#	Include symlinked locations via $G_FP_DIETPI_USERDATA/*
		chown -R dietpi:dietpi /home/dietpi $G_FP_DIETPI_USERDATA $G_FP_DIETPI_USERDATA/*
		chmod -R 775 $G_FP_DIETPI_USERDATA $G_FP_DIETPI_USERDATA/*

		# - Apply program specific permissions
		#	NB: Following should be ordered ascending by index to prevent dupes.

		# - Desktops
		chown -R 775 /var/lib/dietpi/dietpi-software/installed/desktop
		#	Set execute to prevent "untrusted" prompt in Mate, and possibily other desktops.
		chmod +x /usr/share/applications/*
		chmod +x /root/Desktop/*

		# - O!MPD, requires write permissions
		chmod -R 777 /var/www/ompd/tmp # Required for database update
		chmod -R 777 /var/www/ompd/stream # Required for streaming files
		chmod -R 777 /var/www/ompd/cache # Required for downloading files

		# - MPD
		chmod 0664 /var/log/mpd/mpd.log /etc/mpd.conf
		chmod -R 775 /var/lib/mpd $G_FP_DIETPI_USERDATA/.mpd_cache
		chown -R mpd:dietpi /etc/mpd.conf /var/log/mpd $G_FP_DIETPI_USERDATA/.mpd_cache /var/lib/mpd

		# - MyMPD
		chown -R mympd:dietpi /var/lib/mympd

		# - Mopidy
		chown -R mopidy:root $G_FP_DIETPI_USERDATA/mopidy

		# - Minidlna
		chown -R minidlna:dietpi $G_FP_DIETPI_USERDATA/.MiniDLNA_Cache

		# - AirSonic
		chown -R airsonic:dietpi $G_FP_DIETPI_USERDATA/airsonic

		# - MySQL data store
		chown -R mysql:mysql $G_FP_DIETPI_USERDATA/mysql
		chmod -R 770 $G_FP_DIETPI_USERDATA/mysql

		# - UrBackup
		chown -R urbackup:urbackup $G_FP_DIETPI_USERDATA/urbackup

		# - www-data
		chown -R www-data:www-data $G_FP_DIETPI_USERDATA/rpicam
		chown -R www-data:www-data $G_FP_DIETPI_USERDATA/pydio_data

		local datadir=$(grep -m1 '^[[:blank:]]*SOFTWARE_OWNCLOUD_DATADIR=' /DietPi/dietpi.txt | sed 's/^[^=]*=//')
		[[ $datadir ]] || datadir="$G_FP_DIETPI_USERDATA/owncloud_data"
		chown -R www-data:www-data "$datadir"

		datadir=$(grep -m1 '^[[:blank:]]*SOFTWARE_NEXTCLOUD_DATADIR=' /DietPi/dietpi.txt | sed 's/^[^=]*=//')
		[[ $datadir ]] || datadir="$G_FP_DIETPI_USERDATA/nextcloud_data"
		chown -R www-data:www-data "$datadir"

		# - Home Assistant Permissions
		#chown -R homeassistant:dietpi /home/homeassistant/.homeassistant
		#chown -R dietpi:dietpi $G_FP_DIETPI_USERDATA/homeassistant

		# - Minio
		chown -R minio-user:minio-user $G_FP_DIETPI_USERDATA/minio-data

		# - FuguHub
		chown -R bd:bd $G_FP_DIETPI_USERDATA/fuguhub-data/

		# - Nodered
		chown -R nodered:nodered $G_FP_DIETPI_USERDATA/node-red

		# - grafana
		chown -R grafana:grafana $G_FP_DIETPI_USERDATA/grafana /var/lib/grafana

		# - influxDB
		chown -R influxdb:influxdb $G_FP_DIETPI_USERDATA/influxdb

		# - gogs
		chown -R gogs:gogs /etc/gogs $G_FP_DIETPI_USERDATA/gogs-repo /var/log/gogs

		# - ubooquity
		chown -R ubooquity:dietpi $G_FP_DIETPI_USERDATA/ubooquity

		# - Mineos
		chown -R mineos:dietpi $G_FP_DIETPI_USERDATA/mineos /var/games/minecraft /etc/ssl/certs/mineos*

		# - cubrite
		chown -R cuberite:dietpi $G_FP_DIETPI_USERDATA/cubrite

		# - sickrage # pre-v6.20 compatibility
		[[ -d $G_FP_DIETPI_USERDATA/sickrage ]] && chown -R sickrage:dietpi $G_FP_DIETPI_USERDATA/sickrage
		[[ -f '/var/log/sickrage.log' ]] && chown sickrage:dietpi /var/log/sickrage.log

		# - Medusa
		chown -R medusa:dietpi $G_FP_DIETPI_USERDATA/medusa

		# - Sonarr
		chown -R sonarr:dietpi $G_FP_DIETPI_USERDATA/sonarr /opt/NzbDrone /var/log/sonarr

		# - Radarr
		chown -R radarr:dietpi $G_FP_DIETPI_USERDATA/radarr /opt/Radarr /var/log/radarr

		# - Lidarr
		chown -R lidarr:dietpi $G_FP_DIETPI_USERDATA/lidarr /opt/Lidarr /var/log/lidarr

		# - Tonido
		chown -R tonido:dietpi $G_FP_DIETPI_USERDATA/tonido /home/tonido

		# - NZBget
		chown -R nzbget:dietpi $G_FP_DIETPI_USERDATA/nzbget

		# - Roon Bridge
		chown -R roon:dietpi $G_FP_DIETPI_USERDATA/roon $G_FP_DIETPI_USERDATA/roonserver /var/log/roon

		# - GMrender
		chown gmrender:dietpi /var/log/gmrender.log

		# - PlexPy
		chown -R plexpy:plexpy /opt/plexpy
		chown -R plexpy:dietpi $G_FP_DIETPI_USERDATA/plexpy

		# - Deluge
		chown -R debian-deluged:debian-deluged $G_FP_DIETPI_USERDATA/deluge
		chown -R debian-deluged /var/log/deluged

		# - Jackett
		chown -R jackett:jackett /opt/jackett

		# - Koel
		chown -R koel:dietpi $G_FP_DIETPI_USERDATA/koel

		# - qBitTorrent
		chown -R qbittorrent:dietpi /home/qbittorrent

		# - rTorrent
		chown -R rtorrent:rtorrent $G_FP_DIETPI_USERDATA/rtorrent $G_FP_DIETPI_USERDATA/downloads/.session
		#	ruTorrent web access
		chown www-data:www-data /etc/.rutorrent-htaccess
		chmod 400 /etc/.rutorrent-htaccess

		# - FAHClient (Folding@Home)
		chown -R fahclient:dietpi $G_FP_DIETPI_USERDATA/fahclient /var/log/fahclient.log

		# - Sabnzbd
		chown -R sabnzbd:sabnzbd /etc/sabnzbd /var/log/sabnzbd $G_FP_DIETPI_USERDATA/downloads/sabnzbd*
		chown -R sabnzbd:dietpi $G_FP_DIETPI_USERDATA/downloads/{,in}complete

		# - Blynk
		chown -R blynk:dietpi $G_FP_DIETPI_USERDATA/blynk

		# - Pi-hole
		#	- NB: Git requies special permissions to allow "pihole -up".
		if [[ -d '/var/www/html/pihole' ]]; then

			cd /var/www/html/admin && git reset --hard HEAD
			cd /tmp/$G_PROGRAM_NAME

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Users
	#/////////////////////////////////////////////////////////////////////////////////////
	Useradd_Main(){

		if [[ $INPUT_MODE_VALUE ]]; then

			mkdir -p /home
			useradd -m -s /bin/bash "$INPUT_MODE_VALUE" -p "$(grep -m1 '^[[:blank:]]*AUTO_SETUP_GLOBAL_PASSWORD=' /DietPi/dietpi.txt | sed 's/^[^=]*=//')"

			#	Copy existing profile/bashrc
			cp /root/.profile /home/"$INPUT_MODE_VALUE"/
			cp /root/.bashrc /home/"$INPUT_MODE_VALUE"/

			chown -R "$INPUT_MODE_VALUE":"$INPUT_MODE_VALUE" /home/"$INPUT_MODE_VALUE"

			#	Allow sudo without pw
			if ! grep -q "^$INPUT_MODE_VALUE[[:space:]]" /etc/sudoers.d/dietpi; then

				cat << _EOF_ >> /etc/sudoers.d/dietpi
$INPUT_MODE_VALUE ALL=NOPASSWD: ALL
_EOF_

			fi

			#	Same groups as user pi
			local group_array=()
			group_array+=('input')
			group_array+=('netdev')
			group_array+=('spi')
			group_array+=('i2c')
			group_array+=('gpio')
			group_array+=('tty')
			group_array+=('users')
			group_array+=('games')
			group_array+=('plugdev')
			group_array+=('video')
			group_array+=('audio')
			group_array+=('sudo')
			group_array+=('cdrom')
			group_array+=('dialout')
			group_array+=('adm')

			#	+ allow access to www-data
			group_array+=('www-data')

			for ((i=0; i<${#group_array[@]}; i++))
			do

				usermod -a -G "${group_array[$i]}" "$INPUT_MODE_VALUE"

			done

			unset group_array

		else

			Unknown_Input_Mode

		fi

	}

	Userdel_Main(){

		if [[ $INPUT_MODE_VALUE ]]; then

			# - Delete $INPUT_MODE_VALUE
			userdel -f "$INPUT_MODE_VALUE"
			rm -R "/home/$INPUT_MODE_VALUE"

			# - Remove from sudoers
			sed -i "/^$INPUT_MODE_VALUE[[:space:]]/d" /etc/sudoers.d/dietpi

		else

			Unknown_Input_Mode

		fi

	}

	Verify_DietPi_Txt(){

		#Verify entries with git dietpi.txt
		local gitbranch=$(grep -m1 '^[[:blank:]]*DEV_GITBRANCH=' /DietPi/dietpi.txt | sed 's/^[^=]*=//')
		[[ $gitbranch ]] || gitbranch='master'

		INSTALL_URL="https://raw.githubusercontent.com/MichaIng/DietPi/$gitbranch/dietpi.txt"
		G_CHECK_URL "$INSTALL_URL"
		if (( ! $? )); then

			G_DIETPI-NOTIFY 0 'Patching dietpi.txt'
			l_message='Downloading current dietpi.txt' G_RUN_CMD wget "$INSTALL_URL" -O /tmp/dietpi.txt_patch

			local entry=0
			local value=0
			while read line
			do

				entry=$(grep '^[^#;/]' <<< "$line")

				if [[ $entry ]]; then

					value=${entry#*=}  #*=X
					entry=${entry%%=*} #X=*

					# - Patch new entry if required
					if ! grep -qi "^[[:blank:]]*$entry=" /DietPi/dietpi.txt; then

						G_DIETPI-NOTIFY 2 "Updating dietpi.txt with new entry: $entry=$value"
						echo "$entry=$value" >> /DietPi/dietpi.txt

					#else

						#G_DIETPI-NOTIFY 0 "Verified: $entry"

					fi

				fi

			done < /tmp/dietpi.txt_patch
			rm /tmp/dietpi.txt_patch

			G_DIETPI-NOTIFY 0 'dietpi.txt verification completed'

		else

			G_DIETPI-NOTIFY 1 "Failed to verify dietpi.txt, $INSTALL_URL is offline and/or inaccessible"

		fi

	}

	Passwords_Main(){

		local pw_dietpi_software=''
		local pw_root_dietpi_users=''

		#Automation/input mode, set and then apply input password to both dietpi-software and root/dietpi user passwords.
		if [[ $INPUT_MODE_VALUE ]]; then

			pw_dietpi_software=$INPUT_MODE_VALUE
			pw_root_dietpi_users=$INPUT_MODE_VALUE

		#Prompt to change
		else

			#DietPi-Software PW
			G_WHIP_YESNO 'Do you want to adjust the default global password for DietPi-Software installations and new unix users? We especially recommend to change the default password "dietpi". This does not affect any existing unix user login.\n
NB: This password will be saved and encrypted within /var/lib/dietpi/dietpi-software/.GLOBAL_PW.bin to be useable by DietPi scripts for e.g. web application and database logins. We highly recommend to adjust all passwords for web services and new unix users independently afterwards.'
			if (( ! $? )); then

				G_WHIP_PASSWORD "Please enter a new global password:\nNB: The following characters are not supported \$|\\\"'"
				pw_dietpi_software=$result
				unset result

			fi

			#Root/DietPi user PW
			G_WHIP_YESNO 'Change unix user passwords?\n\nDietPi has two accounts by default "root" and "dietpi". On first boot, both share the global password "dietpi", respectively the one set in dietpi.txt.\n
It is highly recommended to change this password, ideally, it should be different than the global DietPi-Software password.\n\nWould you like to change the login passwords for "root" and "dietpi"?'
			if (( ! $? )); then

				G_WHIP_PASSWORD 'Please enter a new unix user password:'
				pw_root_dietpi_users=$result
				unset result

			fi

		fi

		#Apply | dietpi-software PW
		if [[ $pw_dietpi_software ]]; then

			# - Nullify automated PW
			G_CONFIG_INJECT 'AUTO_SETUP_GLOBAL_PASSWORD=' 'AUTO_SETUP_GLOBAL_PASSWORD=Password has been encrypted and secured on rootFS' /DietPi/dietpi.txt

			mkdir -p /var/lib/dietpi/dietpi-software # Should already exist, failsafe

			# - Use new "pbkdf2" function on Buster to resolve warning about deprecated key derivation used: https://github.com/MichaIng/DietPi/issues/2213
			local pbkdf2=''
			(( $G_DISTRO > 4 )) && pbkdf2='-iter 10000'
			openssl enc -e -a -md sha256 -aes-256-cbc $pbkdf2 -salt -pass pass:'DietPiRocks!' -out /var/lib/dietpi/dietpi-software/.GLOBAL_PW.bin <<< $pw_dietpi_software

			Setpermissions_Main &> /dev/null

			G_DIETPI-NOTIFY 2 'Global password successfully changed'

		fi

		#Apply | Root/DietPi users PW
		if [[ $pw_root_dietpi_users ]]; then

			chpasswd <<< "root:$pw_root_dietpi_users"
			chpasswd <<< "dietpi:$pw_root_dietpi_users"
			G_DIETPI-NOTIFY 2 '"root" and "dietpi" login password successfully changed'

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	#-----------------------------------------------------------------------------------
	#info

	G_DIETPI-NOTIFY 3 "$G_PROGRAM_NAME" "$INPUT_MODE_NAME ($INPUT_MODE_VALUE)"

	#-----------------------------------------------------------------------------------
	if [[ $INPUT_MODE_NAME == 'apt-mirror' ]]; then

		AptMirror_Main

	elif [[ $INPUT_MODE_NAME == 'useradd' ]]; then

		Useradd_Main

	elif [[ $INPUT_MODE_NAME == 'userdel' ]]; then

		Userdel_Main

	elif [[ $INPUT_MODE_NAME == 'ntpd-mode' ]]; then

		NtpdMode_Main

	elif [[ $INPUT_MODE_NAME == 'allo' ]]; then

		Allo_Main

	elif [[ $INPUT_MODE_NAME == 'verify_dietpi.txt' ]]; then

		Verify_DietPi_Txt

	elif [[ $INPUT_MODE_NAME == 'locale' ]]; then

		Locale_Main

	elif [[ $INPUT_MODE_NAME == 'passwords' ]]; then

		Passwords_Main

	elif [[ $INPUT_MODE_NAME == 'setpermissions' ]]; then

		Setpermissions_Main &> /dev/null #as no file exist checks are done in bash (quicker to let the program report it missing), hide output

	else

		Unknown_Input_Name

	fi

	#-----------------------------------------------------------------------------------
	G_DIETPI-NOTIFY -1 $EXIT_CODE "$INPUT_MODE_NAME $INPUT_MODE_VALUE |"
	#-----------------------------------------------------------------------------------
	exit $EXIT_CODE
	#-----------------------------------------------------------------------------------
}
