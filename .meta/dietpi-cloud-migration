#!/bin/bash

(( $UID )) && echo -e '[\e[31mFAILED\e[0m] Root privileges required. Please run the command with "sudo".\n' && exit 1
echo -e '[\e[32m  OK  \e[0m] Root privileges verified.'

apt-get install -y rsync
(( $? )) && echo -e '[\e[31mFAILED\e[0m] Installation of rsync failed. Please check your internet connection, proper apt-get function or try to install it manually: "apt-get install -y rsync"\n' && exit 1
echo -e '[\e[32m  OK  \e[0m] Successfully installed rsync.'

run_backup(){

	echo '[ INFO ] Enabling maintenance mode...'
	sudo -u www-data php /var/www/$1/occ maintenance:mode --on
	(( $? )) && echo -e '[\e[31mFAILED\e[0m] Could not enable maintenance mode, please check running state of your instance and PHP functionality.\n' && exit 1

	fp_config="/var/www/$1/config/config.php"

	echo "[ INFO ] Scanning $fp_config for necessary information..."
	[[ ! -f $fp_config ]] && echo -e "[\e[31mFAILED\e[0m] File $fp_config not found, please check your installation.\n" && exit 1

	local fp_datadir=$(grep -m1 "^[[:blank:]]*'datadirectory'" $fp_config | mawk '{print $3}' | sed "s/[',]//g")
	local dbname=$(grep -m1 "^[[:blank:]]*'dbname'" $fp_config | mawk '{print $3}' | sed "s/[',]//g")
	local dbhost=$(grep -m1 "^[[:blank:]]*'dbhost'" $fp_config | mawk '{print $3}' | sed "s/[',]//g")
	local dbuser=$(grep -m1 "^[[:blank:]]*'dbuser'" $fp_config | mawk '{print $3}' | sed "s/[',]//g")
	local dbpass=$(grep -m1 "^[[:blank:]]*'dbpassword'" $fp_config | mawk '{print $3}' | sed "s/[',]//g")
	echo -e " - data directory:	$fp_datadir
 - database name:	$dbname
 - database hostname:	$dbhost
 - database username:	$dbuser
 - database password:	$dbpass"

	echo '[ INFO ] Backup database to data directory...'
	mysqldump -u"$dbuser" -h"$dbhost" -p"$dbpass" "$dbname" > "$fp_datadir"/dietpi-$1-database-backup.sql
	(( $? )) && echo -e '[\e[31mFAILED\e[0m] Database backup seems to have failed. Check state of your database server, check logs and in case repair table corruptions.\n' && exit 1
	echo -e "[\e[32m  OK  \e[0m] Successfully finished database backup to: $fp_datadir/dietpi-$1-database-backup.sql"

	echo '[ INFO ] Backup installation folder to data directory...'
	rsync -aHp --delete /var/www/$1/ "$fp_datadir"/dietpi-$1-installation-backup
	(( $? )) && echo -e '[\e[31mFAILED\e[0m] Rsync failed, check for error reasons and try again.\n' && exit 1
	echo -e "[\e[32m  OK  \e[0m] Successfully finished installation backup to: $fp_datadir/dietpi-$1-installation-backup/"

	if [[ $2 ]]; then

		echo '[ INFO ] You provided an additional backup location. Moving data directory...'
		[[ ! -d $2 ]] && echo -e "[\e[31mFAILED\e[0m] $2 is no directory, please check spelling and mount status of your desired backup location.\n" && exit 1

		rsync -aHp --delete "$fp_datadir"/ "$2"
		(( $? )) && echo -e '[\e[31mFAILED\e[0m] Rsync failed, check for error reasons and try again.\n' && exit 1
		echo -e "[\e[32m  OK  \e[0m] Successfully synced data directory to: $2"

	else

		echo '[ INFO ] You did not provide an additional backup location. We assume your data directory is already on an external drive, ready for migration? If not, move it there or rerun this script, providing the external backup location as argument.'

	fi

	echo -e "[\e[32m  OK  \e[0m] Backup successfully completed. On destination server, please move the whole data directory to the one, provided within /DietPi/dietpi.txt (default: \"/mnt/dietpi_userdata/$1_data\"), or create a symlink from there. On reinstallation, DietPi-Software will check this location for backups and in case automatically restore them."

}

### MAIN ###

[[ ! -f /DietPi/dietpi/.installed ]] && echo -e '[\e[31mFAILED\e[0m] No proper DietPi installation found or DietPi-RamDisk is not running. Please ensure you are executing this script from a functional DietPi system and "dietpi-ramdisk" is up.\n' && exit 1

if grep -q 'aSOFTWARE_INSTALL_STATE\[47\]=2' /DietPi/dietpi/.installed; then

	echo '[ INFO ] ownCloud installation found, preparing backup...'
	run_backup owncloud "$1"

fi

if grep -q 'aSOFTWARE_INSTALL_STATE\[114\]=2' /DietPi/dietpi/.installed; then

        echo '[ INFO ] Nextcloud installation found, preparing backup...'
        run_backup nextcloud "$1"

fi

[[ ! $fp_config ]] && echo -e "[\e[31mFAILED\e[0m] No ownCloud or Nextcloud installation found. Please verify that it was installed via dietpi-software, in case reinstall it, non of your existing data/settings will be overwritten.\n" && exit 1
